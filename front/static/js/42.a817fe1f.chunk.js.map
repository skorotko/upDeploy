{"version":3,"sources":["components/shared/PaginationBackend.js","components/shared/ModalToDelete.js","components/hoc/withModal.js","components/Admin/Platforms/TableRow.js","components/Admin/Platforms/Table.js","components/Admin/Platforms/CreateForm.js","components/Admin/Platforms/Platforms.js"],"names":["PaginationBackend","props","_this","Object","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","setPage","page","_this$props","totalItems","totalPages","pageSize","pager","state","getPager","setState","onChangePage","currentPage","startPage","endPage","Math","ceil","startIndex","endIndex","min","pages","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Array","keys","map","i","items","length","initialPage","prevProps","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_7__","className","reactstrap__WEBPACK_IMPORTED_MODULE_8__","disabled","reactstrap__WEBPACK_IMPORTED_MODULE_9__","onClick","index","key","active","Component","defaultProps","ModalToDelete","modal","isOpenModal","toggle","onRequestClose","title","name","onDelete","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","concat","reactstrap__WEBPACK_IMPORTED_MODULE_10__","color","withModal","WrappedComponent","_Component","_getPrototypeOf2","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_len","arguments","args","_key","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","toggleModal","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","nextProps","PlatformsTableRow","_ref","idx","id","react_default","Fragment","style","paddingLeft","ModalProvider","_ref2","showModal","hideModal","Button","margin","padding","backgroundColor","borderColor","PlatformsTable","platforms","platformsJSX","platform","TableRow","assign","colSpan","align","role","aria-label","Table","background","responsive","hover","scope","Row","Col","initialState","PlatformsCreateForm","handleInputChange","_ref$target","target","defineProperty","handleSubmit","event","preventDefault","onCreatePlatform","objectSpread","Form","onSubmit","FormGroup","row","Input","type","placeholder","onChange","WithModalPlatformsCreateForm","Links","totalPlatforms","perPage","createPlatform","addPlatform","then","toConsumableArray","console","log","removePlatform","deletePlatform","data","message","filter","getData","getDataForPlatformPage","platformsData","Count","Page","_this$state","marginBottom","fontSize","marginRight","Platforms_Table"],"mappings":"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","file":"static/js/42.a817fe1f.chunk.js","sourcesContent":["// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n\nconst propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})),\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  totalItems: PropTypes.number,\n  totalPages: PropTypes.number,\n  onChangePage: PropTypes.func\n};\n\nconst defaultProps = {\n  items: [],\n  initialPage: 1,\n  pageSize: 10,\n  totalItems: null,\n  totalPages: null,\n  onChangePage: () => null\n};\n\nclass PaginationBackend extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { pager: {} };\n  }\n\n  componentDidMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // reset page if initialPage has changed\n    if (\n      this.props.initialPage !== prevProps.initialPage ||\n      this.props.totalItems !== prevProps.totalItems\n    ) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage = page => {\n    const { totalItems, totalPages, pageSize } = this.props;\n\n    let pager = this.state.pager;\n\n    if (page < 1 || page > totalPages) {\n      return;\n    }\n\n    // get new pager object for specified page\n    pager = this.getPager(totalItems, page, pageSize);\n\n    // update state\n    this.setState({ pager });\n\n    // call change page function in parent component\n    this.props.onChangePage(page);\n  };\n\n  getPager = (totalItems, currentPage, pageSize) => {\n    // default to first page\n    currentPage = currentPage || 1;\n\n    // default page size is 10\n    pageSize = pageSize || 10;\n\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    let startPage, endPage;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    }\n\n    // calculate start and end item indexes\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\n      i => startPage + i\n    );\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  };\n\n  render() {\n    let pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null;\n    }\n\n    return (\n      <Pagination className=\"pagination justify-content-end\">\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === 1 ? true : false}\n        >\n          <PaginationLink className=\"page-link\" onClick={() => this.setPage(1)}>\n            First\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === 1 ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.currentPage - 1)}\n          >\n            Previous\n          </PaginationLink>\n        </PaginationItem>\n        {pager.pages.map((page, index) => (\n          <PaginationItem\n            key={index}\n            className=\"page-item\"\n            active={pager.currentPage === page ? true : false}\n          >\n            <PaginationLink\n              className=\"page-link\"\n              onClick={() => this.setPage(page)}\n            >\n              {page}\n            </PaginationLink>\n          </PaginationItem>\n        ))}\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === pager.totalPages ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.currentPage + 1)}\n          >\n            Next\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === pager.totalPages ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.totalPages)}\n          >\n            Last\n          </PaginationLink>\n        </PaginationItem>\n      </Pagination>\n    );\n  }\n}\n\nPaginationBackend.propTypes = propTypes;\nPaginationBackend.defaultProps = defaultProps;\n\nexport default PaginationBackend;\n","import React, { Component } from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\n\nexport default class ModalToDelete extends Component {\n  state = {\n    modal: this.props.isOpenModal\n  };\n\n  toggle = () => {\n    this.setState(state => ({\n      modal: !state.modal\n    }));\n\n    const { onRequestClose } = this.props;\n    onRequestClose();\n  };\n\n  render() {\n    const { modal } = this.state;\n    const { title, name, className, onDelete } = this.props;\n\n    return (\n      <Modal\n        isOpen={modal}\n        toggle={this.toggle}\n        className={`modal-danger \" + ${className ? className : \"\"}`}\n      >\n        <ModalHeader toggle={this.toggle}>{title}</ModalHeader>\n        <ModalBody>{`Are you sure to delete ${name}?`}</ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={onDelete}>\n            Delete\n          </Button>{\" \"}\n          <Button color=\"secondary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\n\nconst withModal = WrappedComponent =>\n  class withModal extends Component {\n    state = {\n      modal: false\n    };\n\n    static getDerivedStateFromProps(nextProps) {\n      if (nextProps) {\n        return {\n          modal: nextProps.isOpenModal\n        };\n      }\n\n      return null;\n    }\n\n    toggleModal = () => {\n      this.setState(state => ({\n        modal: !state.modal\n      }));\n\n      const { onRequestClose } = this.props;\n      onRequestClose();\n    };\n\n    render() {\n      const { modal } = this.state;\n      const { title, className } = this.props;\n\n      // const renderModalTitle = () => {\n      //   switch (title) {\n      //     case \"new contact\":\n      //       return \"New Contact\";\n      //     case \"edit contact\":\n      //       return \"Edit Contact\";\n      //     case \"appoint interview\":\n      //       return \"Appoint Interview\";\n      //     case \"add vacancy\":\n      //       return \"Add vacancy\";\n      //     case \"new user\":\n      //       return \"New user\";\n      //     case \"create new link\":\n      //       return \"Create new link\";\n      //     default:\n      //       return \"Modal\";\n      //   }\n      // };\n\n      return (\n        <Modal\n          isOpen={modal}\n          toggle={this.toggleModal}\n          className={`modal-primary \" + ${className ? className : \"\"}`}\n        >\n          <ModalHeader toggle={this.toggleModal}>{title}</ModalHeader>\n          <ModalBody>{modal && <WrappedComponent {...this.props} />}</ModalBody>\n        </Modal>\n      );\n    }\n  };\n\nexport default withModal;\n","// Core\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\n// Components\nimport ModalToDelete from \"../../shared/ModalToDelete\";\n// Context\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\n\nconst PlatformsTableRow = ({ idx, id, name, onDelete }) => (\n  <>\n    <td>{idx + 1}</td>\n    <td>{name}</td>\n    <td style={{ paddingLeft: \"1.5rem\" }}>\n      <ModalConsumer>\n        {({ showModal, hideModal }) => (\n          <Button\n            title=\"delete\"\n            style={{\n              margin: 0,\n              padding: \"0.2rem\",\n              backgroundColor: \"transparent\",\n              borderColor: \"transparent\"\n            }}\n            onClick={() =>\n              showModal(ModalToDelete, {\n                isOpenModal: true,\n                title: \"Delete platform\",\n                name: `${name}`,\n                onDelete: () => {\n                  onDelete(id);\n                  hideModal();\n                }\n              })\n            }\n          >\n            <i className=\"cui-trash icons font-lg\" />\n          </Button>\n        )}\n      </ModalConsumer>\n    </td>\n  </>\n);\n\nPlatformsTableRow.propTypes = {\n  idx: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string,\n  onDelete: PropTypes.func\n};\n\nPlatformsTableRow.defaultProps = {\n  name: \"\",\n  onDelete: () => null\n};\n\nexport default PlatformsTableRow;\n","// Core\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row, Table } from \"reactstrap\";\n// Components\nimport PlatformsTableRow from \"./TableRow\";\nimport PaginationBackend from \"../../shared/PaginationBackend\";\n\nconst PlatformsTable = ({\n  platforms,\n  totalItems,\n  pageSize,\n  totalPages,\n  currentPage,\n  onChangePage,\n  onDelete\n}) => {\n  const platformsJSX =\n    platforms.length > 0 ? (\n      platforms.map((platform, idx) => (\n        <tr key={platform.id}>\n          <PlatformsTableRow idx={idx} {...platform} onDelete={onDelete} />\n        </tr>\n      ))\n    ) : (\n      <tr style={{ color: \"var(--secondary)\" }}>\n        <td colSpan={9} align=\"center\">\n          Nothing found{\" \"}\n          <span role=\"img\" aria-label=\"confused face\">\n            😕\n          </span>\n        </td>\n      </tr>\n    );\n\n  return (\n    <>\n      <Table style={{ background: \"var(--white)\" }} responsive hover>\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Platform</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>{platformsJSX}</tbody>\n      </Table>\n      {platforms.length > 0 ? (\n        <Row>\n          <Col>\n            <PaginationBackend\n              items={platforms}\n              totalItems={totalItems}\n              pageSize={pageSize}\n              totalPages={totalPages}\n              initialPage={currentPage}\n              onChangePage={onChangePage}\n            />\n          </Col>\n        </Row>\n      ) : null}\n    </>\n  );\n};\n\nPlatformsTable.propTypes = {\n  platforms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequered,\n      name: PropTypes.string\n    })\n  ),\n  currentPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  totalItems: PropTypes.number,\n  totalPages: PropTypes.number,\n  onChangePage: PropTypes.func,\n  onDelete: PropTypes.func\n};\n\nPlatformsTable.defaultProps = {\n  platforms: [],\n  currentPage: null,\n  pageSize: null,\n  totalItems: null,\n  totalPages: null,\n  onChangePage: () => null,\n  onDelete: () => null\n};\n\nexport default PlatformsTable;\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Col, FormGroup, Input, Form } from \"reactstrap\";\n\nconst initialState = {\n  name: \"\"\n};\n\nexport default class PlatformsCreateForm extends Component {\n  static propTypes = {\n    onCreatePlatform: PropTypes.func.isRequired,\n    onRequestClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    ...initialState\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { onCreatePlatform, onRequestClose } = this.props;\n\n    onCreatePlatform(this.state);\n\n    this.setState({ ...initialState });\n    onRequestClose();\n  };\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormGroup row>\n          <Col>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Platform name\"\n              onChange={this.handleInputChange}\n            />\n          </Col>\n        </FormGroup>\n        <Button color=\"primary\" onClick={this.handleSubmit}>\n          Create\n        </Button>\n      </Form>\n    );\n  }\n}\n","// Core\nimport React, { Component } from \"react\";\nimport { Button, Col, Row } from \"reactstrap\";\n// Components\nimport PlatformsTable from \"./Table\";\nimport PlatformsCreateForm from \"./CreateForm\";\n// HOC\nimport withModal from \"../../hoc/withModal\";\n// Context\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\n// Instruments\nimport {\n  getDataForPlatformPage,\n  addPlatform,\n  deletePlatform\n} from \"../../../utils/api\";\n\nconst WithModalPlatformsCreateForm = withModal(PlatformsCreateForm);\n\nexport default class Links extends Component {\n  state = {\n    platforms: [],\n    totalPlatforms: null,\n    totalPages: null,\n    perPage: null,\n    currentPage: 1\n  };\n\n  componentDidMount() {\n    const { currentPage } = this.state;\n\n    this.getData(currentPage);\n  }\n\n  createPlatform = platform => {\n    addPlatform(platform).then(platform => {\n      platform\n        ? this.setState({\n            platforms: [platform, ...this.state.platforms]\n          })\n        : console.log(\"Error while adding platform\");\n    });\n  };\n\n  removePlatform = id => {\n    deletePlatform(id).then(data => {\n      data.message === \"Delete Successfully\"\n        ? this.setState(state => ({\n            platforms: state.platforms.filter(platform => platform.id !== id)\n          }))\n        : console.log(\"Error while deleting platform\");\n    });\n  };\n\n  onChangePage = currentPage => {\n    this.getData(currentPage);\n  };\n\n  getData = currentPage => {\n    getDataForPlatformPage(currentPage).then(data => {\n      const platformsData = {\n        platforms: data.platforms,\n        totalPlatforms: data.Count,\n        totalPages: data.Page,\n        perPage: data.perPage,\n        currentPage: data.currentPage\n      };\n      this.setState({\n        ...this.state,\n        ...platformsData\n      });\n    });\n  };\n\n  render() {\n    const {\n      platforms,\n      totalPlatforms,\n      perPage,\n      totalPages,\n      currentPage\n    } = this.state;\n\n    return (\n      <>\n        <Row style={{ marginBottom: \"1rem\" }}>\n          <Col>\n            <h1 style={{ marginBottom: 0, fontSize: 24 }}>Platforms</h1>\n          </Col>\n        </Row>\n        <Row style={{ marginBottom: \"1rem\" }}>\n          <Col>\n            <ModalConsumer>\n              {({ showModal }) => (\n                <Button\n                  color=\"success\"\n                  onClick={() =>\n                    showModal(WithModalPlatformsCreateForm, {\n                      isOpenModal: true,\n                      title: \"Create new platform\",\n                      onCreatePlatform: this.createPlatform\n                    })\n                  }\n                >\n                  <i\n                    style={{ marginRight: \"0.2rem\" }}\n                    className=\"fa fa-plus-circle\"\n                  />\n                  Create\n                </Button>\n              )}\n            </ModalConsumer>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <PlatformsTable\n              platforms={platforms}\n              totalItems={totalPlatforms}\n              pageSize={perPage}\n              totalPages={totalPages}\n              currentPage={currentPage}\n              onChangePage={this.onChangePage}\n              onDelete={this.removePlatform}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}