{"version":3,"sources":["utils/selectors.js","components/Dashboard/Card/Card.js","components/Dashboard/SparkLineChart/SparkLineChart.js","components/Dashboard/SparkLineChart/Form.js","assets/data/dashboard/cards.js","components/Dashboard/Dashboard.js"],"names":["__webpack_require__","d","__webpack_exports__","isEmpty","getBase64","getSparkLineChartData","makeSparkLineData","sparklineChartOpts","_coreui_coreui_plugin_chartjs_custom_tooltips__WEBPACK_IMPORTED_MODULE_0__","obj","key","hasOwnProperty","file","cb","reader","FileReader","readAsDataURL","onload","result","onerror","error","console","log","arr","label","reduce","acc","value","data","concat","dataSetNo","variant","sparkLineChartData","labels","dataset","datasets","backgroundColor","borderColor","tooltips","enabled","custom","CustomTooltips","responsive","maintainAspectRatio","scales","xAxes","display","yAxes","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","hoverBorderWidth","legend","DashboardCard","state","dropdownOpen","toggle","_this","setState","_this$props","this","props","card","amount","history","links","map","link","react_default","a","createElement","DropdownItem","id","onClick","push","route","title","Card","className","color","style","minHeight","CardBody","ButtonGroup","ButtonDropdown","isOpen","DropdownToggle","caret","DropdownMenu","right","desc","time","Component","defaultProps","withRouter","brandPrimary","getStyle","brandDanger","SparkLineChart","_ref","dataArray","Object","values","reducedStatuses","review","Review","interview","Interview","statuses","name","amountCandidates","dataKeys","keys","sparkLine","arrOfKeys","status","idx","colorSparkLine","Col","sm","toUpperCase","es","options","width","height","sparkLineData","chart","objWithStatuses","Progress","String","chartData","Badge","pill","CardHeader","moment","format","Row","justifyContent","DashboardForm","dateFrom","dateTo","handleInputChange","_ref$target","target","defineProperty","onFilter","_this$state","Form","xs","md","lg","FormGroup","Input","type","onChange","companies","vacancies","recruiters","freelancers","candidates","calendar","interviews","offerCandidates","Dashboard","dashboardData","companiesWithCandidates","vacanciesOnCandidates","countCandidatesOnVacancies","countUsersAndFreelancers","countCompanies","countVacancies","countVacanciesOnPlatforms","worseVacancies","countOfferCandidates","usersWithoutOfferCandidates","usersOnCandidates","countVacanciesOpenAndHot","dateFilter","filterData","filter","filterDataForAdminDashboard","then","countRevInterComp","countRevInterVac","countReviewAndInterviewCandidatesOnVacancies","countUsersAndFreelancer","countCom","countVac","countVacanciesOpenAndHotForPlatform","listNotSendVacancies","offersCandidates","allCount","users","topUsers","objectSpread","loading","_this2","getDataForAdminDashboard","_this$state$dashboard","amountRecruiters","Recruiter","amountFreelancers","Freelancer","amountVacancies","amountVacanciesOnPlatformsJSX","pct","toFixed","sparkLineChartDataCompanies","sparkLineChartDataVacancies","candidatesOnStatus","usersWithCandidatesOnReviewStatus","length","user","role","amountReviewCandidates","count","usersWithCandidatesOnReviewStatusJSX","src","alt","usersWithCandidatesOnInterviewStatus","amountInterviewCandidates","usersWithCandidatesOnInterviewStatusJSX","listOfWorstVacancies","vacancy","Link","to","listOfWorstUsers","SparkLineChart_Form","Card_Card","cards","xl","Button","size","data-toggle","data-placement","data-original-title","Dashboard_SparkLineChart_SparkLineChart","Table","hover"],"mappings":"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","file":"static/js/44.ad9c1fd8.chunk.js","sourcesContent":["import { CustomTooltips } from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\n\nexport const isEmpty = obj => {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n  return true;\n};\n\nexport const getBase64 = (file, cb) => {\n  let reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = function() {\n    cb(reader.result);\n  };\n  reader.onerror = function(error) {\n    console.log(\"Error: \", error);\n  };\n};\n\nexport const descSort = arr => {\n  return arr.sort((a, b) => b - a);\n};\n\nexport const getSparkLineChartData = (arr, label) =>\n  arr.reduce(\n    (acc, value) => {\n      const data = value[label]\n        ? acc.data.concat(value[label])\n        : acc.data.concat(0);\n\n      return {\n        data,\n        label\n      };\n    },\n    { data: [], label }\n  );\n\nexport const makeSparkLineData = (\n  dataSetNo,\n  variant,\n  sparkLineChartData,\n  labels\n) => {\n  const dataset = sparkLineChartData[dataSetNo];\n  const data = {\n    labels,\n    datasets: [\n      {\n        backgroundColor: \"transparent\",\n        borderColor: variant ? variant : \"#c2cfd6\",\n        data: dataset.data,\n        label: dataset.label\n      }\n    ]\n  };\n  return () => data;\n};\n\nexport const sparklineChartOpts = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  responsive: true,\n  maintainAspectRatio: true,\n  scales: {\n    xAxes: [\n      {\n        display: false\n      }\n    ],\n    yAxes: [\n      {\n        display: false\n      }\n    ]\n  },\n  elements: {\n    line: {\n      borderWidth: 2\n    },\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4,\n      hoverBorderWidth: 3\n    }\n  },\n  legend: {\n    display: false\n  }\n};\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  ButtonGroup,\n  ButtonDropdown,\n  Card,\n  CardBody,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\";\n\nclass DashboardCard extends Component {\n  static propTypes = {\n    color: PropTypes.string,\n    title: PropTypes.string,\n    amount: PropTypes.number,\n    desc: PropTypes.string\n  };\n\n  static defaultProps = {\n    color: \"primary\",\n    title: \"\",\n    amount: null,\n    desc: \"\"\n  };\n\n  state = {\n    dropdownOpen: false\n  };\n\n  toggle = () => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  };\n\n  render() {\n    const { card, amount, history } = this.props;\n\n    const links =\n      card.links &&\n      card.links.map(link => (\n        <DropdownItem key={link.id} onClick={() => history.push(link.route)}>\n          {link.title}\n        </DropdownItem>\n      ));\n\n    return (\n      <Card\n        className={`text-white bg-${card.color}`}\n        style={{ minHeight: \"113px\" }}\n      >\n        <CardBody>\n          <ButtonGroup className=\"float-right\">\n            {links && (\n              <ButtonDropdown\n                id={card.title}\n                isOpen={this.state.dropdownOpen}\n                toggle={this.toggle}\n              >\n                <DropdownToggle caret className=\"p-0\" color=\"transparent\">\n                  <i className=\"icon-link\" />\n                </DropdownToggle>\n                <DropdownMenu right>{links}</DropdownMenu>\n              </ButtonDropdown>\n            )}\n          </ButtonGroup>\n          {card.title && (\n            <div className=\"text-value\">\n              {card.title}: {amount}\n            </div>\n          )}\n          <div>{card.desc}</div>\n          {card.time && <div>on {card.time}</div>}\n          {/* <div className=\"chart-wrapper mt-3\" style={{ height: \"70px\" }}>\n          <Line\n            data={cardChartData2}\n            options={cardChartOpts2}\n            height={70}\n          />\n        </div> */}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default withRouter(DashboardCard);\n","// Core\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardBody,\n  Col,\n  Progress,\n  Row\n} from \"reactstrap\";\nimport { Line } from \"react-chartjs-2\";\n// Instruments\nimport { getStyle } from \"@coreui/coreui-pro/dist/js/coreui-utilities\";\nimport {\n  getSparkLineChartData,\n  makeSparkLineData,\n  sparklineChartOpts\n} from \"../../../utils/selectors\";\n\nconst brandPrimary = getStyle(\"--primary\");\nconst brandDanger = getStyle(\"--danger\");\n\nconst SparkLineChart = ({ title, data }) => {\n  const reducingReviewInterviewStatus = arr =>\n    arr.reduce(\n      (acc, value) => {\n        const review = value.Review ? acc.review + value.Review : acc.review;\n        const interview = value.Interview\n          ? acc.interview + value.Interview\n          : acc.interview;\n\n        return {\n          review,\n          interview\n        };\n      },\n      { review: 0, interview: 0 }\n    );\n\n  const sparkLineData = (arr, sparkLineChartData, arrOfKeys) => {\n    return arr.map((status, idx) => {\n      const colorSparkLine = idx === 0 ? brandPrimary : brandDanger;\n\n      return (\n        <Col key={`${status.name}-${status.amountCandidates}`} sm=\"6\">\n          <div className=\"callout callout-info\">\n            <small className=\"text-muted\">{status.name.toUpperCase()}</small>\n            <br />\n            <strong className=\"h4\">{status.amountCandidates}</strong>\n            <div className=\"chart-wrapper\">\n              <Line\n                data={makeSparkLineData(\n                  idx,\n                  colorSparkLine,\n                  sparkLineChartData,\n                  arrOfKeys\n                )}\n                options={sparklineChartOpts}\n                width={100}\n                height={30}\n              />\n            </div>\n          </div>\n        </Col>\n      );\n    });\n  };\n\n  const chartData = (arr, objWithStatuses) =>\n    arr.map(value => {\n      const review = objWithStatuses[value].Review;\n      const interview = objWithStatuses[value].Interview;\n\n      return (\n        <div\n          className=\"progress-group mb-4\"\n          key={`${value}-${review}-${interview}`}\n        >\n          <div className=\"progress-group-prepend\">\n            <span className=\"progress-group-text\">{value}</span>\n          </div>\n          <div className=\"progress-group-bars\">\n            <Progress\n              className=\"progress-xs\"\n              color=\"info\"\n              value={String(review)}\n            />\n            <Progress\n              className=\"progress-xs\"\n              color=\"danger\"\n              value={String(interview)}\n            />\n          </div>\n        </div>\n      );\n    });\n\n  const dataArray = Object.values(data);\n\n  const reducedStatuses = reducingReviewInterviewStatus(dataArray);\n\n  const { review, interview } = reducedStatuses;\n\n  const sparkLineChartDataReview = getSparkLineChartData(dataArray, \"Review\");\n\n  const sparkLineChartDataInterview = getSparkLineChartData(\n    dataArray,\n    \"Interview\"\n  );\n\n  const statuses = [\n    { name: \"Review\", amountCandidates: review },\n    { name: \"Interview\", amountCandidates: interview }\n  ];\n\n  const sparkLineChartData = [\n    sparkLineChartDataReview,\n    sparkLineChartDataInterview\n  ];\n\n  const dataKeys = Object.keys(data);\n\n  const sparkLine = sparkLineData(statuses, sparkLineChartData, dataKeys);\n\n  const chart = chartData(dataKeys, data);\n\n  const legend = statuses.map((status, idx) => {\n    const color = idx === 0 ? \"info\" : \"danger\";\n\n    return (\n      <div key={status.name}>\n        <sup className=\"px-1\">\n          <Badge pill color={color}>\n            &nbsp;\n          </Badge>\n        </sup>\n        {status.name} &nbsp;\n      </div>\n    );\n  });\n\n  return (\n    <Card>\n      <CardHeader>{`${title} of ${moment().format(\"MMMM\")}`}</CardHeader>\n      <CardBody>\n        <Row>{sparkLine}</Row>\n        <hr className=\"mt-0\" />\n        {chart}\n        <div className=\"legend text-center\">\n          <small style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {legend}\n          </small>\n        </div>\n        <br />\n      </CardBody>\n    </Card>\n  );\n};\n\nSparkLineChart.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.shape({})\n};\n\nSparkLineChart.defaultProps = {\n  title: \"\",\n  data: {}\n};\n\nexport default SparkLineChart;\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Form, FormGroup, Input, Row } from \"reactstrap\";\n\nclass DashboardForm extends Component {\n  static propTypes = {\n    onFilter: PropTypes.func.isRequired\n  };\n\n  state = {\n    dateFrom: \"\",\n    dateTo: \"\"\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value }, () => this.props.onFilter(this.state));\n  };\n\n  render() {\n    const { dateFrom, dateTo } = this.state;\n\n    return (\n      <Form>\n        <Row>\n          <Col xs={12} sm={12} md={6} lg={6}>\n            <FormGroup>\n              <Input\n                id=\"date-from\"\n                type=\"date\"\n                name=\"dateFrom\"\n                value={dateFrom}\n                onChange={this.handleInputChange}\n              />\n            </FormGroup>\n          </Col>\n          <Col xs={12} sm={12} md={6} lg={6}>\n            <FormGroup>\n              <Input\n                id=\"date-to\"\n                type=\"date\"\n                name=\"dateTo\"\n                value={dateTo}\n                onChange={this.handleInputChange}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nexport default DashboardForm;\n","import moment from \"moment\";\n\nexport const companies = {\n  id: \"1\",\n  color: \"primary\",\n  title: \"Companies\",\n  desc: \"Amount of companies with vacancies in Open/Hot status\",\n  links: [\n    { title: \"Companies\", route: \"/companies\" },\n    { title: \"Vacancies\", route: \"/vacancies\" }\n  ]\n};\n\nexport const vacancies = {\n  id: \"2\",\n  color: \"primary\",\n  title: \"Vacancies\",\n  desc: \"Amount of vacancies in Open/Hot status\",\n  links: [\n    { title: \"Vacancies\", route: \"/vacancies\" },\n    { title: \"Companies\", route: \"/companies\" }\n  ]\n};\n\nexport const recruiters = {\n  id: \"3\",\n  color: \"info\",\n  title: \"Recruiters\",\n  desc: \"Amount of recruiters\",\n  links: [{ title: \"Users\", route: \"/users\" }]\n};\n\nexport const freelancers = {\n  id: \"4\",\n  color: \"info\",\n  title: \"Freelancers\",\n  desc: \"Amount of freelancers\",\n  links: [{ title: \"Users\", route: \"/users\" }]\n};\n\nexport const candidates = {\n  id: \"5\",\n  color: \"danger\",\n  title: \"Candidates\",\n  desc: \"Amount of candidates sent on vacancies\",\n  links: [\n    { title: \"Candidates\", route: \"/candidates\" },\n    { title: \"Vacancies\", route: \"/vacancies\" }\n  ],\n  time: moment().calendar()\n};\n\nexport const interviews = {\n  id: \"6\",\n  color: \"danger\",\n  title: \"Interviews\",\n  desc: \"Amount of scheduled interviews\",\n  links: [{ title: \"Candidates\", route: \"/candidates\" }],\n  time: moment().calendar()\n};\n\nexport const offerCandidates = {\n  id: \"7\",\n  color: \"success\",\n  title: \"OFFER Candidates\",\n  desc: \"Amount of candidates with offer\",\n  links: [{ title: \"Candidates\", route: \"/candidates\" }],\n  time: moment().format(\"MMMM YYYY\")\n};\n","// Core\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Progress,\n  Row,\n  Table\n} from \"reactstrap\";\n// Components\nimport DashboardCard from \"./Card/Card\";\nimport SparkLineChart from \"./SparkLineChart/SparkLineChart\";\nimport DashboardForm from \"./SparkLineChart/Form\";\n// Instruments\nimport * as cards from \"../../assets/data/dashboard/cards\";\nimport { getStyle } from \"@coreui/coreui-pro/dist/js/coreui-utilities\";\nimport {\n  getDataForAdminDashboard,\n  filterDataForAdminDashboard\n} from \"../../utils/api\";\nimport { isEmpty } from \"../../utils/selectors\";\n\nconst brandPrimary = getStyle(\"--primary\");\n// const brandSuccess = getStyle(\"--success\");\n// const brandInfo = getStyle(\"--info\");\n// const brandWarning = getStyle(\"--warning\");\n// const brandDanger = getStyle(\"--danger\");\n\nexport default class Dashboard extends Component {\n  state = {\n    dashboardData: {\n      companiesWithCandidates: {},\n      vacanciesOnCandidates: {},\n      countCandidatesOnVacancies: {},\n      countUsersAndFreelancers: {},\n      countCompanies: null,\n      countVacancies: null,\n      countVacanciesOnPlatforms: {},\n      worseVacancies: [],\n      countOfferCandidates: null,\n      usersWithoutOfferCandidates: [],\n      usersOnCandidates: [],\n      countVacanciesOpenAndHot: {}\n    },\n    dateFilter: {\n      dateFrom: \"\",\n      dateTo: \"\"\n    }\n  };\n\n  componentDidMount() {\n    getDataForAdminDashboard().then(data => {\n      if (data) {\n        const dashboardData = {\n          companiesWithCandidates: data.countRevInterComp,\n          vacanciesOnCandidates: data.countRevInterVac,\n          countCandidatesOnVacancies:\n            data.countReviewAndInterviewCandidatesOnVacancies,\n          countUsersAndFreelancers: data.countUsersAndFreelancer,\n          countCompanies: data.countVacanciesOpenAndHot.countCom,\n          countVacancies: data.countVacanciesOpenAndHot.countVac,\n          countVacanciesOnPlatforms: data.countVacanciesOpenAndHotForPlatform,\n          worseVacancies: data.listNotSendVacancies,\n          countOfferCandidates: data.offersCandidates.allCount,\n          usersWithoutOfferCandidates: data.offersCandidates.users,\n          usersOnCandidates: data.topUsers,\n          countVacanciesOpenAndHot: data.countVacanciesOpenAndHot\n        };\n\n        this.setState({\n          ...this.state,\n          dashboardData\n        });\n      }\n    });\n  }\n\n  filterData = filter => {\n    this.setState(\n      {\n        dateFilter: filter\n      },\n      () => {\n        const { dateFilter } = this.state;\n\n        filterDataForAdminDashboard(dateFilter).then(data => {\n          const dashboardData = {\n            companiesWithCandidates: data.countRevInterComp,\n            vacanciesOnCandidates: data.countRevInterVac,\n            countCandidatesOnVacancies:\n              data.countReviewAndInterviewCandidatesOnVacancies,\n            countUsersAndFreelancers: data.countUsersAndFreelancer,\n            countCompanies: data.countVacanciesOpenAndHot.countCom,\n            countVacancies: data.countVacanciesOpenAndHot.countVac,\n            countVacanciesOnPlatforms: data.countVacanciesOpenAndHotForPlatform,\n            worseVacancies: data.listNotSendVacancies,\n            countOfferCandidates: data.offersCandidates.allCount,\n            usersWithoutOfferCandidates: data.offersCandidates.users,\n            usersOnCandidates: data.topUsers,\n            countVacanciesOpenAndHot: data.countVacanciesOpenAndHot\n          };\n\n          this.setState({\n            ...this.state,\n            dashboardData\n          });\n        });\n      }\n    );\n  };\n\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n\n  render() {\n    const {\n      dashboardData: {\n        countCompanies,\n        countVacancies,\n        countUsersAndFreelancers,\n        countVacanciesOnPlatforms,\n        companiesWithCandidates,\n        vacanciesOnCandidates,\n        countCandidatesOnVacancies,\n        usersOnCandidates,\n        countOfferCandidates,\n        usersWithoutOfferCandidates,\n        worseVacancies\n      }\n    } = this.state;\n\n    const amountRecruiters = !isEmpty(countUsersAndFreelancers)\n      ? countUsersAndFreelancers.Recruiter\n      : null;\n\n    const amountFreelancers = !isEmpty(countUsersAndFreelancers)\n      ? countUsersAndFreelancers.Freelancer\n      : null;\n\n    const amountVacancies =\n      !isEmpty(countVacanciesOnPlatforms) &&\n      Object.values(countVacanciesOnPlatforms).reduce(\n        (acc, value) => acc + value,\n        0\n      );\n\n    // sorts an array with numbers, but it's completely not that we want\n    // const arrValues =\n    //   !isEmpty(this.state.dashboardData) &&\n    //   descSort(Object.values(countVacanciesOnPlatforms));\n\n    const amountVacanciesOnPlatformsJSX =\n      amountVacancies &&\n      Object.keys(countVacanciesOnPlatforms).map(key => {\n        const vacanciesOnPlatform = countVacanciesOnPlatforms[key];\n\n        const pct = ((vacanciesOnPlatform / amountVacancies) * 100).toFixed(1);\n\n        return (\n          <li key={key} className=\"progress-group\">\n            <div className=\"progress-group-header\">\n              <i className=\"icon-globe progress-group-icon\" />\n              <span className=\"title\">{key}</span>\n              <span className=\"ml-auto font-weight-bold\">\n                {countVacanciesOnPlatforms[key]}{\" \"}\n                <span className=\"text-muted small\">\n                  ({pct}\n                  {\"%\"})\n                </span>\n              </span>\n            </div>\n            <div className=\"progress-group-bars\">\n              <Progress className=\"progress-xs\" color=\"success\" value={pct} />\n            </div>\n          </li>\n        );\n      });\n\n    const sparkLineChartDataCompanies = !isEmpty(companiesWithCandidates)\n      ? companiesWithCandidates\n      : {};\n\n    const sparkLineChartDataVacancies = !isEmpty(vacanciesOnCandidates)\n      ? vacanciesOnCandidates\n      : {};\n\n    const candidatesOnStatus =\n      !isEmpty(countCandidatesOnVacancies) && countCandidatesOnVacancies;\n\n    const { Review, Interview } = candidatesOnStatus;\n\n    const usersWithCandidatesOnReviewStatus =\n      usersOnCandidates.length > 0 &&\n      usersOnCandidates.reduce((acc, user) => {\n        if (acc) {\n          user.role !== \"Admin\" && user.status === \"Review\" && acc.push(user);\n        }\n\n        return acc;\n      }, []);\n\n    const amountReviewCandidates =\n      usersWithCandidatesOnReviewStatus.length > 0 &&\n      usersWithCandidatesOnReviewStatus.reduce(\n        (acc, user) => acc + user.count,\n        0\n      );\n\n    const usersWithCandidatesOnReviewStatusJSX =\n      usersWithCandidatesOnReviewStatus.length > 0 &&\n      usersWithCandidatesOnReviewStatus.map(user => {\n        const pct = ((user.count / amountReviewCandidates) * 100).toFixed();\n\n        return (\n          <tr key={user.id}>\n            <td className=\"text-center\">\n              <div className=\"avatar\">\n                <img\n                  src={\"assets/img/avatars/1.jpg\"}\n                  className=\"img-avatar\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"avatar-status badge-success\" />\n              </div>\n            </td>\n            <td>\n              <div>{user.name}</div>\n              {/* <div className=\"small text-muted\">\n                <span>New</span> | Registered: Jan 1, 2015\n              </div> */}\n            </td>\n            <td className=\"text-center\">{user.role}</td>\n            <td>\n              <div className=\"clearfix\">\n                <div className=\"float-left\">\n                  <strong>{`${user.count} (${String(pct)}%)`}</strong>\n                </div>\n                <div className=\"float-right\">\n                  <small className=\"text-muted\">\n                    on {moment().format(\"MMMM YYYY\")}\n                  </small>\n                </div>\n              </div>\n              <Progress\n                className=\"progress-xs\"\n                color=\"success\"\n                value={`${String(pct)}`}\n              />\n            </td>\n          </tr>\n        );\n      });\n\n    const usersWithCandidatesOnInterviewStatus =\n      usersOnCandidates.length > 0 &&\n      usersOnCandidates.reduce((acc, user) => {\n        if (acc) {\n          user.role !== \"Admin\" &&\n            user.status === \"Interview\" &&\n            acc.push(user);\n        }\n\n        return acc;\n      }, []);\n\n    const amountInterviewCandidates =\n      usersWithCandidatesOnInterviewStatus.length > 0 &&\n      usersWithCandidatesOnInterviewStatus.reduce(\n        (acc, user) => acc + user.count,\n        0\n      );\n\n    const usersWithCandidatesOnInterviewStatusJSX =\n      usersWithCandidatesOnInterviewStatus.length > 0 &&\n      usersWithCandidatesOnInterviewStatus.map(user => {\n        const pct = ((user.count / amountInterviewCandidates) * 100).toFixed();\n\n        return (\n          <tr key={user.id}>\n            <td className=\"text-center\">\n              <div className=\"avatar\">\n                <img\n                  src={\"assets/img/avatars/1.jpg\"}\n                  className=\"img-avatar\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"avatar-status badge-success\" />\n              </div>\n            </td>\n            <td>\n              <div>{user.name}</div>\n              {/* <div className=\"small text-muted\">\n                <span>New</span> | Registered: Jan 1, 2015\n              </div> */}\n            </td>\n            <td className=\"text-center\">{user.role}</td>\n            <td>\n              <div className=\"clearfix\">\n                <div className=\"float-left\">\n                  <strong>{`${user.count} (${String(pct)}%)`}</strong>\n                </div>\n                <div className=\"float-right\">\n                  <small className=\"text-muted\">\n                    on {moment().format(\"MMMM YYYY\")}\n                  </small>\n                </div>\n              </div>\n              <Progress\n                className=\"progress-xs\"\n                color=\"success\"\n                value={`${String(pct)}`}\n              />\n            </td>\n          </tr>\n        );\n      });\n\n    const listOfWorstVacancies =\n      worseVacancies.length > 0 &&\n      worseVacancies.map(vacancy => (\n        <tr key={vacancy.id}>\n          <td>\n            <Link to={`/vacancies/${vacancy.id}`}>{vacancy.vacancy}</Link>\n          </td>\n        </tr>\n      ));\n\n    const listOfWorstUsers =\n      usersWithoutOfferCandidates.length > 0 &&\n      usersWithoutOfferCandidates.map(user => (\n        <tr key={user.id}>\n          <td>\n            <Link to={`/users/${user.id}`}>{user.name}</Link>\n          </td>\n        </tr>\n      ));\n\n    return (\n      <div className=\"animated fadeIn\">\n        <DashboardForm onFilter={this.filterData} />\n        <Row>\n          <Col xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\">\n            <DashboardCard card={cards.candidates} amount={Review} />\n          </Col>\n\n          <Col xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\">\n            <DashboardCard card={cards.interviews} amount={Interview} />\n          </Col>\n          <Col xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\">\n            <DashboardCard\n              card={cards.offerCandidates}\n              amount={countOfferCandidates}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Card>\n              <CardHeader>Amount of vacancies in Open/Hot status</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col xs=\"12\" md=\"12\" xl=\"12\">\n                    <Row>\n                      {/* <Col sm=\"6\">\n                        <div className=\"callout callout-warning\">\n                          <small className=\"text-muted\">Pageviews</small>\n                          <br />\n                          <strong className=\"h4\">78,623</strong>\n                          <div className=\"chart-wrapper\">\n                            <Line\n                              data={makeSparkLineData(2, brandWarning)}\n                              options={sparklineChartOpts}\n                              width={100}\n                              height={30}\n                            />\n                          </div>\n                        </div>\n                      </Col> */}\n                      <Col sm=\"12\">\n                        <div className=\"callout callout-success\">\n                          <small className=\"text-muted\">\n                            {\"Vacancies\".toUpperCase()}\n                          </small>\n                          <br />\n                          <strong className=\"h4\">{amountVacancies}</strong>\n                          {/* <div className=\"chart-wrapper\">\n                            <Line\n                              data={makeSparkLineData(3, brandSuccess)}\n                              options={sparklineChartOpts}\n                              width={100}\n                              height={30}\n                            />\n                          </div> */}\n                        </div>\n                      </Col>\n                    </Row>\n                    <hr className=\"mt-0\" />\n                    <ul className=\"pl-0\">\n                      {amountVacanciesOnPlatformsJSX}\n                      <div className=\"divider text-center\">\n                        <Button\n                          color=\"link\"\n                          size=\"sm\"\n                          className=\"text-muted\"\n                          data-toggle=\"tooltip\"\n                          data-placement=\"top\"\n                          title=\"\"\n                          data-original-title=\"show more\"\n                        >\n                          <i className=\"icon-options\" />\n                        </Button>\n                      </div>\n                    </ul>\n                  </Col>\n                </Row>\n                <br />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\">\n            <SparkLineChart\n              title=\"Companies with candidates in Review/Interview status\"\n              data={sparkLineChartDataCompanies}\n            />\n          </Col>\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\">\n            <SparkLineChart\n              title=\"Vacancies with candidates in Review/Interview status\"\n              data={sparkLineChartDataVacancies}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs=\"12\" sm=\"6\" md=\"6\" lg=\"3\">\n            <DashboardCard\n              card={cards.companies}\n              amount={countCompanies}\n              brandPrimary={brandPrimary}\n            />\n          </Col>\n          <Col xs=\"12\" sm=\"6\" md=\"6\" lg=\"3\">\n            <DashboardCard card={cards.vacancies} amount={countVacancies} />\n          </Col>\n          <Col xs=\"12\" sm=\"6\" md=\"6\" lg=\"3\">\n            <DashboardCard card={cards.recruiters} amount={amountRecruiters} />\n          </Col>\n          <Col xs=\"12\" sm=\"6\" md=\"6\" lg=\"3\">\n            <DashboardCard\n              card={cards.freelancers}\n              amount={amountFreelancers}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n            <Card>\n              <CardHeader>Users with candidates in Review status</CardHeader>\n              <CardBody>\n                <Table\n                  hover\n                  responsive\n                  className=\"table-outline mb-0 d-none d-sm-table\"\n                >\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th className=\"text-center\">\n                        <i className=\"icon-people\" />\n                      </th>\n                      <th>User</th>\n                      <th className=\"text-center\">Role</th>\n                      <th>Pct</th>\n                    </tr>\n                  </thead>\n                  <tbody>{usersWithCandidatesOnReviewStatusJSX}</tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" xl=\"6\">\n            <Card>\n              <CardHeader>Users with candidates in Interview status</CardHeader>\n              <CardBody>\n                <Table\n                  hover\n                  responsive\n                  className=\"table-outline mb-0 d-none d-sm-table\"\n                >\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th className=\"text-center\">\n                        <i className=\"icon-people\" />\n                      </th>\n                      <th>User</th>\n                      <th className=\"text-center\">Role</th>\n                      <th>Pct</th>\n                    </tr>\n                  </thead>\n                  <tbody>{usersWithCandidatesOnInterviewStatusJSX}</tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\">\n            <Card>\n              <CardHeader>\n                Vacancies on which didn't send any candidate at last 10 days\n              </CardHeader>\n              <CardBody>\n                <Table\n                  hover\n                  responsive\n                  className=\"table-outline mb-0 d-none d-sm-table\"\n                >\n                  <tbody>{listOfWorstVacancies}</tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\">\n            <Card>\n              <CardHeader>\n                Users who don't have candidates with offer at last 60 days\n              </CardHeader>\n              <CardBody>\n                <Table\n                  hover\n                  responsive\n                  className=\"table-outline mb-0 d-none d-sm-table\"\n                >\n                  <tbody>{listOfWorstUsers}</tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}