{"version":3,"sources":["components/Email/Inbox/Inbox.js","../node_modules/reactstrap/es/Button.js","../node_modules/reactstrap/es/ButtonGroup.js","providers/MailboxProvider.js"],"names":["Inbox","props","_this","Object","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","recieveEmails","getAllEmails","then","data","inbox","inBox","setState","toggle","bind","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","state","sent","dropdownOpen","console","log","context","messages","length","map","message","idx","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","key","className","href","concat","id","from","date","subject","email","slice","style","color","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","_providers_MailboxProvider__WEBPACK_IMPORTED_MODULE_12__","Component","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","n","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","propTypes","active","bool","aria-label","string","block","disabled","outline","tag","innerRef","oneOfType","object","func","size","children","node","cssModule","close","Button","_React$Component","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","Tag","attributes","aria-hidden","btnOutlineColor","classes","defaultAriaLabel","type","undefined","ref","defaultProps","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","role","vertical","ButtonGroup","MailboxContext","createContext","MailboxProvider","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","Provider","value","Consumer"],"mappings":"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","file":"static/js/83.7be02c45.chunk.js","sourcesContent":["import React, { Component, createContext } from \"react\";\nimport { Nav, NavItem, NavLink, Badge, Button, ButtonGroup } from \"reactstrap\";\nimport MailboxProvider from \"../../../providers/MailboxProvider\";\nimport { getAllEmails } from \"../../../utils/api\";\n\n// export const MailboxContext = createContext({\n//   inbox: []\n// });\n\n// export const MailboxConsumer = MailboxContext.Consumer;\n\nclass Inbox extends Component {\n  // static Consumer = MailboxContext.Consumer;\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      inbox: [],\n      sent: [],\n      dropdownOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.recieveEmails();\n  }\n\n  recieveEmails = () => {\n    getAllEmails().then(data => {\n      const inbox = data.inBox;\n\n      this.setState({\n        inbox\n      });\n    });\n  };\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  render() {\n    const { inbox } = this.state;\n    console.log(\"this.context inbox: \", this.context);\n    const messages =\n      inbox.length > 0 ? (\n        inbox.map((message, idx) => (\n          <li key={idx} className=\"message unread\">\n            <a href={`#/email/message/${message.id}`}>\n              <div className=\"actions\">\n                <span className=\"action\">\n                  <i className=\"fa fa-square-o\" />\n                </span>\n                <span className=\"action\">\n                  <i className=\"fa fa-star-o\" />\n                </span>\n              </div>\n              <div className=\"header\">\n                <span className=\"from\">{message.from}</span>\n                <span className=\"date\">\n                  <span className=\"fa fa-paper-clip\" /> {message.date.date}\n                </span>\n              </div>\n              <div className=\"title\">{message.subject}</div>\n              <div className=\"description\">{message.email.slice(0, 111)}</div>\n            </a>\n          </li>\n        ))\n      ) : (\n        <li style={{ color: \"var(--blue)\" }}>There are no emails yet!</li>\n      );\n\n    return (\n      <div className=\"animated fadeIn\">\n        <div className=\"email-app mb-4\">\n          <nav>\n            <a href=\"#/email/compose\" className=\"btn btn-danger btn-block\">\n              New Email\n            </a>\n            <Nav>\n              <NavItem onClick={this.recieveEmails}>\n                <NavLink href=\"#/email/inbox\">\n                  <i className=\"fa fa-inbox\" /> Inbox{\" \"}\n                  {/* <Badge color=\"danger\">4</Badge> */}\n                </NavLink>\n              </NavItem>\n              {/* <NavItem>\n                <NavLink href=\"/stared\">\n                  <i className=\"fa fa-star\" /> Stared\n                </NavLink>\n              </NavItem> */}\n              <NavItem onClick={this.recieveEmails}>\n                <NavLink href=\"#/email/inbox\">\n                  <i className=\"fa fa-rocket\" /> Sent\n                </NavLink>\n              </NavItem>\n              {/* <NavItem>\n                <NavLink href=\"/trash\">\n                  <i className=\"fa fa-trash-o\" /> Trash\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/important\">\n                  <i className=\"fa fa-bookmark\" /> Important\n                  <Badge color=\"info\">5</Badge>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/spam\">\n                  <i className=\"fa fa-exclamation-circle\" /> Spam{\" \"}\n                  <Badge color=\"danger\">4</Badge>\n                </NavLink>\n              </NavItem> */}\n            </Nav>\n          </nav>\n          <main className=\"inbox\">\n            <div className=\"toolbar\">\n              {/* <ButtonGroup className={\"mr-1\"}>\n                <Button color=\"light\">\n                  <span className=\"fa fa-envelope\" />\n                </Button>\n                <Button color=\"light\">\n                  <span className=\"fa fa-star\" />\n                </Button>\n                <Button color=\"light\">\n                  <span className=\"fa fa-star-o\" />\n                </Button>\n                <Button color=\"light\">\n                  <span className=\"fa fa-bookmark-o\" />\n                </Button>\n              </ButtonGroup> */}\n              <ButtonGroup className={\"mr-1\"}>\n                <Button color=\"light\">\n                  <span className=\"fa fa-mail-reply\" />\n                </Button>\n                <Button color=\"light\">\n                  <span className=\"fa fa-mail-reply-all\" />\n                </Button>\n                <Button color=\"light\">\n                  <span className=\"fa fa-mail-forward\" />\n                </Button>\n              </ButtonGroup>\n              {/* <Button color=\"light\" className={\"mr-1\"}>\n                <span className=\"fa fa-trash-o\" />\n              </Button>\n              <ButtonDropdown\n                isOpen={this.state.dropdownOpen}\n                toggle={this.toggle}\n              >\n                <DropdownToggle caret color=\"light\">\n                  <span className=\"fa fa-tags\" />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>\n                    add label<Badge color=\"danger\">Home</Badge>\n                  </DropdownItem>\n                  <DropdownItem>\n                    add label<Badge color=\"info\">Job</Badge>\n                  </DropdownItem>\n                  <DropdownItem>\n                    add label<Badge color=\"success\">Clients</Badge>\n                  </DropdownItem>\n                  <DropdownItem>\n                    add label<Badge color=\"warning\">News</Badge>\n                  </DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>\n              <ButtonGroup className=\"float-right\">\n                <Button color=\"light\">\n                  <span className=\"fa fa-chevron-left\" />\n                </Button>\n                <Button color=\"light\">\n                  <span className=\"fa fa-chevron-right\" />\n                </Button>\n              </ButtonGroup> */}\n            </div>\n            <MailboxProvider inbox={inbox}>\n              <ul className=\"messages\">{messages}</ul>\n            </MailboxProvider>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Inbox;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n  size: PropTypes.string,\n  vertical: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  role: 'group'\n};\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      vertical = props.vertical,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { Component, createContext } from \"react\";\nimport { getAllEmails } from \"../utils/api\";\n\nexport const MailboxContext = createContext({\n  inbox: []\n});\n\nexport default class MailboxProvider extends Component {\n  static Consumer = MailboxContext.Consumer;\n\n  state = {\n    inbox: []\n  };\n\n  componentDidMount() {\n    getAllEmails().then(data => {\n      console.log(data);\n      const inbox = data.inBox;\n      this.setState({\n        inbox\n      });\n    });\n    this.setState({\n      inbox: this.props.inbox\n    });\n  }\n\n  render() {\n    console.log(this.state.inbox);\n    console.log(this.props);\n    return (\n      <MailboxContext.Provider value={this.props.inbox}>\n        {this.props.children}\n      </MailboxContext.Provider>\n    );\n  }\n}\n"],"sourceRoot":""}