{"version":3,"sources":["components/Admin/Platforms/TableRow.js","components/Admin/Platforms/Table.js","components/Admin/Platforms/CreateForm.js","components/Admin/Platforms/Platforms.js","components/shared/PaginationBackend.js","components/shared/ModalToDelete.js","components/hoc/withModal.js"],"names":["PlatformsTableRow","_ref","idx","id","name","onDelete","react_default","a","createElement","Fragment","style","paddingLeft","ModalProvider","_ref2","showModal","hideModal","Button","title","margin","padding","backgroundColor","borderColor","onClick","ModalToDelete","isOpenModal","concat","className","defaultProps","PlatformsTable","platforms","totalItems","pageSize","totalPages","currentPage","onChangePage","platformsJSX","length","map","platform","key","TableRow","Object","assign","color","colSpan","align","role","aria-label","Table","background","responsive","hover","scope","Row","Col","PaginationBackend","items","initialPage","initialState","PlatformsCreateForm","state","handleInputChange","_ref$target","target","value","_this","setState","defineProperty","handleSubmit","event","preventDefault","_this$props","props","onCreatePlatform","onRequestClose","objectSpread","this","Form","onSubmit","FormGroup","row","Input","type","placeholder","onChange","Component","WithModalPlatformsCreateForm","withModal","Links","totalPlatforms","perPage","createPlatform","addPlatform","then","toConsumableArray","console","log","removePlatform","deletePlatform","data","message","filter","getData","getDataForPlatformPage","platformsData","Count","Page","_this2","_this$state","marginBottom","fontSize","marginRight","Platforms_Table","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","setPage","page","pager","getPager","startPage","endPage","Math","ceil","startIndex","endIndex","min","pages","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Array","keys","i","prevProps","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","disabled","reactstrap__WEBPACK_IMPORTED_MODULE_9__","index","active","modal","toggle","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_10__","WrappedComponent","_Component","_getPrototypeOf2","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_len","arguments","args","_key","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","toggleModal","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","nextProps"],"mappings":"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","file":"static/js/82.d4463a90.chunk.js","sourcesContent":["// Core\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\n// Components\nimport ModalToDelete from \"../../shared/ModalToDelete\";\n// Context\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\n\nconst PlatformsTableRow = ({ idx, id, name, onDelete }) => (\n  <>\n    <td>{idx + 1}</td>\n    <td>{name}</td>\n    <td style={{ paddingLeft: \"1.5rem\" }}>\n      <ModalConsumer>\n        {({ showModal, hideModal }) => (\n          <Button\n            title=\"delete\"\n            style={{\n              margin: 0,\n              padding: \"0.2rem\",\n              backgroundColor: \"transparent\",\n              borderColor: \"transparent\"\n            }}\n            onClick={() =>\n              showModal(ModalToDelete, {\n                isOpenModal: true,\n                title: \"Delete platform\",\n                name: `${name}`,\n                onDelete: () => {\n                  onDelete(id);\n                  hideModal();\n                }\n              })\n            }\n          >\n            <i className=\"cui-trash icons font-lg\" />\n          </Button>\n        )}\n      </ModalConsumer>\n    </td>\n  </>\n);\n\nPlatformsTableRow.propTypes = {\n  idx: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string,\n  onDelete: PropTypes.func\n};\n\nPlatformsTableRow.defaultProps = {\n  name: \"\",\n  onDelete: () => null\n};\n\nexport default PlatformsTableRow;\n","// Core\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row, Table } from \"reactstrap\";\n// Components\nimport PlatformsTableRow from \"./TableRow\";\nimport PaginationBackend from \"../../shared/PaginationBackend\";\n\nconst PlatformsTable = ({\n  platforms,\n  totalItems,\n  pageSize,\n  totalPages,\n  currentPage,\n  onChangePage,\n  onDelete\n}) => {\n  const platformsJSX =\n    platforms.length > 0 ? (\n      platforms.map((platform, idx) => (\n        <tr key={platform.id}>\n          <PlatformsTableRow idx={idx} {...platform} onDelete={onDelete} />\n        </tr>\n      ))\n    ) : (\n      <tr style={{ color: \"var(--secondary)\" }}>\n        <td colSpan={9} align=\"center\">\n          Nothing found{\" \"}\n          <span role=\"img\" aria-label=\"confused face\">\n            😕\n          </span>\n        </td>\n      </tr>\n    );\n\n  return (\n    <>\n      <Table style={{ background: \"var(--white)\" }} responsive hover>\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Platform</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>{platformsJSX}</tbody>\n      </Table>\n      {platforms.length > 0 ? (\n        <Row>\n          <Col>\n            <PaginationBackend\n              items={platforms}\n              totalItems={totalItems}\n              pageSize={pageSize}\n              totalPages={totalPages}\n              initialPage={currentPage}\n              onChangePage={onChangePage}\n            />\n          </Col>\n        </Row>\n      ) : null}\n    </>\n  );\n};\n\nPlatformsTable.propTypes = {\n  platforms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequered,\n      name: PropTypes.string\n    })\n  ),\n  currentPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  totalItems: PropTypes.number,\n  totalPages: PropTypes.number,\n  onChangePage: PropTypes.func,\n  onDelete: PropTypes.func\n};\n\nPlatformsTable.defaultProps = {\n  platforms: [],\n  currentPage: null,\n  pageSize: null,\n  totalItems: null,\n  totalPages: null,\n  onChangePage: () => null,\n  onDelete: () => null\n};\n\nexport default PlatformsTable;\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Col, FormGroup, Input, Form } from \"reactstrap\";\n\nconst initialState = {\n  name: \"\"\n};\n\nexport default class PlatformsCreateForm extends Component {\n  static propTypes = {\n    onCreatePlatform: PropTypes.func.isRequired,\n    onRequestClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    ...initialState\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { onCreatePlatform, onRequestClose } = this.props;\n\n    onCreatePlatform(this.state);\n\n    this.setState({ ...initialState });\n    onRequestClose();\n  };\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormGroup row>\n          <Col>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Platform name\"\n              onChange={this.handleInputChange}\n            />\n          </Col>\n        </FormGroup>\n        <Button color=\"primary\" onClick={this.handleSubmit}>\n          Create\n        </Button>\n      </Form>\n    );\n  }\n}\n","// Core\nimport React, { Component } from \"react\";\nimport { Button, Col, Row } from \"reactstrap\";\n// Components\nimport PlatformsTable from \"./Table\";\nimport PlatformsCreateForm from \"./CreateForm\";\n// HOC\nimport withModal from \"../../hoc/withModal\";\n// Context\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\n// Instruments\nimport {\n  getDataForPlatformPage,\n  addPlatform,\n  deletePlatform\n} from \"../../../utils/api\";\n\nconst WithModalPlatformsCreateForm = withModal(PlatformsCreateForm);\n\nexport default class Links extends Component {\n  state = {\n    platforms: [],\n    totalPlatforms: null,\n    totalPages: null,\n    perPage: null,\n    currentPage: 1\n  };\n\n  componentDidMount() {\n    const { currentPage } = this.state;\n\n    this.getData(currentPage);\n  }\n\n  createPlatform = platform => {\n    addPlatform(platform).then(platform => {\n      platform\n        ? this.setState({\n            platforms: [platform, ...this.state.platforms]\n          })\n        : console.log(\"Error while adding platform\");\n    });\n  };\n\n  removePlatform = id => {\n    deletePlatform(id).then(data => {\n      data.message === \"Delete Successfully\"\n        ? this.setState(state => ({\n            platforms: state.platforms.filter(platform => platform.id !== id)\n          }))\n        : console.log(\"Error while deleting platform\");\n    });\n  };\n\n  onChangePage = currentPage => {\n    this.getData(currentPage);\n  };\n\n  getData = currentPage => {\n    getDataForPlatformPage(currentPage).then(data => {\n      const platformsData = {\n        platforms: data.platforms,\n        totalPlatforms: data.Count,\n        totalPages: data.Page,\n        perPage: data.perPage,\n        currentPage: data.currentPage\n      };\n      this.setState({\n        ...this.state,\n        ...platformsData\n      });\n    });\n  };\n\n  render() {\n    const {\n      platforms,\n      totalPlatforms,\n      perPage,\n      totalPages,\n      currentPage\n    } = this.state;\n\n    return (\n      <>\n        <Row style={{ marginBottom: \"1rem\" }}>\n          <Col>\n            <h1 style={{ marginBottom: 0, fontSize: 24 }}>Platforms</h1>\n          </Col>\n        </Row>\n        <Row style={{ marginBottom: \"1rem\" }}>\n          <Col>\n            <ModalConsumer>\n              {({ showModal }) => (\n                <Button\n                  color=\"success\"\n                  onClick={() =>\n                    showModal(WithModalPlatformsCreateForm, {\n                      isOpenModal: true,\n                      title: \"Create new platform\",\n                      onCreatePlatform: this.createPlatform\n                    })\n                  }\n                >\n                  <i\n                    style={{ marginRight: \"0.2rem\" }}\n                    className=\"fa fa-plus-circle\"\n                  />\n                  Create\n                </Button>\n              )}\n            </ModalConsumer>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <PlatformsTable\n              platforms={platforms}\n              totalItems={totalPlatforms}\n              pageSize={perPage}\n              totalPages={totalPages}\n              currentPage={currentPage}\n              onChangePage={this.onChangePage}\n              onDelete={this.removePlatform}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n\nconst propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})),\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  totalItems: PropTypes.number,\n  totalPages: PropTypes.number,\n  onChangePage: PropTypes.func\n};\n\nconst defaultProps = {\n  items: [],\n  initialPage: 1,\n  pageSize: 10,\n  totalItems: null,\n  totalPages: null,\n  onChangePage: () => null\n};\n\nclass PaginationBackend extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { pager: {} };\n  }\n\n  componentDidMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // reset page if initialPage has changed\n    if (\n      this.props.initialPage !== prevProps.initialPage ||\n      this.props.totalItems !== prevProps.totalItems\n    ) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage = page => {\n    const { totalItems, totalPages, pageSize } = this.props;\n\n    let pager = this.state.pager;\n\n    if (page < 1 || page > totalPages) {\n      return;\n    }\n\n    // get new pager object for specified page\n    pager = this.getPager(totalItems, page, pageSize);\n\n    // update state\n    this.setState({ pager });\n\n    // call change page function in parent component\n    this.props.onChangePage(page);\n  };\n\n  getPager = (totalItems, currentPage, pageSize) => {\n    // default to first page\n    currentPage = currentPage || 1;\n\n    // default page size is 10\n    pageSize = pageSize || 10;\n\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    let startPage, endPage;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    }\n\n    // calculate start and end item indexes\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\n      i => startPage + i\n    );\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  };\n\n  render() {\n    let pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null;\n    }\n\n    return (\n      <Pagination className=\"pagination justify-content-end\">\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === 1 ? true : false}\n        >\n          <PaginationLink className=\"page-link\" onClick={() => this.setPage(1)}>\n            First\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === 1 ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.currentPage - 1)}\n          >\n            Previous\n          </PaginationLink>\n        </PaginationItem>\n        {pager.pages.map((page, index) => (\n          <PaginationItem\n            key={index}\n            className=\"page-item\"\n            active={pager.currentPage === page ? true : false}\n          >\n            <PaginationLink\n              className=\"page-link\"\n              onClick={() => this.setPage(page)}\n            >\n              {page}\n            </PaginationLink>\n          </PaginationItem>\n        ))}\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === pager.totalPages ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.currentPage + 1)}\n          >\n            Next\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === pager.totalPages ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.totalPages)}\n          >\n            Last\n          </PaginationLink>\n        </PaginationItem>\n      </Pagination>\n    );\n  }\n}\n\nPaginationBackend.propTypes = propTypes;\nPaginationBackend.defaultProps = defaultProps;\n\nexport default PaginationBackend;\n","import React, { Component } from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\n\nexport default class ModalToDelete extends Component {\n  state = {\n    modal: this.props.isOpenModal\n  };\n\n  toggle = () => {\n    this.setState(state => ({\n      modal: !state.modal\n    }));\n\n    const { onRequestClose } = this.props;\n    onRequestClose();\n  };\n\n  render() {\n    const { modal } = this.state;\n    const { title, name, className, onDelete } = this.props;\n\n    return (\n      <Modal\n        isOpen={modal}\n        toggle={this.toggle}\n        className={`modal-danger \" + ${className ? className : \"\"}`}\n      >\n        <ModalHeader toggle={this.toggle}>{title}</ModalHeader>\n        <ModalBody>{`Are you sure to delete ${name}?`}</ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={onDelete}>\n            Delete\n          </Button>{\" \"}\n          <Button color=\"secondary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\n\nconst withModal = WrappedComponent =>\n  class withModal extends Component {\n    state = {\n      modal: false\n    };\n\n    static getDerivedStateFromProps(nextProps) {\n      if (nextProps) {\n        return {\n          modal: nextProps.isOpenModal\n        };\n      }\n\n      return null;\n    }\n\n    toggleModal = () => {\n      this.setState(state => ({\n        modal: !state.modal\n      }));\n\n      const { onRequestClose } = this.props;\n      onRequestClose();\n    };\n\n    render() {\n      const { modal } = this.state;\n      const { title, className } = this.props;\n\n      // const renderModalTitle = () => {\n      //   switch (title) {\n      //     case \"new contact\":\n      //       return \"New Contact\";\n      //     case \"edit contact\":\n      //       return \"Edit Contact\";\n      //     case \"appoint interview\":\n      //       return \"Appoint Interview\";\n      //     case \"add vacancy\":\n      //       return \"Add vacancy\";\n      //     case \"new user\":\n      //       return \"New user\";\n      //     case \"create new link\":\n      //       return \"Create new link\";\n      //     default:\n      //       return \"Modal\";\n      //   }\n      // };\n\n      return (\n        <Modal\n          isOpen={modal}\n          toggle={this.toggleModal}\n          className={`modal-primary \" + ${className ? className : \"\"}`}\n        >\n          <ModalHeader toggle={this.toggleModal}>{title}</ModalHeader>\n          <ModalBody>{modal && <WrappedComponent {...this.props} />}</ModalBody>\n        </Modal>\n      );\n    }\n  };\n\nexport default withModal;\n"],"sourceRoot":""}