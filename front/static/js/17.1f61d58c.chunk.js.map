{"version":3,"sources":["components/Vacancy/Profile/Info.js","components/Vacancy/Profile/Profile.js","components/hoc/withToggleCardBody.js","components/InnerHTMLMarkUp.js","components/shared/ControlledEditor.js","utils/api/vacancy.js"],"names":["VacancyProfileInfo","_ref","_ref$vacancy","vacancy","id","date","company","platform","seniority","status","location","salary","link","userRole","react_default","a","createElement","Card","CardHeader","Link","to","concat","title","className","style","color","textDecoration","CardBody","ListGroup","flush","ListGroupItem","moment","format","nazva","name","href","defaulProps","WithToggleCardBodyEditor","withToggleCardBody","ControlledEditor","VacancyProfile","state","description","details","updateVacancyProfileContent","content","_this","props","match","params","updateVacancy","then","updatedVacancy","setState","Object","objectSpread","_this2","this","getVacancyProfile","_this3","_this$state","role","user","Fragment","Row","Col","md","sm","Info","OpenClose","render","isOpen","open","close","onUpdate","InnerHTMLMarkUp","Component","WrappedComponent","_class","_temp","_Component","_getPrototypeOf2","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_len","arguments","length","args","Array","_key","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","apply","showContent","toggle","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","upDownArrow","classnames","icon-arrow-down","icon-arrow-up","icons","font-sm","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","display","justifyContent","alignItems","reactstrap__WEBPACK_IMPORTED_MODULE_9__","marginBottom","fontSize","fontWeight","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","marginRight","padding","backgroundColor","borderColor","boxShadow","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","defaultTypes","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_hoc_withToggleCardBody__WEBPACK_IMPORTED_MODULE_1__","dangerouslySetInnerHTML","__html","createHTMLMarkup","onEditorStateChange","editorState","handleSubmit","sendDetails","draftToHtml","convertToRaw","getCurrentContent","about","interviewDetail","aboutOne","descriptionOne","detailsOne","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","onSubmit","react_draft_wysiwyg__WEBPACK_IMPORTED_MODULE_6__","wrapperClassName","editorClassName","toolbarClassName","localization","locale","xl","URL","getToken","localStorage","getItem","token","fetch","method","headers","Authorization","Content-Type","response","ok","json","Error","statusText","data","date_create","platforms","seniorities","opus","catch","error","console","log","createNewVacancy","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_pecherkiy_Documents_goFriends_front_v2_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","body","JSON","stringify","sent","abrupt","t0","stop","_x","deleteVacancy","_ref2","_callee2","_context2","_x2"],"mappings":"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","file":"static/js/17.1f61d58c.chunk.js","sourcesContent":["// Core\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  ListGroup,\n  ListGroupItem\n} from \"reactstrap\";\n\nconst VacancyProfileInfo = ({\n  vacancy: {\n    id,\n    date,\n    company,\n    platform,\n    seniority,\n    status,\n    location,\n    salary,\n    link\n  },\n  userRole\n}) => (\n  <Card>\n    <CardHeader>\n      <Link\n        to={`/vacancies/${id}/edit`}\n        title=\"edit\"\n        className=\"pull-right\"\n        style={{ color: \"var(--dark)\", textDecoration: \"none\" }}\n      >\n        <i className=\"icon-pencil icons font-sm\" color=\"var(--gray)\" />\n      </Link>\n    </CardHeader>\n    <CardBody>\n      <ListGroup flush>\n        {date && (\n          <ListGroupItem>\n            Date: {moment(date).format(\"DD MMM YYYY\")}\n          </ListGroupItem>\n        )}\n        {company && (\n          <ListGroupItem>\n            Company:{\" \"}\n            {userRole !== 4 ? (\n              <Link to={`/companies/${company.id}`}>{company.nazva}</Link>\n            ) : (\n              company.nazva\n            )}\n          </ListGroupItem>\n        )}\n        {platform && <ListGroupItem>Platform: {platform.nazva}</ListGroupItem>}\n        {seniority && (\n          <ListGroupItem>Seniority: {seniority.nazva}</ListGroupItem>\n        )}\n        {status && <ListGroupItem>Status: {status.status}</ListGroupItem>}\n        {location && <ListGroupItem>Location: {location.name}</ListGroupItem>}\n        {salary && <ListGroupItem>Salary: {salary}</ListGroupItem>}\n        {link && (\n          <ListGroupItem>\n            Additional information: <a href={link}>link</a>\n          </ListGroupItem>\n        )}\n      </ListGroup>\n    </CardBody>\n  </Card>\n);\n\nVacancyProfileInfo.propTypes = {\n  vacancy: PropTypes.shape({\n    id: PropTypes.number,\n    date: PropTypes.string,\n    company: PropTypes.shape({\n      id: PropTypes.number,\n      nazva: PropTypes.string\n    }),\n    platform: PropTypes.shape({\n      id: PropTypes.number,\n      nazva: PropTypes.string\n    }),\n    seniority: PropTypes.shape({\n      id: PropTypes.number,\n      nazva: PropTypes.string\n    }),\n    status: PropTypes.shape({\n      id: PropTypes.number,\n      status: PropTypes.string\n    }),\n    location: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string\n    }),\n    salary: PropTypes.string,\n    link: PropTypes.string\n  }),\n  userRole: PropTypes.number.isRequired\n};\n\nVacancyProfileInfo.defaulProps = {\n  vacancy: {}\n};\n\nexport default VacancyProfileInfo;\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row } from \"reactstrap\";\n// Components\nimport VacancyProfileInfo from \"./Info\";\nimport InnerHTMLMarkUp from \"../../InnerHTMLMarkUp\";\nimport ControlledEditor from \"../../shared/ControlledEditor\";\nimport OpenClose from \"../../../render_prop/OpenClose\";\n// HOC\nimport withToggleCardBody from \"../../hoc/withToggleCardBody\";\n// Instruments\nimport { getVacancyProfile, updateVacancy } from \"../../../utils/api/vacancy\";\n\nconst WithToggleCardBodyEditor = withToggleCardBody(ControlledEditor);\n\nexport default class VacancyProfile extends Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      role: PropTypes.number.isRequired\n    })\n  };\n\n  state = {\n    id: null,\n    date: \"\",\n    company: {},\n    platform: {},\n    seniority: {},\n    status: {},\n    location: {},\n    salary: \"\",\n    link: \"\",\n    description: \"\",\n    details: \"\"\n  };\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    getVacancyProfile(id).then(vacancy => {\n      this.setState({ ...vacancy });\n    });\n  }\n\n  updateVacancyProfileContent = content => {\n    const { id } = this.props.match.params;\n\n    updateVacancy(id, content).then(updatedVacancy => {\n      this.setState({\n        ...updatedVacancy\n      });\n    });\n  };\n\n  render() {\n    const { description, details } = this.state;\n    const {\n      user: { role }\n    } = this.props;\n\n    return (\n      <>\n        <Row>\n          <Col md={6} sm={12}>\n            <VacancyProfileInfo vacancy={this.state} userRole={role} />\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12}>\n            {role !== 4 ? (\n              <>\n                <OpenClose\n                  render={(isOpen, open, close) =>\n                    isOpen ? (\n                      <WithToggleCardBodyEditor\n                        content={description}\n                        title=\"Description\"\n                        isOpen={isOpen}\n                        close={close}\n                        onUpdate={this.updateVacancyProfileContent}\n                      />\n                    ) : (\n                      <InnerHTMLMarkUp\n                        title=\"Description\"\n                        content={description}\n                        isOpen={isOpen}\n                        open={open}\n                        close={close}\n                      />\n                    )\n                  }\n                />\n                <OpenClose\n                  render={(isOpen, open, close) =>\n                    isOpen ? (\n                      <WithToggleCardBodyEditor\n                        content={details}\n                        title=\"Details\"\n                        isOpen={isOpen}\n                        close={close}\n                        onUpdate={this.updateVacancyProfileContent}\n                      />\n                    ) : (\n                      <InnerHTMLMarkUp\n                        title=\"Details\"\n                        content={details}\n                        isOpen={isOpen}\n                        open={open}\n                        close={close}\n                      />\n                    )\n                  }\n                />\n              </>\n            ) : (\n              <InnerHTMLMarkUp title=\"Details\" content={details} />\n            )}\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  ButtonGroup,\n  Collapse,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody\n} from \"reactstrap\";\n\nconst withToggleCardBody = WrappedComponent =>\n  class withToggleCardBody extends Component {\n    static propTypes = {\n      title: PropTypes.string\n    };\n\n    static defaultTypes = {\n      title: \"Card\"\n    };\n\n    state = {\n      showContent: true\n    };\n\n    toggle = () => {\n      this.setState(state => ({\n        showContent: !state.showContent\n      }));\n    };\n\n    render() {\n      const { title, isOpen, open, close } = this.props;\n      const { showContent } = this.state;\n\n      const upDownArrow = classnames({\n        \"icon-arrow-down\": showContent,\n        \"icon-arrow-up\": !showContent,\n        icons: true,\n        \"font-sm\": true\n      });\n\n      return (\n        <Card>\n          <CardHeader\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            }}\n          >\n            <CardTitle\n              style={{ marginBottom: 0, fontSize: \"14px\", fontWeight: \"bold\" }}\n            >\n              {title}\n            </CardTitle>\n            <ButtonGroup>\n              <Button\n                style={{\n                  marginRight: \"0.5rem\",\n                  padding: \"0.2rem 0.4rem\",\n                  backgroundColor: \"transparent\",\n                  borderColor: \"transparent\",\n                  boxShadow: \"none\"\n                }}\n                onClick={this.toggle}\n              >\n                <i className={upDownArrow} color=\"var(--gray)\" />\n              </Button>\n              {title !== \"Map\" ? (\n                isOpen ? (\n                  <Button\n                    title=\"close\"\n                    style={{\n                      padding: \"0.2rem 0.4rem\",\n                      backgroundColor: \"transparent\",\n                      borderColor: \"transparent\",\n                      boxShadow: \"none\"\n                    }}\n                    onClick={close}\n                  >\n                    <i\n                      className=\"icon-close icons font-sm\"\n                      color=\"var(--gray)\"\n                    />\n                  </Button>\n                ) : (\n                  <Button\n                    title=\"edit\"\n                    style={{\n                      padding: \"0.2rem 0.4rem\",\n                      backgroundColor: \"transparent\",\n                      borderColor: \"transparent\",\n                      boxShadow: \"none\"\n                    }}\n                    onClick={open}\n                  >\n                    <i\n                      className=\"icon-pencil icons font-sm\"\n                      color=\"var(--gray)\"\n                    />\n                  </Button>\n                )\n              ) : null}\n            </ButtonGroup>\n          </CardHeader>\n          <Collapse isOpen={showContent}>\n            <CardBody>\n              {showContent && <WrappedComponent {...this.props} />}\n            </CardBody>\n          </Collapse>\n        </Card>\n      );\n    }\n  };\n\nexport default withToggleCardBody;\n","// Core\nimport React from \"react\";\n// HOC\nimport withToggleCardBody from \"./hoc/withToggleCardBody\";\n\nconst InnerHTMLMarkUp = ({ content }) => {\n  const empty = \"<p>Add information</p>\";\n\n  const createHTMLMarkup = content => {\n    return content ? { __html: content } : { __html: empty };\n  };\n\n  return <div dangerouslySetInnerHTML={createHTMLMarkup(content)} />;\n};\n\nexport default withToggleCardBody(InnerHTMLMarkUp);\n","// Core\nimport React, { Component } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\nimport { Col, Button, ButtonGroup, Row } from \"reactstrap\";\nimport draftToHtml from \"draftjs-to-html\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nexport default class ControlledEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    const html = props.content === null ? \"\" : props.content;\n    const contentBlock = htmlToDraft(html);\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(\n        contentBlock.contentBlocks\n      );\n      const editorState = EditorState.createWithContent(contentState);\n      this.state = {\n        editorState\n      };\n    }\n  }\n\n  onEditorStateChange = editorState => {\n    this.setState({\n      editorState\n    });\n  };\n\n  handleSubmit = () => {\n    const { editorState } = this.state;\n    const { title, onUpdate, close } = this.props;\n\n    if (title === \"Send details\") {\n      const sendDetails = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      const contentToUpdate = {\n        sendDetails\n      };\n\n      onUpdate(contentToUpdate);\n    } else if (title === \"About company\") {\n      const about = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n      const contentToUpdate = {\n        about\n      };\n\n      onUpdate(contentToUpdate);\n    } else if (title === \"Interview details\") {\n      const interviewDetail = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      const contentToUpdate = {\n        interviewDetail\n      };\n\n      onUpdate(contentToUpdate);\n    } else if (title === \"About candidate\") {\n      const aboutOne = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      const contentToUpdate = {\n        aboutOne\n      };\n\n      onUpdate(contentToUpdate);\n    } else if (title === \"Description\") {\n      const descriptionOne = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      const contentToUpdate = {\n        descriptionOne\n      };\n\n      onUpdate(contentToUpdate);\n    } else if (title === \"Details\") {\n      const detailsOne = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      const contentToUpdate = {\n        detailsOne\n      };\n\n      onUpdate(contentToUpdate);\n    } else {\n      const content = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n\n      const contentToUpdate = {\n        content\n      };\n\n      onUpdate(contentToUpdate);\n    }\n\n    close();\n  };\n\n  render() {\n    const { editorState } = this.state;\n\n    return (\n      <div onSubmit={this.handleSubmit}>\n        <Editor\n          editorState={editorState}\n          wrapperClassName=\"wrapper-class\"\n          editorClassName=\"editor-class\"\n          toolbarClassName=\"toolbar-class\"\n          // wrapperStyle={<wrapperStyleObject>}\n          // editorStyle={<editorStyleObject>}\n          // toolbarStyle={<toolbarStyleObject>}\n          localization={{\n            locale: \"ru\"\n          }}\n          onEditorStateChange={this.onEditorStateChange}\n        />\n\n        <ButtonGroup>\n          <Row>\n            <Col xl={12}>\n              <Button color=\"primary\" onClick={this.handleSubmit}>\n                Save\n              </Button>\n            </Col>\n          </Row>\n        </ButtonGroup>\n      </div>\n    );\n  }\n}\n","const URL = \"http://api.uppeople.co/api\";\nconst getToken = () => localStorage.getItem(\"token\");\n\n/**\n * Fetches vacancy profile by id from an api\n *\n * @param {Number} id vacancy id\n * @returns {Promise} Promise object represents operation result\n */\nexport const getVacancyProfile = id => {\n  const token = getToken();\n  return fetch(`${URL}/main/viewVacancy/${id}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`Error while fetching: ${response.statusText}`);\n    })\n    .then(data => {\n      const vacancy = data[0];\n\n      const vacancyInfo = {\n        id: vacancy.id,\n        date: vacancy.date_create,\n        company: vacancy.company,\n        platform: vacancy.platforms,\n        seniority: vacancy.seniorities,\n        status: vacancy.status,\n        location: vacancy.location,\n        salary: vacancy.salary,\n        link: vacancy.link,\n        description: vacancy.opus,\n        details: vacancy.details\n      };\n\n      return vacancyInfo;\n    })\n    .catch(error => console.log(\"error in fetch: \", error));\n};\n/**\n * Creates new vacancy object\n *\n * @param {Object} vacancy {}\n * @returns {Promise} Promise object represents operation result\n */\nexport const createNewVacancy = async vacancy => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/addNewVacancy`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(vacancy)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n *  Updates vacancy by id\n *\n * @param {Number} id vacancy id\n * @param {Object} vacancy {}\n * @returns {Promise} Promise object represents operation result\n */\nexport const updateVacancy = (id, vacancy) => {\n  const token = getToken();\n  return fetch(`${URL}/main/editVacancy/${id}`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(vacancy)\n  })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`${response.statusText}`);\n    })\n    .then(data => {\n      const vacancy = data[0];\n\n      const vacancyInfo = {\n        id: vacancy.id,\n        date: vacancy.date_create,\n        company: vacancy.company,\n        platform: vacancy.platforms,\n        seniority: vacancy.seniorities,\n        status: vacancy.status,\n        location: vacancy.location,\n        salary: vacancy.salary,\n        link: vacancy.link,\n        description: vacancy.opus,\n        details: vacancy.details\n      };\n\n      return vacancyInfo;\n    })\n    .catch(error => console.log(\"error in fetch: \", error));\n};\n\n/**\n * Removes vacancy by id from an api\n *\n * @param {Number} id vacancy id\n * @returns {Promise} Promise object represents operation result\n */\nexport const deleteVacancy = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/deleteVacancy/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n"],"sourceRoot":""}