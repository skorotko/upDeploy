{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/Button.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","../node_modules/reactstrap/es/Table.js","../node_modules/reactstrap/es/ButtonGroup.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/chart.js/dist/Chart.js","../node_modules/@coreui/coreui-pro/dist/js/coreui-utilities.js","../node_modules/reactstrap/es/DropdownToggle.js","../node_modules/reactstrap/es/DropdownMenu.js","../node_modules/reactstrap/es/DropdownItem.js","../node_modules/react-router/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash.tonumber/index.js","../node_modules/reactstrap/es/ButtonDropdown.js","../node_modules/reactstrap/es/Progress.js","../node_modules/react-router/es/withRouter.js","../node_modules/react-router-dom/es/withRouter.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","__webpack_require__","d","__webpack_exports__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","n","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","propTypes","children","a","node","type","string","size","bsSize","state","valid","bool","invalid","tag","innerRef","oneOfType","object","func","static","plaintext","addon","className","cssModule","Input","_React$Component","props","_this","call","this","getRef","bind","focus","_proto","prototype","ref","render","_this$props","staticInput","attributes","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","test","classes","createElement","Component","defaultProps","active","aria-label","block","color","disabled","outline","onClick","close","Button","e","preventDefault","ariaLabel","aria-hidden","btnOutlineColor","href","defaultAriaLabel","undefined","exports","CustomTooltips","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_chart","canvas","id","_idMaker","Math","random","toString","_canvasId","_setCanvasId","tooltip","document","getElementById","parentNode","appendChild","opacity","classList","remove","yAlign","add","body","titleLines","title","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","map","item","lines","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","style","backgroundColor","split","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","position","getBoundingClientRect","positionY","offsetTop","positionX","offsetLeft","positionLeft","caretX","positionTop","caretY","halfWidth","width","left","top","customTooltips","factory","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","bordered","borderless","striped","inverse","dark","hover","responsive","responsiveTag","Table","ResponsiveTag","table","responsiveClassName","role","vertical","ButtonGroup","inline","Form","_Component","submit","row","check","FormGroup","module","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","Array","slice","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","name","Color","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","result","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","isNullOrUndef","isArray","substr","isObject","isFinite","_isFinite","_x","apply","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","array","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","height","roundedRect","radius","right","bottom","moveTo","arc","closePath","rect","drawPoint","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","addResizeListener","expando","resizer","expand","shrink","_reset","scrollLeft","scrollTop","onScroll","createResizer","ticking","throttled","container","maintainAspectRatio","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","watchForRender","insertBefore","firstChild","removeResizeListener","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","_active","alignment","backgroundPoint","tooltipSize","labelTextColors","_eventPosition","itemSort","dataPoints","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","createCommonjsModule","_core","core","version","__e","_global","self","Function","__g","_shared","store","copyright","px","_uid","_wks","Symbol","USE_SYMBOL","$exports","_isObject","it","_anObject","TypeError","_fails","_descriptors","document$1","is","_domCreate","_ie8DomDefine","dP","_objectDp","O","P","Attributes","S","_toPrimitive","_propertyDesc","bitmap","_hide","UNSCOPABLES","ArrayProto","_addToUnscopables","_iterStep","done","_iterators","_cof","_iobject","propertyIsEnumerable","_defined","_toIobject","_has","_redefine","SRC","$toString","TPL","inspectSource","safe","isFunction","_aFunction","_ctx","that","$export","own","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","expProto","U","W","R","IS_INCLUDES","_export","_toInteger","_toLength","min$1","shared","_sharedKey","arrayIndexOf","$this","_toAbsoluteIndex","IE_PROTO","_enumBugKeys","_objectKeys","names","_objectKeysInternal","_objectDps","defineProperties","Properties","document$2","_html","documentElement","IE_PROTO$1","Empty","_createDict","iframeDocument","iframe","contentWindow","open","write","lt","_objectCreate","create","def","TAG","_setToStringTag","stat","IteratorPrototype","_iterCreate","Constructor","NAME","_toObject","IE_PROTO$2","ObjectProto","_objectGpo","getPrototypeOf","ITERATOR","BUGGY","returnThis","es6_array_iterator","Base","DEFAULT","IS_SET","FORCED","methods","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","_iterDefine","iterated","_t","_i","_k","Arguments","ITERATOR$1","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","KEY","_objectSap","_objectGops","_objectPie","$assign","assign","_objectAssign","A","K","T","aLen","getSymbols","isEnum","at","TO_STRING","charCodeAt","_stringAt","_advanceStringIndex","unicode","TAG$1","ARG","builtinExec","_regexpExecAbstract","tryGet","callee","_classof","_flags","ignoreCase","multiline","sticky","nativeExec","nativeReplace","replace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","NPCG_INCLUDED","lastIndex","reCopy","re","_regexpExec","forced","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","groups","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","_fixReWks","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","fns","nativeMethod","regexp","arg2","forceStringMethod","strfn","rxfn","max$1","min$2","floor$1","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","defined","REPLACE","$replace","maybeCallNative","searchValue","replaceValue","rx","functionalReplace","fullUnicode","results","matchStr","accumulatedResult","nextSourcePosition","matched","captures","namedCaptures","replacerArgs","replacement","getSubstitution","tailPos","symbols","capture","MATCH","$match","SPECIES$1","$min","$push","SUPPORTS_Y","SPLIT","$split","internalSplit","separator","limit","isRegExp","_isRegexp","lastLength","output","flags","lastLastIndex","splitLimit","separatorCopy","splitter","C","D","_speciesConstructor","unicodeMatching","lim","isCustomProperty","Boolean","documentMode","cssCustomProperties","sheets","styleSheets","cssText","rules","cssRules","selectorText","substring","lastIndexOf","trim","getCssCustomProperties","define","asideMenuCssClasses","checkBreakpoint","breakpoint","list","sidebarCssClasses","validBreakpoints","deepObjectsMerge","_arr","getColor","rawProperty","hexToRgb","hexToRgba","rgbToHex","react_popper__WEBPACK_IMPORTED_MODULE_7__","_utils__WEBPACK_IMPORTED_MODULE_8__","_Button__WEBPACK_IMPORTED_MODULE_9__","caret","aria-haspopup","nav","contextTypes","isOpen","isRequired","toggle","inNavbar","DropdownToggle","dropdown-toggle","dropdown-toggle-split","nav-link","aria-expanded","component","_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","react_popper__WEBPACK_IMPORTED_MODULE_6__","modifiers","persist","direction","oneOf","noFlipModifier","directionPositionMap","up","down","DropdownMenu","attrs","dropdown-menu-right","show","position1","position2","placement","tabIndex","x-placement","divider","header","DropdownItem","getTabIndex","_omit","dropdown-item","dropdown-header","dropdown-divider","REACT_STATICS","childContextTypes","displayName","getDefaultProps","getDerivedStateFromProps","mixins","KNOWN_STATICS","caller","arity","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","process","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","_objectWithoutProperties","_classCallCheck","instance","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_temp","_len","_key","handleOnClick","chartInstance","onElementsClick","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","_props3","number","arrayOf","propName","componentName","_React$Component2","Doughnut","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","baseIsEqual","other","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","iteratee","accumulator","baseEach","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","objectToString","isObjectLike","isSymbol","isBinary","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_Dropdown__WEBPACK_IMPORTED_MODULE_3__","ButtonDropdown","group","lodash_tonumber__WEBPACK_IMPORTED_MODULE_5__","lodash_tonumber__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","multi","animated","barClassName","Progress","progressClasses","progressBarClasses","ProgressBar","aria-valuenow","aria-valuemin","aria-valuemax","es_withRouter","wrappedComponentRef","remainingProps","react_default","Route","routeComponentProps","WrappedComponent","prop_types_default","hoist_non_react_statics_cjs_default"],"mappings":"2FAAe,SAAAA,EAAAC,EAAAC,EAAAC,GAYf,OAXAD,KAAAD,EACAG,OAAAC,eAAAJ,EAAAC,EAAA,CACAC,QACAG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAP,EAAAC,GAAAC,EAGAF,ECXe,SAAAQ,EAAAC,GACf,QAAAC,EAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,IAAAG,EAAA,MAAAF,UAAAD,GAAAC,UAAAD,GAAA,GACAI,EAAAX,OAAAY,KAAAF,GAEA,oBAAAV,OAAAa,wBACAF,IAAAG,OAAAd,OAAAa,sBAAAH,GAAAK,OAAA,SAAAC,GACA,OAAAhB,OAAAiB,yBAAAP,EAAAM,GAAAd,eAIAS,EAAAO,QAAA,SAAApB,GACMF,EAAcU,EAAAR,EAAAY,EAAAZ,MAIpB,OAAAQ,EAjBAa,EAAAC,EAAAC,EAAA,sBAAAhB,sCCAA,IAAAiB,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAE,EAAAd,EAAA,IAUAe,EAAA,CACAC,SAAYL,EAAAM,EAASC,KACrBC,KAAQR,EAAAM,EAASG,OACjBC,KAAQV,EAAAM,EAASG,OACjBE,OAAUX,EAAAM,EAASG,OACnBG,MAAS1C,OAAAiC,EAAA,EAAAjC,CAAW8B,EAAAM,EAASG,OAAA,qEAC7BI,MAASb,EAAAM,EAASQ,KAClBC,QAAWf,EAAAM,EAASQ,KACpBE,IAAOb,EAAA,EACPc,SAAYjB,EAAAM,EAASY,UAAA,CAAYlB,EAAAM,EAASa,OAASnB,EAAAM,EAASc,KAAOpB,EAAAM,EAASG,SAC5EY,OAAUnD,OAAAiC,EAAA,EAAAjC,CAAW8B,EAAAM,EAASQ,KAAA,mCAC9BQ,UAAatB,EAAAM,EAASQ,KACtBS,MAASvB,EAAAM,EAASQ,KAClBU,UAAaxB,EAAAM,EAASG,OACtBgB,UAAazB,EAAAM,EAASa,QAMtBO,EAEA,SAAAC,GAGA,SAAAD,EAAAE,GACA,IAAAC,EAKA,OAHAA,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,MACAC,OAAAH,EAAAG,OAAAC,KAAqC/D,OAAAyB,EAAA,EAAAzB,CAAuBA,OAAAyB,EAAA,EAAAzB,CAAsB2D,KAClFA,EAAAK,MAAAL,EAAAK,MAAAD,KAAmC/D,OAAAyB,EAAA,EAAAzB,CAAuBA,OAAAyB,EAAA,EAAAzB,CAAsB2D,KAChFA,EARE3D,OAAAwB,EAAA,EAAAxB,CAAcwD,EAAAC,GAWhB,IAAAQ,EAAAT,EAAAU,UAoFA,OAlFAD,EAAAH,OAAA,SAAAK,GACAN,KAAAH,MAAAX,UACAc,KAAAH,MAAAX,SAAAoB,GAGAN,KAAAM,OAGAF,EAAAD,MAAA,WACAH,KAAAM,KACAN,KAAAM,IAAAH,SAIAC,EAAAG,OAAA,WACA,IAAAC,EAAAR,KAAAH,MACAJ,EAAAe,EAAAf,UACAC,EAAAc,EAAAd,UACAjB,EAAA+B,EAAA/B,KACAG,EAAA4B,EAAA5B,OACAC,EAAA2B,EAAA3B,MACAC,EAAA0B,EAAA1B,MACAE,EAAAwB,EAAAxB,QACAC,EAAAuB,EAAAvB,IACAO,EAAAgB,EAAAhB,MACAiB,EAAAD,EAAAlB,OACAC,EAAAiB,EAAAjB,UACAL,EAAAsB,EAAAtB,SACAwB,EAAqBvE,OAAAuB,EAAA,EAAAvB,CAA6BqE,EAAA,mHAElDG,EAAA,qBAAAC,QAAAnC,IAAA,EACAoC,EAAA,IAAAC,OAAA,WAIAC,EAAA9B,IADA,WAAAR,GADA,aAAAA,EAEAA,EAAA,SACAuC,EAAA,eAEAzB,GAAAkB,GACAO,GAAA,aACAD,EAAA9B,GAAA,SARA,SAAAR,EAUAuC,GAAA,QACKL,IAELK,EADAxB,EACA,KAEA,oBAIAX,GAAA,qBAAAC,GAAA,qBAAAE,IACA,WAAAH,EACAG,GAAA,EACO,YAAAH,IACPC,GAAA,IAIA4B,EAAA/B,MAAAkC,EAAAI,KAAAP,EAAA/B,QACMxC,OAAAiC,EAAA,EAAAjC,CAAQ,oFACdyC,EAAA8B,EAAA/B,YACA+B,EAAA/B,MAGA,IAAAuC,EAAkB/E,OAAAiC,EAAA,EAAAjC,CAAgBgC,IAAUsB,EAAAT,GAAA,aAAAF,GAAA,aAAAF,GAAA,gBAAAA,EAAAoC,GAAAtB,GAW5C,OATA,UAAAqB,GAAA9B,GAAA,oBAAAA,KACAyB,EAAAjC,SAGAiC,EAAApC,UAAAiB,GAAAkB,GAAA,WAAAhC,GAAA,kBAAAsC,GAAA,WAAAA,IACM5E,OAAAiC,EAAA,EAAAjC,CAAQ,yBAAAsC,EAAA,6EACdiC,EAAApC,UAGWR,EAAAS,EAAK4C,cAAAJ,EAAoB5E,OAAAsB,EAAA,EAAAtB,CAAQ,GAAGuE,EAAA,CAC/CJ,IAAApB,EACAO,UAAAyB,MAIAvB,EAhGA,CAiGE7B,EAAAS,EAAK6C,WAEPzB,EAAAtB,YACAsB,EAAA0B,aA1GA,CACA5C,KAAA,QA0GejB,EAAA,sCCrIf,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAE,EAAAd,EAAA,IAQAe,EAAA,CACAiD,OAAUrD,EAAAM,EAASQ,KACnBwC,aAAgBtD,EAAAM,EAASG,OACzB8C,MAASvD,EAAAM,EAASQ,KAClB0C,MAASxD,EAAAM,EAASG,OAClBgD,SAAYzD,EAAAM,EAASQ,KACrB4C,QAAW1D,EAAAM,EAASQ,KACpBE,IAAOb,EAAA,EACPc,SAAYjB,EAAAM,EAASY,UAAA,CAAYlB,EAAAM,EAASa,OAASnB,EAAAM,EAASc,KAAOpB,EAAAM,EAASG,SAC5EkD,QAAW3D,EAAAM,EAASc,KACpBV,KAAQV,EAAAM,EAASG,OACjBJ,SAAYL,EAAAM,EAASC,KACrBiB,UAAaxB,EAAAM,EAASG,OACtBgB,UAAazB,EAAAM,EAASa,OACtByC,MAAS5D,EAAAM,EAASQ,MAOlB+C,EAEA,SAAAlC,GAGA,SAAAkC,EAAAjC,GACA,IAAAC,EAIA,OAFAA,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,MACA4B,QAAA9B,EAAA8B,QAAA1B,KAAuC/D,OAAAyB,EAAA,EAAAzB,CAAuBA,OAAAyB,EAAA,EAAAzB,CAAsB2D,KACpFA,EAPE3D,OAAAwB,EAAA,EAAAxB,CAAc2F,EAAAlC,GAUhB,IAAAQ,EAAA0B,EAAAzB,UAyDA,OAvDAD,EAAAwB,QAAA,SAAAG,GACA/B,KAAAH,MAAA6B,SACAK,EAAAC,iBAIAhC,KAAAH,MAAA+B,SACA5B,KAAAH,MAAA+B,QAAAG,IAIA3B,EAAAG,OAAA,WACA,IAAAC,EAAAR,KAAAH,MACAyB,EAAAd,EAAAc,OACAW,EAAAzB,EAAA,cACAgB,EAAAhB,EAAAgB,MACA/B,EAAAe,EAAAf,UACAoC,EAAArB,EAAAqB,MACAnC,EAAAc,EAAAd,UACA+B,EAAAjB,EAAAiB,MACAE,EAAAnB,EAAAmB,QACAhD,EAAA6B,EAAA7B,KACAoC,EAAAP,EAAAvB,IACAC,EAAAsB,EAAAtB,SACAwB,EAAqBvE,OAAAuB,EAAA,EAAAvB,CAA6BqE,EAAA,2GAElDqB,GAAA,qBAAAnB,EAAApC,WACAoC,EAAApC,SAA4BR,EAAAS,EAAK4C,cAAA,QACjCe,eAAA,GACO,SAGP,IAAAC,EAAA,OAAAR,EAAA,mBAAAF,EACAP,EAAkB/E,OAAAiC,EAAA,EAAAjC,CAAgBgC,IAAUsB,EAAA,CAC5CoC,SACKA,GAAA,MAAAA,GAAAM,IAAAxD,GAAA,OAAAA,IAAA6C,GAAA,aACLF,SACAI,SAAA1B,KAAAH,MAAA6B,WACKhC,GAELgB,EAAA0B,MAAA,WAAArB,IACAA,EAAA,KAGA,IAAAsB,EAAAR,EAAA,aACA,OAAW/D,EAAAS,EAAK4C,cAAAJ,EAAoB5E,OAAAsB,EAAA,EAAAtB,CAAQ,CAC5CsC,KAAA,WAAAsC,GAAAL,EAAAkB,QAAA,cAAAU,GACK5B,EAAA,CACLjB,UAAAyB,EACAZ,IAAApB,EACA0C,QAAA5B,KAAA4B,QACAL,aAAAU,GAAAI,MAIAP,EApEA,CAqEEhE,EAAAS,EAAK6C,WAEPU,EAAAzD,YACAyD,EAAAT,aA/EA,CACAI,MAAA,YACAxC,IAAA,UA8EezB,EAAA,0BCtGd,SAAA+E,GACD,aAQA,SAAAC,EAAAC,GACA,IAAA3C,EAAAE,KAgBA0C,EAAA,CACAC,MAAA,QACAC,MAAA,QACAC,gBAAA,kBACAC,aAAA,eACAC,aAAA,eACAC,kBAAA,oBACAC,wBAAA,0BACAC,wBAAA,0BACAC,wBAAA,0BACAC,eAAA,iBACAC,oBAAA,uBAEAC,EAAA,CACAC,IAAA,MACAC,KAAA,OACAC,SAAAzD,KAAA0D,OAAAC,OAAAC,IA7BA,WACA,IAAAC,EAAA,WAGA,OADA,OACA,EAAAC,KAAAC,UAAA,GAAAC,SAFA,KAKAC,EAAA,YAAAJ,SAGA,OADA/D,EAAA4D,OAAAC,OAAAC,GAAAK,EACAA,EAmBAC,IAAA,YAEAC,EAAAC,SAAAC,eAAAf,EAAAG,SAWA,GATAU,KACAA,EAAAC,SAAAjD,cAAA,QACAyC,GAAAN,EAAAG,QACAU,EAAA1E,UAAAiD,EAAAG,gBAEA7C,KAAA0D,OAAAC,OAAAW,WAAAC,YAAAJ,IAIA,IAAA1B,EAAA+B,QAAA,CAeA,GATAL,EAAAM,UAAAC,OAAAhC,EAAAC,MAAAD,EAAAE,MAAAF,EAAAI,cAEAL,EAAAkC,OACAR,EAAAM,UAAAG,IAAAnC,EAAAkC,QAEAR,EAAAM,UAAAG,IAAAlC,EAAAI,cAIAL,EAAAoC,KAAA,CACA,IAAAC,EAAArC,EAAAsC,OAAA,GACAC,EAAAZ,SAAAjD,cAAAmC,EAAAC,KACAyB,EAAAvF,UAAAiD,EAAAU,eACA0B,EAAAzH,QAAA,SAAA0H,GACA,IAAAE,EAAAb,SAAAjD,cAAAmC,EAAAC,KACA0B,EAAAxF,UAAAiD,EAAAW,oBACA4B,EAAAC,UAAAH,EACAC,EAAAT,YAAAU,KAEA,IAAAE,EAAAf,SAAAjD,cAAAmC,EAAAC,KACA4B,EAAA1F,UAAAiD,EAAAK,aACA,IAAAqC,EAAA3C,EAAAoC,KAAAQ,IAAA,SAAAC,GACA,OAAAA,EAAAC,QAEAH,EAAA/H,QAAA,SAAAiI,EAAA5I,GACA,IAAA8I,EAAApB,SAAAjD,cAAAmC,EAAAC,KACAiC,EAAA/F,UAAAiD,EAAAM,kBACA,IAAAyC,EAAAhD,EAAAiD,YAAAhJ,GACAiJ,EAAAvB,SAAAjD,cAAAmC,EAAAE,MAKA,GAJAmC,EAAAlG,UAAAiD,EAAAO,wBACA0C,EAAAC,MAAAC,gBAAAJ,EAAAI,gBACAL,EAAAjB,YAAAoB,GAEAL,EAAA,GAAAQ,MAAA,KAAAlJ,OAAA,GACA,IAAAmJ,EAAA3B,SAAAjD,cAAAmC,EAAAE,MACAuC,EAAAtG,UAAAiD,EAAAQ,wBACA6C,EAAAb,UAAAI,EAAA,GAAAQ,MAAA,SACAN,EAAAjB,YAAAwB,GACA,IAAAC,EAAA5B,SAAAjD,cAAAmC,EAAAE,MACAwC,EAAAvG,UAAAiD,EAAAS,wBACA6C,EAAAd,UAAAI,EAAA,GAAAQ,MAAA,MAAAG,MACAT,EAAAjB,YAAAyB,OACS,CACT,IAAAE,EAAA9B,SAAAjD,cAAAmC,EAAAE,MAEA0C,EAAAzG,UAAAiD,EAAAS,wBACA+C,EAAAhB,UAAAI,EAAA,GACAE,EAAAjB,YAAA2B,GAGAf,EAAAZ,YAAAiB,KAEArB,EAAAe,UAAA,GACAf,EAAAI,YAAAS,GACAb,EAAAI,YAAAY,GAGA,IAAAgB,EAAAnG,KAAA0D,OAAAC,OAAAyC,wBAEAC,EAAArG,KAAA0D,OAAAC,OAAA2C,UACAC,EAAAvG,KAAA0D,OAAAC,OAAA6C,WACAC,EAAAF,EAAA9D,EAAAiE,OACAC,EAAAN,EAAA5D,EAAAmE,OAEAC,EAAApE,EAAAqE,MAAA,EAEAL,EAAAI,EAAAV,EAAAW,MACAL,GAAAI,EACKJ,EAAAI,IACLJ,GAAAI,GAIA1C,EAAAyB,MAAApB,QAAA,EACAL,EAAAyB,MAAAmB,KAAAN,EAAA,KACAtC,EAAAyB,MAAAoB,IAAAL,EAAA,UAhFAxC,EAAAyB,MAAApB,QAAA,EAmFA,IAAAyC,EAAAzE,EAEAD,EAAAC,iBACAD,EAAA0E,iBACA9K,OAAAC,eAAAmG,EAAA,cACArG,OAAA,IAjJ8DgL,CAAA3E,qCCD9D,IAAA9E,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAA6J,EAAA7J,EAAA,GAAA8J,EAAA9J,EAAAS,EAAAoJ,GAAAE,EAAA/J,EAAA,GAAAgK,EAAAhK,EAAAS,EAAAsJ,GAAAE,EAAAjK,EAAA,KAAAkK,EAAAlK,EAAAS,EAAAwJ,GAAAE,EAAAnK,EAAA,IAMAe,EAAA,CACAoB,UAAa6H,EAAA/I,EAASG,OACtBgB,UAAa4H,EAAA/I,EAASa,OACtBT,KAAQ2I,EAAA/I,EAASG,OACjBgJ,SAAYJ,EAAA/I,EAASQ,KACrB4I,WAAcL,EAAA/I,EAASQ,KACvB6I,QAAWN,EAAA/I,EAASQ,KACpB8I,QAAW1L,OAAAsL,EAAA,EAAAtL,CAAWmL,EAAA/I,EAASQ,KAAA,8BAC/B+I,KAAQR,EAAA/I,EAASQ,KACjBgJ,MAAST,EAAA/I,EAASQ,KAClBiJ,WAAcV,EAAA/I,EAASY,UAAA,CAAYmI,EAAA/I,EAASQ,KAAOuI,EAAA/I,EAASG,SAC5DO,IAAOwI,EAAA,EACPQ,cAAiBR,EAAA,EACjBvI,SAAYoI,EAAA/I,EAASY,UAAA,CAAYmI,EAAA/I,EAASc,KAAOiI,EAAA/I,EAASG,OAAS4I,EAAA/I,EAASa,UAO5E8I,EAAA,SAAArI,GACA,IAAAJ,EAAAI,EAAAJ,UACAC,EAAAG,EAAAH,UACAf,EAAAkB,EAAAlB,KACA+I,EAAA7H,EAAA6H,SACAC,EAAA9H,EAAA8H,WACAC,EAAA/H,EAAA+H,QACAC,EAAAhI,EAAAgI,QACAC,EAAAjI,EAAAiI,KACAC,EAAAlI,EAAAkI,MACAC,EAAAnI,EAAAmI,WACAjH,EAAAlB,EAAAZ,IACAkJ,EAAAtI,EAAAoI,cACA/I,EAAAW,EAAAX,SACAwB,EAAmBvE,OAAAuB,EAAA,EAAAvB,CAA6B0D,EAAA,2IAEhDqB,EAAgB/E,OAAAsL,EAAA,EAAAtL,CAAgBqL,IAAU/H,EAAA,UAAAd,GAAA,SAAAA,IAAA+I,GAAA,mBAAAC,GAAA,qBAAAC,GAAA,mBAAAE,IAAAD,IAAA,eAAAE,GAAA,eAAArI,GAC1C0I,EAAchB,EAAA7I,EAAK4C,cAAAJ,EAAoB5E,OAAAsB,EAAA,EAAAtB,CAAQ,GAAGuE,EAAA,CAClDJ,IAAApB,EACAO,UAAAyB,KAGA,GAAA8G,EAAA,CACA,IAAAK,GAAA,IAAAL,EAAA,uCAAAA,EACA,OAAWZ,EAAA7I,EAAK4C,cAAAgH,EAAA,CAChB1I,UAAA4I,GACKD,GAGL,OAAAA,GAGAF,EAAA7J,YACA6J,EAAA7G,aAtCA,CACApC,IAAA,QACAgJ,cAAA,OAqCezK,EAAA,sCC5Df,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAA6J,EAAA7J,EAAA,GAAA8J,EAAA9J,EAAAS,EAAAoJ,GAAAE,EAAA/J,EAAA,GAAAgK,EAAAhK,EAAAS,EAAAsJ,GAAAE,EAAAjK,EAAA,KAAAkK,EAAAlK,EAAAS,EAAAwJ,GAAAE,EAAAnK,EAAA,IAMAe,EAAA,CACAY,IAAOwI,EAAA,EACPlG,aAAgB+F,EAAA/I,EAASG,OACzBe,UAAa6H,EAAA/I,EAASG,OACtBgB,UAAa4H,EAAA/I,EAASa,OACtBkJ,KAAQhB,EAAA/I,EAASG,OACjBC,KAAQ2I,EAAA/I,EAASG,OACjB6J,SAAYjB,EAAA/I,EAASQ,MAOrByJ,EAAA,SAAA3I,GACA,IAAAJ,EAAAI,EAAAJ,UACAC,EAAAG,EAAAH,UACAf,EAAAkB,EAAAlB,KACA4J,EAAA1I,EAAA0I,SACAxH,EAAAlB,EAAAZ,IACAyB,EAAmBvE,OAAAuB,EAAA,EAAAvB,CAA6B0D,EAAA,mDAEhDqB,EAAgB/E,OAAAsL,EAAA,EAAAtL,CAAgBqL,IAAU/H,IAAAd,GAAA,aAAAA,EAAA4J,EAAA,kCAAA7I,GAC1C,OAAS0H,EAAA7I,EAAK4C,cAAAJ,EAAoB5E,OAAAsB,EAAA,EAAAtB,CAAQ,GAAGuE,EAAA,CAC7CjB,UAAAyB,MAIAsH,EAAAnK,YACAmK,EAAAnH,aApBA,CACApC,IAAA,MACAqJ,KAAA,SAmBe9K,EAAA,sCCpCf,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAE,EAAAd,EAAA,IAQAe,EAAA,CACAC,SAAYL,EAAAM,EAASC,KACrBiK,OAAUxK,EAAAM,EAASQ,KACnBE,IAAOb,EAAA,EACPc,SAAYjB,EAAAM,EAASY,UAAA,CAAYlB,EAAAM,EAASa,OAASnB,EAAAM,EAASc,KAAOpB,EAAAM,EAASG,SAC5Ee,UAAaxB,EAAAM,EAASG,OACtBgB,UAAazB,EAAAM,EAASa,QAMtBsJ,EAEA,SAAAC,GAGA,SAAAD,EAAA7I,GACA,IAAAC,EAKA,OAHAA,EAAA6I,EAAA5I,KAAAC,KAAAH,IAAAG,MACAC,OAAAH,EAAAG,OAAAC,KAAqC/D,OAAAyB,EAAA,EAAAzB,CAAuBA,OAAAyB,EAAA,EAAAzB,CAAsB2D,KAClFA,EAAA8I,OAAA9I,EAAA8I,OAAA1I,KAAqC/D,OAAAyB,EAAA,EAAAzB,CAAuBA,OAAAyB,EAAA,EAAAzB,CAAsB2D,KAClFA,EARE3D,OAAAwB,EAAA,EAAAxB,CAAcuM,EAAAC,GAWhB,IAAAvI,EAAAsI,EAAArI,UAgCA,OA9BAD,EAAAH,OAAA,SAAAK,GACAN,KAAAH,MAAAX,UACAc,KAAAH,MAAAX,SAAAoB,GAGAN,KAAAM,OAGAF,EAAAwI,OAAA,WACA5I,KAAAM,KACAN,KAAAM,IAAAsI,UAIAxI,EAAAG,OAAA,WACA,IAAAC,EAAAR,KAAAH,MACAJ,EAAAe,EAAAf,UACAC,EAAAc,EAAAd,UACA+I,EAAAjI,EAAAiI,OACA1H,EAAAP,EAAAvB,IACAC,EAAAsB,EAAAtB,SACAwB,EAAqBvE,OAAAuB,EAAA,EAAAvB,CAA6BqE,EAAA,qDAElDU,EAAkB/E,OAAAiC,EAAA,EAAAjC,CAAgBgC,IAAUsB,IAAAgJ,GAAA,eAAA/I,GAC5C,OAAW5B,EAAAS,EAAK4C,cAAAJ,EAAoB5E,OAAAsB,EAAA,EAAAtB,CAAQ,GAAGuE,EAAA,CAC/CJ,IAAApB,EACAO,UAAAyB,MAIAwH,EA5CA,CA6CE7K,EAAA,WAEF6K,EAAArK,YACAqK,EAAArH,aAtDA,CACApC,IAAA,QAsDezB,EAAA,sCCvEf,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAA6J,EAAA7J,EAAA,GAAA8J,EAAA9J,EAAAS,EAAAoJ,GAAAE,EAAA/J,EAAA,GAAAgK,EAAAhK,EAAAS,EAAAsJ,GAAAE,EAAAjK,EAAA,KAAAkK,EAAAlK,EAAAS,EAAAwJ,GAAAE,EAAAnK,EAAA,IAMAe,EAAA,CACAC,SAAYgJ,EAAA/I,EAASC,KACrBqK,IAAOvB,EAAA/I,EAASQ,KAChB+J,MAASxB,EAAA/I,EAASQ,KAClB0J,OAAUnB,EAAA/I,EAASQ,KACnB2C,SAAY4F,EAAA/I,EAASQ,KACrBE,IAAOwI,EAAA,EACPhI,UAAa6H,EAAA/I,EAASG,OACtBgB,UAAa4H,EAAA/I,EAASa,QAMtB2J,EAAA,SAAAlJ,GACA,IAAAJ,EAAAI,EAAAJ,UACAC,EAAAG,EAAAH,UACAmJ,EAAAhJ,EAAAgJ,IACAnH,EAAA7B,EAAA6B,SACAoH,EAAAjJ,EAAAiJ,MACAL,EAAA5I,EAAA4I,OACA1H,EAAAlB,EAAAZ,IACAyB,EAAmBvE,OAAAuB,EAAA,EAAAvB,CAA6B0D,EAAA,mEAEhDqB,EAAgB/E,OAAAsL,EAAA,EAAAtL,CAAgBqL,IAAU/H,IAAAoJ,GAAA,MAAAC,EAAA,6BAAAA,IAAAL,IAAA,uBAAAK,IAAApH,IAAA,YAAAhC,GAC1C,OAAS0H,EAAA7I,EAAK4C,cAAAJ,EAAoB5E,OAAAsB,EAAA,EAAAtB,CAAQ,GAAGuE,EAAA,CAC7CjB,UAAAyB,MAIA6H,EAAA1K,YACA0K,EAAA1H,aArBA,CACApC,IAAA,OAqBezB,EAAA,yBC/B+CwL,EAAAzG,QAW7D,SAAA0G,GACD,aAEAA,OAAAC,eAAA,WAAAD,EAAA,QAAAA,EAGA,IAAAE,EAAA,CACAC,UACAC,UACAC,UACAC,WACAC,cACAC,UACAC,UACAC,QA0IA,SAAAC,GACA,OAAAC,EAAAH,EAAAE,KA1IAE,UACAC,QA0KA,SAAAC,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAIA,WAAAG,EAGA,QAOA,CAAAF,EADA,GAFAC,IADAC,GAAA,IACA,EAAAA,EAAA,EAAAA,IAEAA,EAAAD,GACA,KAFAC,EAAAD,GAAA,EAEA,MA1LAE,QA6LA,SAAAR,GACA,OAAAN,EAAAQ,EAAAF,KA7LAS,SAgMA,SAAAT,GACA,OAAAL,EAAAO,EAAAF,KAhMAU,YAmMA,SAAAV,GACA,OAAAJ,EAAAM,EAAAF,KAnMAW,UACAC,QAqOA,SAAAC,GACA,IAGAC,EACAP,EAJAF,EAAAQ,EAAA,GACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OAQA,OAJAC,EAAAR,EAAAS,EAIA,CAAAV,EAAA,KAFAS,GADAA,IAFAP,GAAA,EAAAD,GAAAS,IAEA,EAAAR,EAAA,EAAAA,IACA,GAEA,KADAA,GAAA,KA9OAS,QAkPA,SAAAhB,GACA,OAAAN,EAAAiB,EAAAX,KAlPAiB,SAqPA,SAAAjB,GACA,OAAAL,EAAAgB,EAAAX,KArPAkB,YAwPA,SAAAlB,GACA,OAAAJ,EAAAe,EAAAX,KAxPAmB,UACAC,QA+TA,SAAApB,GACA,OAAAR,EAAA2B,EAAAnB,KA/TAqB,QAkUA,SAAArB,GACA,OAAAP,EAAA0B,EAAAnB,KAlUAsB,SAqUA,SAAAtB,GACA,OAAAL,EAAAwB,EAAAnB,KArUAuB,YAwUA,SAAAvB,GACA,OAAAJ,EAAAuB,EAAAnB,KAxUAwB,WACAC,SAwVA,SAAAzB,GACA,OAAAR,EAAAgC,EAAAxB,KAxVA0B,SA2VA,SAAA1B,GACA,OAAAP,EAAA+B,EAAAxB,KA3VA2B,SA8VA,SAAA3B,GACA,OAAAN,EAAA8B,EAAAxB,KA9VA4B,aAiWA,SAAA5B,GACA,OAAAJ,EAAA4B,EAAAxB,KAjWA6B,cACAC,YAmdA,SAAA9B,GACA,OAAAR,EAAAqC,EAAA7B,KAndA+B,YAsdA,SAAA/B,GACA,OAAAP,EAAAoC,EAAA7B,KAtdAgC,YAydA,SAAAhC,GACA,OAAAN,EAAAmC,EAAA7B,KAzdAiC,aA4dA,SAAAjC,GACA,OAAAL,EAAAkC,EAAA7B,KA5dAkC,YA+dA,SAAAlC,GACA,OAAAF,EAAA+B,EAAA7B,KA/dAmC,YAkeA,SAAAnC,GACA,OAAAH,EAAAgC,EAAA7B,KAleAoC,UACAC,UACAC,QAkYA,SAAAtC,GACA,OAAAC,EAAAoC,EAAArC,KAlYAuC,UACAC,UACAvC,UACAwC,UACAC,QA0bA,SAAA1C,GACA,OAAAuC,EAAAE,EAAAzC,KA1bA2C,QA6bA,SAAA3C,GACA,OAAAwC,EAAAC,EAAAzC,MA3bA,SAAAR,EAAAoD,GACA,IAMAvC,EAEAE,EARAsC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAA9I,KAAA8I,IAAAH,EAAAC,EAAAC,GACAE,EAAA/I,KAAA+I,IAAAJ,EAAAC,EAAAC,GACAG,EAAAD,EAAAD,EASA,OALAC,GAAAD,EAAA3C,EAAA,EAA0BwC,GAAAI,EAAA5C,GAAAyC,EAAAC,GAAAG,EAAuCJ,GAAAG,EAAA5C,EAAA,GAAA0C,EAAAF,GAAAK,EAA2CH,GAAAE,IAAA5C,EAAA,GAAAwC,EAAAC,GAAAI,IAC5G7C,EAAAnG,KAAA8I,IAAA,GAAA3C,EAAA,MACA,IAAAA,GAAA,KACAE,GAAAyC,EAAAC,GAAA,EAEA,CAAA5C,EAAA,KADA4C,GAAAD,EAAA,EAA0BzC,GAAA,GAAA2C,GAAAD,EAAAD,GAA2CE,GAAA,EAAAD,EAAAD,IACrE,IAAAzC,GAGA,SAAAd,EAAAmD,GACA,IAMAvC,EACAC,EAPAuC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAA9I,KAAA8I,IAAAH,EAAAC,EAAAC,GACAE,EAAA/I,KAAA+I,IAAAJ,EAAAC,EAAAC,GACAG,EAAAD,EAAAD,EASA,OALA1C,EAAA,GAAA2C,EAAA,EAAwBC,EAAAD,EAAA,OACxBA,GAAAD,EAAA3C,EAAA,EAA0BwC,GAAAI,EAAA5C,GAAAyC,EAAAC,GAAAG,EAAuCJ,GAAAG,EAAA5C,EAAA,GAAA0C,EAAAF,GAAAK,EAA2CH,GAAAE,IAAA5C,EAAA,GAAAwC,EAAAC,GAAAI,IAC5G7C,EAAAnG,KAAA8I,IAAA,GAAA3C,EAAA,MACA,IAAAA,GAAA,KAEA,CAAAA,EAAAC,EADA2C,EAAA,YAIA,SAAAvD,EAAAkD,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAvC,EAAAb,EAAAoD,GAAA,GACAO,EAAA,MAAAjJ,KAAA8I,IAAAH,EAAA3I,KAAA8I,IAAAF,EAAAC,IACAA,EAAA,QAAA7I,KAAA+I,IAAAJ,EAAA3I,KAAA+I,IAAAH,EAAAC,IACA,OAAA1C,EAAA,IAAA8C,EAAA,IAAAJ,GAGA,SAAApD,EAAAiD,GACA,IAMAQ,EANAP,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OASA,OAJAQ,EAAAlJ,KAAA8I,IAAA,EAAAH,EAAA,EAAAC,EAAA,EAAAC,GAIA,OAHA,EAAAF,EAAAO,IAAA,EAAAA,IAAA,GAGA,MAFA,EAAAN,EAAAM,IAAA,EAAAA,IAAA,GAEA,MADA,EAAAL,EAAAK,IAAA,EAAAA,IAAA,GACA,IAAAA,GAGA,SAAAxD,EAAAgD,GACA,OAAAS,EAAAC,KAAAC,UAAAX,IAGA,SAAA/C,EAAA+C,GACA,IAAAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAEAC,IAAA,OAAA3I,KAAAsJ,KAAAX,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAA5I,KAAAsJ,KAAAV,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAA7I,KAAAsJ,KAAAT,EAAA,iBAAAA,EAAA,MACA,IAAAU,EAAA,MAAAZ,EAAA,MAAAC,EAAA,MAAAC,EACAW,EAAA,MAAAb,EAAA,MAAAC,EAAA,MAAAC,EACAY,EAAA,MAAAd,EAAA,MAAAC,EAAA,MAAAC,EACA,WAAAU,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAA7D,EAAA8C,GACA,IAAAgB,EAAA/D,EAAA+C,GACAa,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAaA,OARAF,GAAA,IACAC,GAAA,QACAF,GAHAA,GAAA,QAGA,QAAAvJ,KAAAsJ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAxJ,KAAAsJ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAzJ,KAAAsJ,IAAAG,EAAA,WAAAA,EAAA,OAIA,CAHA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IAQA,SAAAzD,EAAAE,GACA,IAGAyD,EACAC,EACAC,EACAnB,EACAoB,EAPA3D,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAOA,MAAAE,EAEA,OADA0D,EAAA,IAAAzD,EACAyD,KAIAH,EAAA,EAAAtD,GADAuD,EAAAvD,EAAA,GAAAA,GAAA,EAAAD,GAAkCC,EAAAD,EAAAC,EAAAD,GAElCsC,EAAA,QAEA,QAAA9P,EAAA,EAAmBA,EAAA,EAAOA,KAC1BiR,EAAA1D,EAAA,MAAAvN,EAAA,IACA,GAAAiR,IACAA,EAAA,GAAAA,IACAC,EAAA,EAAAD,EAAA,EAAAF,EAAA,GAAAC,EAAAD,GAAAE,EAAoD,EAAAA,EAAA,EAAAD,EAA8B,EAAAC,EAAA,EAAAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAA6DF,EAC/IjB,EAAA9P,GAAA,IAAAkR,EAGA,OAAApB,EAmCA,SAAAjC,EAAAE,GACA,IAAAR,EAAAQ,EAAA,MACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OACAoD,EAAA/J,KAAAgK,MAAA7D,GAAA,EACA8D,EAAA9D,EAAAnG,KAAAgK,MAAA7D,GACA+D,EAAA,IAAArD,GAAA,EAAAT,GACA+D,EAAA,IAAAtD,GAAA,EAAAT,EAAA6D,GACAG,EAAA,IAAAvD,GAAA,EAAAT,GAAA,EAAA6D,IACApD,EAAA,IAAAA,EAEA,OAAAkD,GACA,OACA,OAAAlD,EAAAuD,EAAAF,GAEA,OACA,OAAAC,EAAAtD,EAAAqD,GAEA,OACA,OAAAA,EAAArD,EAAAuD,GAEA,OACA,OAAAF,EAAAC,EAAAtD,GAEA,OACA,OAAAuD,EAAAF,EAAArD,GAEA,OACA,OAAAA,EAAAqD,EAAAC,IA+BA,SAAAlD,EAAAoD,GACA,IAIAzR,EACAiO,EACAoD,EACAhQ,EAPAkM,EAAAkE,EAAA,OACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAF,EAAAC,EAqBA,OAfAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAGA5R,EAAAoH,KAAAgK,MAAA,EAAA7D,GAEA8D,EAAA,EAAA9D,EAAAvN,EAEA,MAAAA,KACAqR,EAAA,EAAAA,GAGAhQ,EAAAqQ,EAAAL,IAPApD,EAAA,EAAA0D,GAOAD,GAEA1R,GACA,QACA,OACA,OACA+P,EAAA9B,EACA+B,EAAA3O,EACA4O,EAAAyB,EACA,MAEA,OACA3B,EAAA1O,EACA2O,EAAA/B,EACAgC,EAAAyB,EACA,MAEA,OACA3B,EAAA2B,EACA1B,EAAA/B,EACAgC,EAAA5O,EACA,MAEA,OACA0O,EAAA2B,EACA1B,EAAA3O,EACA4O,EAAAhC,EACA,MAEA,OACA8B,EAAA1O,EACA2O,EAAA0B,EACAzB,EAAAhC,EACA,MAEA,OACA8B,EAAA9B,EACA+B,EAAA0B,EACAzB,EAAA5O,EAIA,WAAA0O,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAvB,EAAAmD,GACA,IAIA9B,EACAC,EACAC,EANA6B,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAjB,EAAAiB,EAAA,OACAvB,EAAAuB,EAAA,OAOA,OAHA9B,EAAA,EAAA3I,KAAA8I,IAAA,EAAA4B,GAAA,EAAAxB,MACAN,EAAA,EAAA5I,KAAA8I,IAAA,EAAA6B,GAAA,EAAAzB,MACAL,EAAA,EAAA7I,KAAA8I,IAAA,EAAAU,GAAA,EAAAN,MACA,KAAAP,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAX,EAAAwB,GACA,IAGAf,EACAC,EACAC,EALAU,EAAAG,EAAA,OACAF,EAAAE,EAAA,OACAD,EAAAC,EAAA,OAcA,OATAd,GAAA,MAAAW,EAAA,OAAAC,EAAA,MAAAC,EACAZ,EAAA,MAAAU,GAAA,KAAAC,EAAA,MAAAC,EAEAd,GAJAA,EAAA,OAAAY,GAAA,OAAAC,GAAA,MAAAC,GAIA,eAAAzJ,KAAAsJ,IAAAX,EAAA,YAAAA,GAAA,MACAC,IAAA,eAAA5I,KAAAsJ,IAAAV,EAAA,YAAAA,GAAA,MACAC,IAAA,eAAA7I,KAAAsJ,IAAAT,EAAA,YAAAA,GAAA,MACAF,EAAA3I,KAAA8I,IAAA9I,KAAA+I,IAAA,EAAAJ,GAAA,GACAC,EAAA5I,KAAA8I,IAAA9I,KAAA+I,IAAA,EAAAH,GAAA,GACAC,EAAA7I,KAAA8I,IAAA9I,KAAA+I,IAAA,EAAAF,GAAA,GACA,KAAAF,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAAV,EAAAuB,GACA,IAAAH,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAaA,OARAF,GAAA,IACAC,GAAA,QACAF,GAHAA,GAAA,QAGA,QAAAvJ,KAAAsJ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAxJ,KAAAsJ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAzJ,KAAAsJ,IAAAG,EAAA,WAAAA,EAAA,OAIA,CAHA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IAQA,SAAApB,EAAAuC,GACA,IAGArB,EACAC,EACAC,EACAoB,EANAxE,EAAAuE,EAAA,GACAnQ,EAAAmQ,EAAA,GACA/B,EAAA+B,EAAA,GAgBA,OAVAvE,GAAA,EAEAwE,GADArB,EAAA,IAAAnD,EAAA,OACA,kBAEAmD,EAAA,IAAAxJ,KAAAsJ,KAAAjD,EAAA,WACAwE,EAAA7K,KAAAsJ,IAAAE,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAA9O,EAAA,IAAAoQ,EAAA,qBAAA7K,KAAAsJ,IAAA7O,EAAA,IAAAoQ,EAAA,GACApB,IAAA,iBAAAA,EAAA,SAAAoB,EAAAhC,EAAA,0BAAA7I,KAAAsJ,IAAAuB,EAAAhC,EAAA,OACA,CAAAU,EAAAC,EAAAC,GAGA,SAAA1D,EAAA6E,GACA,IAGAE,EACA3E,EACAuE,EALArE,EAAAuE,EAAA,GACAnQ,EAAAmQ,EAAA,GACA/B,EAAA+B,EAAA,GAYA,OARAE,EAAA9K,KAAA+K,MAAAlC,EAAApO,IACA0L,EAAA,IAAA2E,EAAA,EAAA9K,KAAAgL,IAEA,IACA7E,GAAA,KAGAuE,EAAA1K,KAAAiL,KAAAxQ,IAAAoO,KACA,CAAAxC,EAAAqE,EAAAvE,GAGA,SAAAmC,EAAAxC,GACA,OAAAoC,EAAAG,EAAAvC,IAGA,SAAAyC,EAAA2C,GACA,IAGAzQ,EACAoO,EACAiC,EALAzE,EAAA6E,EAAA,GACAR,EAAAQ,EAAA,GACA/E,EAAA+E,EAAA,GAOA,OAHAJ,EAAA3E,EAAA,MAAAnG,KAAAgL,GACAvQ,EAAAiQ,EAAA1K,KAAAmL,IAAAL,GACAjC,EAAA6B,EAAA1K,KAAAoL,IAAAN,GACA,CAAAzE,EAAA5L,EAAAoO,GAWA,SAAAlB,EAAA0D,GACA,OAAAC,EAAAD,GA2BA,IAAAC,EAAA,CACAC,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAEAvL,EAAA,GAEA,QAAAhR,KAAAmT,EACAnC,EAAAC,KAAAC,UAAAiC,EAAAnT,OAGA,IAAAwc,EAAA,WACA,WAAAC,GAGA,QAAArZ,KAAA8J,EAAA,CAEAsP,EAAApZ,EAAA,gBAAAA,GAEA,gBAAAsZ,GAEA,MADA,iBAAAA,MAAAC,MAAAvY,UAAAwY,MAAA9Y,KAAApD,YACAwM,EAAA9J,GAAAsZ,IAJA,CAMKtZ,GAEL,IAAAyZ,EAAA,cAAAC,KAAA1Z,GACA2Z,EAAAF,EAAA,GACAG,EAAAH,EAAA,IAEAL,EAAAO,GAAAP,EAAAO,IAAA,IAEAC,GAAAR,EAAApZ,GAAA,SAAAA,GACA,gBAAAsZ,GACA,iBAAAA,MAAAC,MAAAvY,UAAAwY,MAAA9Y,KAAApD,YACA,IAAAiR,EAAAzE,EAAA9J,GAAAsZ,GACA,oBAAA/K,QAAAtL,IAAAsL,EAAA,OAAAA,EAEA,QAAAlR,EAAA,EAAuBA,EAAAkR,EAAAhR,OAAgBF,IACvCkR,EAAAlR,GAAAoH,KAAAoV,MAAAtL,EAAAlR,IAGA,OAAAkR,GAVA,CAYKvO,GAKL,IAAAqZ,EAAA,WACA1Y,KAAAmZ,MAAA,IAMAT,EAAArY,UAAA+Y,WAAA,SAAAC,EAAAzP,GACA,IAAA0P,EAAA1P,EAAA,GAEA,YAAAtH,IAAAgX,EAEAtZ,KAAAuZ,UAAAF,IAIA,iBAAAC,IACAA,EAAAV,MAAAvY,UAAAwY,MAAA9Y,KAAA6J,IAGA5J,KAAAwZ,UAAAH,EAAAC,KAKAZ,EAAArY,UAAAmZ,UAAA,SAAAH,EAAAC,GAIA,OAHAtZ,KAAAqZ,QACArZ,KAAAmZ,MAAA,GACAnZ,KAAAmZ,MAAAE,GAAAC,EACAtZ,MAOA0Y,EAAArY,UAAAkZ,UAAA,SAAAF,GACA,IAAAI,EAAAzZ,KAAAmZ,MAAAE,GAEA,IAAAI,EAAA,CACA,IAAAC,EAAA1Z,KAAAqZ,MACAL,EAAAhZ,KAAAmZ,MAAAO,GACAD,EAAAhB,EAAAiB,GAAAL,GAAAL,GACAhZ,KAAAmZ,MAAAE,GAAAI,EAGA,OAAAA,GAGA,qCAAApc,QAAA,SAAAgc,GACAX,EAAArY,UAAAgZ,GAAA,SAAAI,GACA,OAAAzZ,KAAAoZ,WAAAC,EAAA1c,cAGA,IAAAgd,EAAAlB,EACAmB,EAAA,CACAvK,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAIAqB,EAAA,CACAC,UACAC,UACAC,OA8HA,SAAAtb,GACA,IAAAub,EAAAH,EAAApb,GACA,OAAAub,KAAApB,MAAA,MA/HAqB,OAkIA,SAAAxb,GACA,IAAAyb,EAAAJ,EAAArb,GACA,OAAAyb,KAAAtB,MAAA,MAnIAuB,SACAC,SAqIA,SAAA3b,GACA,IAAA+a,EAAAK,EAAApb,GAEA,OAAA+a,EACAA,EAAA,IACKA,EAAAM,EAAArb,IACL+a,EAAA,IACKA,EAAAW,EAAA1b,IACL+a,EAAA,QADK,GA3ILa,UAiJA,SAAAL,EAAA1b,GACA,IAAAA,OAAA+D,IAAA/D,GAAA,IAAA0b,EAAArd,OAAA2B,EAAA0b,EAAA,GACA,UAAAM,EAAAN,EAAA,IAAAM,EAAAN,EAAA,IAAAM,EAAAN,EAAA,KAAA1b,GAAA,GAAAA,EAAA,EAAAgc,EAAAzW,KAAAoV,MAAA,IAAA3a,IAAA,KAlJAic,UAqJA,SAAAP,EAAAQ,GACA,OAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACAS,EAAAT,EAAAQ,GAGA,OAAAR,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAzJAS,aACAC,cAmKA,SAAAV,EAAAQ,GACA,GAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACA,OAAAW,EAAAX,EAAAQ,GAGA,IAAAhO,EAAA3I,KAAAoV,MAAAe,EAAA,YACAvN,EAAA5I,KAAAoV,MAAAe,EAAA,YACAtN,EAAA7I,KAAAoV,MAAAe,EAAA,YACA,aAAAxN,EAAA,MAAAC,EAAA,MAAAC,EAAA,MA1KAiO,iBACAC,UAmLA,SAAAV,EAAAM,GACA,OAAAA,EAAA,GAAAN,EAAA,IAAAA,EAAA,KACAW,EAAAX,EAAAM,GAGA,OAAAN,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAvLAW,aACAC,UAmMA,SAAA5M,EAAAsM,GAKA,YAJAnY,IAAAmY,IACAA,OAAAnY,IAAA6L,EAAA,GAAAA,EAAA,MAGA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aAAA7L,IAAAmY,GAAA,IAAAA,EAAA,KAAAA,EAAA,SAvMAtL,QA0MA,SAAA3C,GACA,OAAAwO,EAAAxO,EAAAqM,MAAA,QAxMA,SAAAiB,EAAApb,GACA,GAAAA,EAAA,CAIA,IAKA8N,EAAA,QACAjO,EAAA,EACA0c,EAAAvc,EAAAuc,MAPA,0BAQAC,EAAA,GAEA,GAAAD,EAAA,CACAA,IAAA,GACAC,EAAAD,EAAA,GAEA,QAAAve,EAAA,EAAqBA,EAAA8P,EAAA5P,OAAgBF,IACrC8P,EAAA9P,GAAAye,SAAAF,EAAAve,GAAAue,EAAAve,GAAA,IAGAwe,IACA3c,EAAAuF,KAAAoV,MAAAiC,SAAAD,IAAA,uBAEK,GAAAD,EAAAvc,EAAAuc,MApBL,yCAoBK,CACLC,EAAAD,EAAA,GACAA,IAAA,GAEA,QAAAve,EAAA,EAAqBA,EAAA8P,EAAA5P,OAAgBF,IACrC8P,EAAA9P,GAAAye,SAAAF,EAAApC,MAAA,EAAAnc,EAAA,EAAAA,EAAA,OAGAwe,IACA3c,EAAAuF,KAAAoV,MAAAiC,SAAAD,EAAA,uBAEK,GAAAD,EAAAvc,EAAAuc,MA9BL,4FA8BK,CACL,QAAAve,EAAA,EAAqBA,EAAA8P,EAAA5P,OAAgBF,IACrC8P,EAAA9P,GAAAye,SAAAF,EAAAve,EAAA,IAGA6B,EAAA6c,WAAAH,EAAA,SACK,GAAAA,EAAAvc,EAAAuc,MAnCL,8GAmCK,CACL,QAAAve,EAAA,EAAqBA,EAAA8P,EAAA5P,OAAgBF,IACrC8P,EAAA9P,GAAAoH,KAAAoV,MAAA,KAAAkC,WAAAH,EAAAve,EAAA,KAGA6B,EAAA6c,WAAAH,EAAA,SACK,GAAAA,EAAAvc,EAAAuc,MAxCL,SAwCK,CACL,kBAAAA,EAAA,GACA,gBAKA,KAFAzO,EAAAoN,EAAAqB,EAAA,KAGA,OAIA,QAAAve,EAAA,EAAmBA,EAAA8P,EAAA5P,OAAgBF,IACnC8P,EAAA9P,GAAA2e,EAAA7O,EAAA9P,GAAA,OAUA,OAJA6B,EAHAA,GAAA,GAAAA,EAGA8c,EAAA9c,EAAA,KAFA,EAKAiO,EAAA,GAAAjO,EACAiO,GAGA,SAAAuN,EAAArb,GACA,GAAAA,EAAA,CAIA,IACAuc,EAAAvc,EAAAuc,MADA,4GAGA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACAhR,EAAAoR,EAAAF,SAAAF,EAAA,WACA/Q,EAAAmR,EAAAD,WAAAH,EAAA,WACA9Q,EAAAkR,EAAAD,WAAAH,EAAA,WACA1c,EAAA8c,EAAAC,MAAAb,GAAA,EAAAA,EAAA,KACA,OAAAxQ,EAAAC,EAAAC,EAAA5L,KAIA,SAAA6b,EAAA1b,GACA,GAAAA,EAAA,CAIA,IACAuc,EAAAvc,EAAAuc,MADA,0GAGA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACAhR,EAAAoR,EAAAF,SAAAF,EAAA,WACAlO,EAAAsO,EAAAD,WAAAH,EAAA,WACAtO,EAAA0O,EAAAD,WAAAH,EAAA,WACA1c,EAAA8c,EAAAC,MAAAb,GAAA,EAAAA,EAAA,KACA,OAAAxQ,EAAA8C,EAAAJ,EAAApO,KAwCA,SAAAmc,EAAAT,EAAAQ,GAKA,YAJAnY,IAAAmY,IACAA,OAAAnY,IAAA2X,EAAA,GAAAA,EAAA,MAGA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAQ,EAAA,IAcA,SAAAG,EAAAX,EAAAQ,GACA,IAAAhO,EAAA3I,KAAAoV,MAAAe,EAAA,YACAvN,EAAA5I,KAAAoV,MAAAe,EAAA,YACAtN,EAAA7I,KAAAoV,MAAAe,EAAA,YACA,cAAAxN,EAAA,MAAAC,EAAA,MAAAC,EAAA,OAAA8N,GAAAR,EAAA,WAWA,SAAAa,EAAAX,EAAAM,GAKA,YAJAnY,IAAAmY,IACAA,OAAAnY,IAAA6X,EAAA,GAAAA,EAAA,MAGA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAAAM,EAAA,IAkBA,SAAAY,EAAAE,EAAA3O,EAAAC,GACA,OAAA/I,KAAA8I,IAAA9I,KAAA+I,IAAAD,EAAA2O,GAAA1O,GAGA,SAAA0N,EAAAgB,GACA,IAAAC,EAAAD,EAAAvX,SAAA,IAAAyX,cACA,OAAAD,EAAA5e,OAAA,MAAA4e,IAIA,IAAAR,EAAA,GAEA,QAAAU,KAAA9B,EACAoB,EAAApB,EAAA8B,MAKA,IAAAC,EAAA,SAAAA,EAAA3f,GACA,OAAAA,aAAA2f,EACA3f,EAGAgE,gBAAA2b,GAIA3b,KAAAlB,OAAA,EACAkB,KAAAsZ,OAAA,CACA9M,IAAA,QACAxC,IAAA,QACAS,IAAA,QACA0D,IAAA,QACAI,KAAA,UACAkM,MAAA,QAKA,kBAAAze,GACAyd,EAAAI,EAAAC,QAAA9d,IAGAgE,KAAAwZ,UAAA,MAAAC,IACOA,EAAAI,EAAAE,QAAA/d,IACPgE,KAAAwZ,UAAA,MAAAC,IACOA,EAAAI,EAAAO,OAAApe,KACPgE,KAAAwZ,UAAA,MAAAC,GAEK,kBAAAzd,SAGLsG,KAFAmX,EAAAzd,GAEAyQ,QAAAnK,IAAAmX,EAAA5C,IACA7W,KAAAwZ,UAAA,MAAAC,QACOnX,IAAAmX,EAAAtP,QAAA7H,IAAAmX,EAAAmC,UACP5b,KAAAwZ,UAAA,MAAAC,QACOnX,IAAAmX,EAAA9O,QAAArI,IAAAmX,EAAAvd,MACP8D,KAAAwZ,UAAA,MAAAC,QACOnX,IAAAmX,EAAA1M,QAAAzK,IAAAmX,EAAAoC,UACP7b,KAAAwZ,UAAA,MAAAC,QACOnX,IAAAmX,EAAAjL,QAAAlM,IAAAmX,EAAAhJ,MACPzQ,KAAAwZ,UAAA,OAAAC,MArCA,IAAAkC,EAAA3f,GAaA,IAAAyd,IA6BAkC,EAAAtb,UAAA,CACAyb,QAAA,WACA,OAAA9b,KAAAlB,OAEA0N,IAAA,WACA,OAAAxM,KAAA+b,SAAA,MAAApf,YAEAqN,IAAA,WACA,OAAAhK,KAAA+b,SAAA,MAAApf,YAEA8N,IAAA,WACA,OAAAzK,KAAA+b,SAAA,MAAApf,YAEAwR,IAAA,WACA,OAAAnO,KAAA+b,SAAA,MAAApf,YAEA4R,KAAA,WACA,OAAAvO,KAAA+b,SAAA,OAAApf,YAEAqf,SAAA,WACA,OAAAhc,KAAAsZ,OAAA9M,KAEAyP,SAAA,WACA,OAAAjc,KAAAsZ,OAAAtP,KAEAkS,SAAA,WACA,OAAAlc,KAAAsZ,OAAA7O,KAEA0R,SAAA,WACA,IAAA7C,EAAAtZ,KAAAsZ,OAEA,WAAAA,EAAAmB,MACAnB,EAAAnL,IAAAlR,OAAA,CAAAqc,EAAAmB,QAGAnB,EAAAnL,KAEAiO,UAAA,WACA,OAAApc,KAAAsZ,OAAA/K,MAEA8N,UAAA,WACA,IAAA/C,EAAAtZ,KAAAsZ,OACA,OAAAA,EAAA9M,IAAAvP,OAAA,CAAAqc,EAAAmB,SAEA6B,UAAA,WACA,IAAAhD,EAAAtZ,KAAAsZ,OACA,OAAAA,EAAAtP,IAAA/M,OAAA,CAAAqc,EAAAmB,SAEAA,MAAA,SAAA7M,GACA,YAAAtL,IAAAsL,EACA5N,KAAAsZ,OAAAmB,OAGAza,KAAAwZ,UAAA,QAAA5L,GACA5N,OAEA6W,IAAA,SAAAjJ,GACA,OAAA5N,KAAAuc,WAAA,QAAA3O,IAEA+E,MAAA,SAAA/E,GACA,OAAA5N,KAAAuc,WAAA,QAAA3O,IAEAkC,KAAA,SAAAlC,GACA,OAAA5N,KAAAuc,WAAA,QAAA3O,IAEA4O,IAAA,SAAA5O,GAMA,OALAA,IAEAA,GADAA,GAAA,KACA,MAAAA,KAGA5N,KAAAuc,WAAA,QAAA3O,IAEA6O,WAAA,SAAA7O,GACA,OAAA5N,KAAAuc,WAAA,QAAA3O,IAEAgO,UAAA,SAAAhO,GACA,OAAA5N,KAAAuc,WAAA,QAAA3O,IAEA8O,YAAA,SAAA9O,GACA,OAAA5N,KAAAuc,WAAA,QAAA3O,IAEAiO,UAAA,SAAAjO,GACA,OAAA5N,KAAAuc,WAAA,QAAA3O,IAEA+O,UAAA,SAAA/O,GACA,OAAA5N,KAAAuc,WAAA,QAAA3O,IAEA1R,MAAA,SAAA0R,GACA,OAAA5N,KAAAuc,WAAA,QAAA3O,IAEA6C,KAAA,SAAA7C,GACA,OAAA5N,KAAAuc,WAAA,SAAA3O,IAEA8G,QAAA,SAAA9G,GACA,OAAA5N,KAAAuc,WAAA,SAAA3O,IAEA2K,OAAA,SAAA3K,GACA,OAAA5N,KAAAuc,WAAA,SAAA3O,IAEAgC,MAAA,SAAAhC,GACA,OAAA5N,KAAAuc,WAAA,SAAA3O,IAEA0M,UAAA,WACA,OAAAT,EAAAS,UAAAta,KAAAsZ,OAAA9M,MAEAgO,UAAA,WACA,OAAAX,EAAAW,UAAAxa,KAAAsZ,OAAA9M,IAAAxM,KAAAsZ,OAAAmB,QAEAC,WAAA,WACA,OAAAb,EAAAa,WAAA1a,KAAAsZ,OAAA9M,IAAAxM,KAAAsZ,OAAAmB,QAEAE,cAAA,WACA,OAAAd,EAAAc,cAAA3a,KAAAsZ,OAAA9M,IAAAxM,KAAAsZ,OAAAmB,QAEAI,UAAA,WACA,OAAAhB,EAAAgB,UAAA7a,KAAAsZ,OAAAtP,IAAAhK,KAAAsZ,OAAAmB,QAEAK,WAAA,WACA,OAAAjB,EAAAiB,WAAA9a,KAAAsZ,OAAAtP,IAAAhK,KAAAsZ,OAAAmB,QAEAM,UAAA,WACA,OAAAlB,EAAAkB,UAAA/a,KAAAsZ,OAAAnL,IAAAnO,KAAAsZ,OAAAmB,QAEAtL,QAAA,WACA,OAAA0K,EAAA1K,QAAAnP,KAAAsZ,OAAA9M,IAAAxM,KAAAsZ,OAAAmB,QAEAmC,UAAA,WACA,IAAApQ,EAAAxM,KAAAsZ,OAAA9M,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEAqQ,WAAA,WAKA,IAHA,IAAArQ,EAAAxM,KAAAsZ,OAAA9M,IACAsQ,EAAA,GAEApgB,EAAA,EAAqBA,EAAA8P,EAAA5P,OAAgBF,IAAA,CACrC,IAAAqgB,EAAAvQ,EAAA9P,GAAA,IACAogB,EAAApgB,GAAAqgB,GAAA,OAAAA,EAAA,MAAAjZ,KAAAsJ,KAAA2P,EAAA,iBAGA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAEAE,SAAA,SAAAC,GAEA,IAAAC,EAAAld,KAAA6c,aACAM,EAAAF,EAAAJ,aAEA,OAAAK,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAGAA,EAAA,MAAAD,EAAA,MAEAE,MAAA,SAAAH,GACA,IAAAI,EAAArd,KAAAgd,SAAAC,GAEA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAEAvV,KAAA,WAEA,IAAA0E,EAAAxM,KAAAsZ,OAAA9M,IAEA,OADA,IAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,KAEA8Q,MAAA,WACA,OAAAtd,KAAA8H,QAEAyV,OAAA,WAGA,IAFA,IAAA/Q,EAAA,GAEA9P,EAAA,EAAqBA,EAAA,EAAOA,IAC5B8P,EAAA9P,GAAA,IAAAsD,KAAAsZ,OAAA9M,IAAA9P,GAIA,OADAsD,KAAAwZ,UAAA,MAAAhN,GACAxM,MAEAwd,QAAA,SAAAlP,GACA,IAAAtE,EAAAhK,KAAAsZ,OAAAtP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAsE,EACAtO,KAAAwZ,UAAA,MAAAxP,GACAhK,MAEAyd,OAAA,SAAAnP,GACA,IAAAtE,EAAAhK,KAAAsZ,OAAAtP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAsE,EACAtO,KAAAwZ,UAAA,MAAAxP,GACAhK,MAEA0d,SAAA,SAAApP,GACA,IAAAtE,EAAAhK,KAAAsZ,OAAAtP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAsE,EACAtO,KAAAwZ,UAAA,MAAAxP,GACAhK,MAEA2d,WAAA,SAAArP,GACA,IAAAtE,EAAAhK,KAAAsZ,OAAAtP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAsE,EACAtO,KAAAwZ,UAAA,MAAAxP,GACAhK,MAEA4d,OAAA,SAAAtP,GACA,IAAAH,EAAAnO,KAAAsZ,OAAAnL,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAG,EACAtO,KAAAwZ,UAAA,MAAArL,GACAnO,MAEA6d,QAAA,SAAAvP,GACA,IAAAH,EAAAnO,KAAAsZ,OAAAnL,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAG,EACAtO,KAAAwZ,UAAA,MAAArL,GACAnO,MAEA8d,UAAA,WACA,IAAAtR,EAAAxM,KAAAsZ,OAAA9M,IAEAoB,EAAA,GAAApB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADAxM,KAAAwZ,UAAA,OAAA5L,QACA5N,MAEA+d,QAAA,SAAAzP,GACA,IAAAmM,EAAAza,KAAAsZ,OAAAmB,MAEA,OADAza,KAAAwZ,UAAA,QAAAiB,IAAAnM,GACAtO,MAEAge,QAAA,SAAA1P,GACA,IAAAmM,EAAAza,KAAAsZ,OAAAmB,MAEA,OADAza,KAAAwZ,UAAA,QAAAiB,IAAAnM,GACAtO,MAEAie,OAAA,SAAAC,GACA,IAAAlU,EAAAhK,KAAAsZ,OAAAtP,IACAwS,GAAAxS,EAAA,GAAAkU,GAAA,IAGA,OAFAlU,EAAA,GAAAwS,EAAA,MAAAA,IACAxc,KAAAwZ,UAAA,MAAAxP,GACAhK,MAOAme,IAAA,SAAAC,EAAAC,GACA,IACApB,EAAAmB,EACApQ,OAAA1L,IAAA+b,EAAA,GAAAA,EACAtR,EAAA,EAAAiB,EAAA,EACAzP,EAJAyB,KAIAya,QAAAwC,EAAAxC,QACA6D,IAAAvR,EAAAxO,KAAA,EAAAwO,KAAAxO,IAAA,EAAAwO,EAAAxO,IAAA,KACAggB,EAAA,EAAAD,EACA,OAAAte,KAAAwM,IAAA8R,EAPAte,KAOA6W,MAAA0H,EAAAtB,EAAApG,MAAAyH,EAPAte,KAOA2S,QAAA4L,EAAAtB,EAAAtK,QAAA2L,EAPAte,KAOA8P,OAAAyO,EAAAtB,EAAAnN,QAAA2K,MAPAza,KAOAya,QAAAzM,EAAAiP,EAAAxC,SAAA,EAAAzM,KAEAwQ,OAAA,WACA,OAAAxe,KAAAwM,OAEAiS,MAAA,WAKA,IAGAviB,EAAAuC,EAHAigB,EAAA,IAAA/C,EACA9e,EAAAmD,KAAAsZ,OACA7c,EAAAiiB,EAAApF,OAGA,QAAAqF,KAAA9hB,EACAA,EAAAqM,eAAAyV,KACAziB,EAAAW,EAAA8hB,GAGA,oBAFAlgB,EAAA,GAAmBuF,SAAAjE,KAAA7D,IAGnBO,EAAAkiB,GAAAziB,EAAA2c,MAAA,GACW,oBAAApa,EACXhC,EAAAkiB,GAAAziB,EAEA0iB,QAAAC,MAAA,0BAAA3iB,IAKA,OAAAwiB,KAGAI,OAAA,CACAtS,IAAA,uBACAxC,IAAA,iCACAS,IAAA,6BACA0D,IAAA,gCACAI,KAAA,qCAEAoN,EAAAtb,UAAA0e,MAAA,CACAvS,IAAA,cACAxC,IAAA,cACAS,IAAA,cACA0D,IAAA,cACAI,KAAA,mBAGAoN,EAAAtb,UAAAkZ,UAAA,SAAAF,GAIA,IAHA,IAAAC,EAAAtZ,KAAAsZ,OACAG,EAAA,GAEA/c,EAAA,EAAmBA,EAAA2c,EAAAzc,OAAkBF,IACrC+c,EAAAJ,EAAA2F,OAAAtiB,IAAA4c,EAAAD,GAAA3c,GAQA,OALA,IAAA4c,EAAAmB,QACAhB,EAAAlb,EAAA+a,EAAAmB,OAIAhB,GAGAkC,EAAAtb,UAAAmZ,UAAA,SAAAH,EAAAI,GACA,IAIA/c,EAiCAuiB,EArCA3F,EAAAtZ,KAAAsZ,OACAwF,EAAA9e,KAAA8e,OACAC,EAAA/e,KAAA+e,MACAtE,EAAA,EAIA,GAFAza,KAAAlB,OAAA,EAEA,UAAAua,EACAoB,EAAAhB,OACK,GAAAA,EAAA7c,OAEL0c,EAAAD,GAAAI,EAAAZ,MAAA,EAAAQ,EAAAzc,QACA6d,EAAAhB,EAAAJ,EAAAzc,aACK,QAAA0F,IAAAmX,EAAAJ,EAAA2F,OAAA,KAEL,IAAAtiB,EAAA,EAAiBA,EAAA2c,EAAAzc,OAAkBF,IACnC4c,EAAAD,GAAA3c,GAAA+c,EAAAJ,EAAA2F,OAAAtiB,IAGA+d,EAAAhB,EAAAlb,OACK,QAAA+D,IAAAmX,EAAAqF,EAAAzF,GAAA,KAEL,IAAA6F,EAAAJ,EAAAzF,GAEA,IAAA3c,EAAA,EAAiBA,EAAA2c,EAAAzc,OAAkBF,IACnC4c,EAAAD,GAAA3c,GAAA+c,EAAAyF,EAAAxiB,IAGA+d,EAAAhB,EAAAgB,MAKA,GAFAnB,EAAAmB,MAAA3W,KAAA+I,IAAA,EAAA/I,KAAA8I,IAAA,OAAAtK,IAAAmY,EAAAnB,EAAAmB,UAEA,UAAApB,EACA,SAKA,IAAA3c,EAAA,EAAeA,EAAA2c,EAAAzc,OAAkBF,IACjCuiB,EAAAnb,KAAA+I,IAAA,EAAA/I,KAAA8I,IAAAmS,EAAA1F,GAAA3c,GAAA4c,EAAAD,GAAA3c,KACA4c,EAAAD,GAAA3c,GAAAoH,KAAAoV,MAAA+F,GAIA,QAAAE,KAAAL,EACAK,IAAA9F,IACAC,EAAA6F,GAAAxF,EAAAN,GAAA8F,GAAA7F,EAAAD,KAIA,UAGAsC,EAAAtb,UAAA0b,SAAA,SAAA1C,EAAAzP,GACA,IAAA6P,EAAA7P,EAAA,GAEA,YAAAtH,IAAAmX,EAEAzZ,KAAAuZ,UAAAF,IAIA,kBAAAI,IACAA,EAAAb,MAAAvY,UAAAwY,MAAA9Y,KAAA6J,IAGA5J,KAAAwZ,UAAAH,EAAAI,GACAzZ,OAGA2b,EAAAtb,UAAAkc,WAAA,SAAAlD,EAAA+F,EAAAxR,GACA,IAAAyR,EAAArf,KAAAsZ,OAAAD,GAEA,YAAA/W,IAAAsL,EAEAyR,EAAAD,GACKxR,IAAAyR,EAAAD,GAELpf,MAIAqf,EAAAD,GAAAxR,EACA5N,KAAAwZ,UAAAH,EAAAgG,GACArf,OAGA,qBAAAsf,SACAA,OAAA3D,SAGA,IAAA4D,EAAA5D,EAKA6D,EAAA,CAIAC,KAAA,aAOAC,IAAA,WACA,IAAA9b,EAAA,EACA,kBACA,OAAAA,KAHA,GAaA+b,cAAA,SAAAzjB,GACA,cAAAA,GAAA,qBAAAA,GASA0jB,QAAA,SAAA1jB,GACA,GAAA0c,MAAAgH,SAAAhH,MAAAgH,QAAA1jB,GACA,SAGA,IAAAuC,EAAAtC,OAAAkE,UAAA2D,SAAAjE,KAAA7D,GAEA,kBAAAuC,EAAAohB,OAAA,iBAAAphB,EAAAohB,QAAA,IAaAC,SAAA,SAAA5jB,GACA,cAAAA,GAAA,oBAAAC,OAAAkE,UAAA2D,SAAAjE,KAAA7D,IAQA6jB,SAAA,SAAAC,GACA,SAAAD,EAAAE,GACA,OAAAD,EAAAE,MAAAlgB,KAAArD,WAOA,OAJAojB,EAAA/b,SAAA,WACA,OAAAgc,EAAAhc,YAGA+b,EATA,CAUK,SAAA7jB,GACL,yBAAAA,gBAAAikB,SAAAJ,SAAA7jB,KASAkkB,eAAA,SAAAlkB,EAAAmkB,GACA,2BAAAnkB,EAAAmkB,EAAAnkB,GAUAokB,sBAAA,SAAApkB,EAAAkjB,EAAAiB,GACA,OAAAb,EAAAY,eAAAZ,EAAAI,QAAA1jB,KAAAkjB,GAAAljB,EAAAmkB,IAWAE,SAAA,SAAAC,EAAA5W,EAAA6W,GACA,GAAAD,GAAA,oBAAAA,EAAAzgB,KACA,OAAAygB,EAAAN,MAAAO,EAAA7W,IAaA8W,KAAA,SAAAC,EAAAH,EAAAC,EAAAG,GACA,IAAAlkB,EAAAmkB,EAAA9jB,EAEA,GAAAyiB,EAAAI,QAAAe,GAGA,GAFAE,EAAAF,EAAA/jB,OAEAgkB,EACA,IAAAlkB,EAAAmkB,EAAA,EAA2BnkB,GAAA,EAAQA,IACnC8jB,EAAAzgB,KAAA0gB,EAAAE,EAAAjkB,WAGA,IAAAA,EAAA,EAAqBA,EAAAmkB,EAASnkB,IAC9B8jB,EAAAzgB,KAAA0gB,EAAAE,EAAAjkB,WAGO,GAAA8iB,EAAAM,SAAAa,GAIP,IAHA5jB,EAAAZ,OAAAY,KAAA4jB,GACAE,EAAA9jB,EAAAH,OAEAF,EAAA,EAAmBA,EAAAmkB,EAASnkB,IAC5B8jB,EAAAzgB,KAAA0gB,EAAAE,EAAA5jB,EAAAL,IAAAK,EAAAL,KAYAokB,YAAA,SAAAC,EAAAC,GACA,IAAAtkB,EAAAukB,EAAAC,EAAAC,EAEA,IAAAJ,IAAAC,GAAAD,EAAAnkB,SAAAokB,EAAApkB,OACA,SAGA,IAAAF,EAAA,EAAAukB,EAAAF,EAAAnkB,OAAmCF,EAAAukB,IAAUvkB,EAI7C,GAHAwkB,EAAAH,EAAArkB,GACAykB,EAAAH,EAAAtkB,GAEAwkB,aAAAtI,OAAAuI,aAAAvI,OACA,IAAA4G,EAAAsB,YAAAI,EAAAC,GACA,cAES,GAAAD,IAAAC,EAET,SAIA,UAQA1C,MAAA,SAAA5hB,GACA,GAAA2iB,EAAAI,QAAA/iB,GACA,OAAAA,EAAAwI,IAAAma,EAAAf,OAGA,GAAAe,EAAAM,SAAAjjB,GAAA,CAMA,IALA,IAAAJ,EAAA,GACAM,EAAAZ,OAAAY,KAAAF,GACAukB,EAAArkB,EAAAH,OACAoQ,EAAA,EAEcA,EAAAoU,IAAUpU,EACxBvQ,EAAAM,EAAAiQ,IAAAwS,EAAAf,MAAA5hB,EAAAE,EAAAiQ,KAGA,OAAAvQ,EAGA,OAAAI,GAQAwkB,QAAA,SAAAplB,EAAAQ,EAAAI,EAAAykB,GACA,IAAAC,EAAA9kB,EAAAR,GACAulB,EAAA3kB,EAAAZ,GAEAujB,EAAAM,SAAAyB,IAAA/B,EAAAM,SAAA0B,GACAhC,EAAAiC,MAAAF,EAAAC,EAAAF,GAEA7kB,EAAAR,GAAAujB,EAAAf,MAAA+C,IAQAE,UAAA,SAAAzlB,EAAAQ,EAAAI,GACA,IAAA0kB,EAAA9kB,EAAAR,GACAulB,EAAA3kB,EAAAZ,GAEAujB,EAAAM,SAAAyB,IAAA/B,EAAAM,SAAA0B,GACAhC,EAAAmC,QAAAJ,EAAAC,GACO/kB,EAAAyM,eAAAjN,KACPQ,EAAAR,GAAAujB,EAAAf,MAAA+C,KAaAC,MAAA,SAAAhlB,EAAAI,EAAAykB,GACA,IAEAG,EAAA/kB,EAAAK,EAAAqkB,EAAApU,EAFA4U,EAAApC,EAAAI,QAAA/iB,KAAA,CAAAA,GACAokB,EAAAW,EAAAhlB,OAGA,IAAA4iB,EAAAM,SAAArjB,GACA,OAAAA,EAMA,IAFAglB,GADAH,KAAA,IACAO,QAAArC,EAAA6B,QAEA3kB,EAAA,EAAiBA,EAAAukB,IAAUvkB,EAG3B,GAFAG,EAAA+kB,EAAAllB,GAEA8iB,EAAAM,SAAAjjB,GAMA,IAFAE,EAAAZ,OAAAY,KAAAF,GAEAmQ,EAAA,EAAAoU,EAAArkB,EAAAH,OAAuCoQ,EAAAoU,IAAUpU,EACjDyU,EAAA1kB,EAAAiQ,GAAAvQ,EAAAI,EAAAykB,GAIA,OAAA7kB,GAUAklB,QAAA,SAAAllB,EAAAI,GACA,OAAA2iB,EAAAiC,MAAAhlB,EAAAI,EAAA,CACAglB,OAAArC,EAAAkC,aAWAI,OAAA,SAAArlB,GAKA,IAJA,IAAAslB,EAAA,SAAA7lB,EAAAD,GACAQ,EAAAR,GAAAC,GAGAQ,EAAA,EAAAukB,EAAAtkB,UAAAC,OAA8CF,EAAAukB,IAAUvkB,EACxD8iB,EAAAkB,KAAA/jB,UAAAD,GAAAqlB,GAGA,OAAAtlB,GAMAulB,SAAA,SAAAC,GACA,IAAAC,EAAAliB,KACAmiB,EAAAF,KAAA/Y,eAAA,eAAA+Y,EAAAG,YAAA,WACA,OAAAF,EAAAhC,MAAAlgB,KAAArD,YAGA0lB,EAAA,WACAriB,KAAAoiB,YAAAD,GAYA,OATAE,EAAAhiB,UAAA6hB,EAAA7hB,UACA8hB,EAAA9hB,UAAA,IAAAgiB,EACAF,EAAAL,OAAAtC,EAAAwC,SAEAC,GACAzC,EAAAsC,OAAAK,EAAA9hB,UAAA4hB,GAGAE,EAAAG,UAAAJ,EAAA7hB,UACA8hB,IAGAI,EAAA/C,EAUAA,EAAAgD,aAAAhD,EAAAe,SAUAf,EAAA5e,QAAA,SAAA6hB,EAAAnd,EAAAod,GACA,OAAA9J,MAAAvY,UAAAO,QAAAb,KAAA0iB,EAAAnd,EAAAod,IAWAlD,EAAAmD,kBAAAnD,EAAAY,eASAZ,EAAAoD,yBAAApD,EAAAc,sBAOA,IAAAuC,EAAA,CACAC,OAAA,SAAA5U,GACA,OAAAA,GAEA6U,WAAA,SAAA7U,GACA,OAAAA,KAEA8U,YAAA,SAAA9U,GACA,OAAAA,KAAA,IAEA+U,cAAA,SAAA/U,GACA,OAAAA,GAAA,MACA,GAAAA,KAGA,MAAAA,KAAA,OAEAgV,YAAA,SAAAhV,GACA,OAAAA,OAEAiV,aAAA,SAAAjV,GACA,OAAAA,GAAA,GAAAA,IAAA,GAEAkV,eAAA,SAAAlV,GACA,OAAAA,GAAA,MACA,GAAAA,MAGA,KAAAA,GAAA,GAAAA,IAAA,IAEAmV,YAAA,SAAAnV,GACA,OAAAA,SAEAoV,aAAA,SAAApV,GACA,SAAAA,GAAA,GAAAA,MAAA,IAEAqV,eAAA,SAAArV,GACA,OAAAA,GAAA,MACA,GAAAA,SAGA,KAAAA,GAAA,GAAAA,MAAA,IAEAsV,YAAA,SAAAtV,GACA,OAAAA,WAEAuV,aAAA,SAAAvV,GACA,OAAAA,GAAA,GAAAA,QAAA,GAEAwV,eAAA,SAAAxV,GACA,OAAAA,GAAA,MACA,GAAAA,UAGA,KAAAA,GAAA,GAAAA,QAAA,IAEAyV,WAAA,SAAAzV,GACA,SAAApK,KAAAmL,IAAAf,GAAApK,KAAAgL,GAAA,KAEA8U,YAAA,SAAA1V,GACA,OAAApK,KAAAoL,IAAAhB,GAAApK,KAAAgL,GAAA,KAEA+U,cAAA,SAAA3V,GACA,WAAApK,KAAAmL,IAAAnL,KAAAgL,GAAAZ,GAAA,IAEA4V,WAAA,SAAA5V,GACA,WAAAA,EAAA,EAAApK,KAAAsJ,IAAA,MAAAc,EAAA,KAEA6V,YAAA,SAAA7V,GACA,WAAAA,EAAA,IAAApK,KAAAsJ,IAAA,MAAAc,IAEA8V,cAAA,SAAA9V,GACA,WAAAA,EACA,EAGA,IAAAA,EACA,GAGAA,GAAA,MACA,GAAApK,KAAAsJ,IAAA,MAAAc,EAAA,IAGA,MAAApK,KAAAsJ,IAAA,QAAAc,KAEA+V,WAAA,SAAA/V,GACA,OAAAA,GAAA,EACAA,IAGApK,KAAAiL,KAAA,EAAAb,KAAA,IAEAgW,YAAA,SAAAhW,GACA,OAAApK,KAAAiL,KAAA,GAAAb,GAAA,GAAAA,IAEAiW,cAAA,SAAAjW,GACA,OAAAA,GAAA,OACA,IAAApK,KAAAiL,KAAA,EAAAb,KAAA,GAGA,IAAApK,KAAAiL,KAAA,GAAAb,GAAA,GAAAA,GAAA,IAEAkW,cAAA,SAAAlW,GACA,IAAAhE,EAAA,QACA8D,EAAA,EACAzP,EAAA,EAEA,WAAA2P,EACA,EAGA,IAAAA,EACA,GAGAF,IACAA,EAAA,IAGAzP,EAAA,GACAA,EAAA,EACA2L,EAAA8D,EAAA,GAEA9D,EAAA8D,GAAA,EAAAlK,KAAAgL,IAAAhL,KAAAugB,KAAA,EAAA9lB,IAGAA,EAAAuF,KAAAsJ,IAAA,MAAAc,GAAA,IAAApK,KAAAoL,KAAAhB,EAAAhE,IAAA,EAAApG,KAAAgL,IAAAd,KAEAsW,eAAA,SAAApW,GACA,IAAAhE,EAAA,QACA8D,EAAA,EACAzP,EAAA,EAEA,WAAA2P,EACA,EAGA,IAAAA,EACA,GAGAF,IACAA,EAAA,IAGAzP,EAAA,GACAA,EAAA,EACA2L,EAAA8D,EAAA,GAEA9D,EAAA8D,GAAA,EAAAlK,KAAAgL,IAAAhL,KAAAugB,KAAA,EAAA9lB,GAGAA,EAAAuF,KAAAsJ,IAAA,MAAAc,GAAApK,KAAAoL,KAAAhB,EAAAhE,IAAA,EAAApG,KAAAgL,IAAAd,GAAA,IAEAuW,iBAAA,SAAArW,GACA,IAAAhE,EAAA,QACA8D,EAAA,EACAzP,EAAA,EAEA,WAAA2P,EACA,EAGA,KAAAA,GAAA,IACA,GAGAF,IACAA,EAAA,KAGAzP,EAAA,GACAA,EAAA,EACA2L,EAAA8D,EAAA,GAEA9D,EAAA8D,GAAA,EAAAlK,KAAAgL,IAAAhL,KAAAugB,KAAA,EAAA9lB,GAGA2P,EAAA,EACA3P,EAAAuF,KAAAsJ,IAAA,MAAAc,GAAA,IAAApK,KAAAoL,KAAAhB,EAAAhE,IAAA,EAAApG,KAAAgL,IAAAd,IAAA,GAGAzP,EAAAuF,KAAAsJ,IAAA,OAAAc,GAAA,IAAApK,KAAAoL,KAAAhB,EAAAhE,IAAA,EAAApG,KAAAgL,IAAAd,GAAA,OAEAwW,WAAA,SAAAtW,GACA,IAAAhE,EAAA,QACA,OAAAgE,MAAAhE,EAAA,GAAAgE,EAAAhE,IAEAua,YAAA,SAAAvW,GACA,IAAAhE,EAAA,QACA,OAAAgE,GAAA,GAAAA,IAAAhE,EAAA,GAAAgE,EAAAhE,GAAA,GAEAwa,cAAA,SAAAxW,GACA,IAAAhE,EAAA,QAEA,OAAAgE,GAAA,MACAA,MAAA,GAAAhE,GAAA,QAAAgE,EAAAhE,GAAA,GAGA,KAAAgE,GAAA,GAAAA,IAAA,GAAAhE,GAAA,QAAAgE,EAAAhE,GAAA,IAEAya,aAAA,SAAAzW,GACA,SAAA2U,EAAA+B,cAAA,EAAA1W,IAEA0W,cAAA,SAAA1W,GACA,OAAAA,EAAA,OACA,OAAAA,IAGAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAGAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAGA,QAAAA,GAAA,YAAAA,EAAA,SAEA2W,gBAAA,SAAA3W,GACA,OAAAA,EAAA,GACA,GAAA2U,EAAA8B,aAAA,EAAAzW,GAGA,GAAA2U,EAAA+B,cAAA,EAAA1W,EAAA,QAGA4W,EAAA,CACAjC,WAWAN,EAAAwC,cAAAlC,EACA,IAAA/T,EAAAhL,KAAAgL,GACAkW,EAAAlW,EAAA,IACAmW,EAAA,EAAAnW,EACAoW,GAAApW,EAAA,EACAqW,GAAArW,EAAA,EACAsW,GAAA,EAAAtW,EAAA,EAKAuW,GAAA,CAKAC,MAAA,SAAAC,GACAA,EAAAC,IAAAC,UAAA,IAAAF,EAAAze,MAAAye,EAAAG,SAcAC,YAAA,SAAAH,EAAAnY,EAAAC,EAAAxG,EAAA4e,EAAAE,GACA,GAAAA,EAAA,CACA,IAAAnZ,EAAA3I,KAAA8I,IAAAgZ,EAAAF,EAAA,EAAA5e,EAAA,GACAC,EAAAsG,EAAAZ,EACAzF,EAAAsG,EAAAb,EACAoZ,EAAAxY,EAAAvG,EAAA2F,EACAqZ,EAAAxY,EAAAoY,EAAAjZ,EACA+Y,EAAAO,OAAA1Y,EAAArG,GAEAD,EAAA8e,GAAA7e,EAAA8e,GACAN,EAAAQ,IAAAjf,EAAAC,EAAAyF,GAAAqC,GAAAoW,IACAM,EAAAQ,IAAAH,EAAA7e,EAAAyF,GAAAyY,GAAA,GACAM,EAAAQ,IAAAH,EAAAC,EAAArZ,EAAA,EAAAyY,IACAM,EAAAQ,IAAAjf,EAAA+e,EAAArZ,EAAAyY,GAAApW,IACS/H,EAAA8e,GACTL,EAAAO,OAAAhf,EAAAuG,GACAkY,EAAAQ,IAAAH,EAAA7e,EAAAyF,GAAAyY,OACAM,EAAAQ,IAAAjf,EAAAC,EAAAyF,EAAAyY,GAAApW,EAAAoW,KACSle,EAAA8e,GACTN,EAAAQ,IAAAjf,EAAAC,EAAAyF,GAAAqC,EAAA,GACA0W,EAAAQ,IAAAjf,EAAA+e,EAAArZ,EAAA,EAAAqC,IAEA0W,EAAAQ,IAAAjf,EAAAC,EAAAyF,GAAAqC,KAGA0W,EAAAS,YACAT,EAAAO,OAAA1Y,EAAAC,QAEAkY,EAAAU,KAAA7Y,EAAAC,EAAAxG,EAAA4e,IAGAS,UAAA,SAAAX,EAAA5f,EAAAggB,EAAAvY,EAAAC,EAAA8Y,GACA,IAAA3nB,EAAA4nB,EAAAC,EAAA3nB,EAAA4nB,EACAC,GAAAJ,GAAA,GAAApB,EAEA,IAAApf,GAAA,kBAAAA,GAGA,+BAFAnH,EAAAmH,EAAA5B,aAEA,+BAAAvF,GAMA,KAAA6c,MAAAsK,OAAA,IAMA,OAFAJ,EAAAiB,YAEA7gB,GAEA,QACA4f,EAAAQ,IAAA3Y,EAAAC,EAAAsY,EAAA,EAAAX,GACAO,EAAAS,YACA,MAEA,eACAT,EAAAO,OAAA1Y,EAAAvJ,KAAAoL,IAAAsX,GAAAZ,EAAAtY,EAAAxJ,KAAAmL,IAAAuX,GAAAZ,GACAY,GAAApB,GACAI,EAAAkB,OAAArZ,EAAAvJ,KAAAoL,IAAAsX,GAAAZ,EAAAtY,EAAAxJ,KAAAmL,IAAAuX,GAAAZ,GACAY,GAAApB,GACAI,EAAAkB,OAAArZ,EAAAvJ,KAAAoL,IAAAsX,GAAAZ,EAAAtY,EAAAxJ,KAAAmL,IAAAuX,GAAAZ,GACAJ,EAAAS,YACA,MAEA,kBASAtnB,EAAAinB,GADAW,EAAA,KAAAX,GAEAS,EAAAviB,KAAAmL,IAAAuX,EAAArB,IAAAxmB,EACA2nB,EAAAxiB,KAAAoL,IAAAsX,EAAArB,IAAAxmB,EACA6mB,EAAAQ,IAAA3Y,EAAAgZ,EAAA/Y,EAAAgZ,EAAAC,EAAAC,EAAA1X,EAAA0X,EAAAtB,IACAM,EAAAQ,IAAA3Y,EAAAiZ,EAAAhZ,EAAA+Y,EAAAE,EAAAC,EAAAtB,GAAAsB,GACAhB,EAAAQ,IAAA3Y,EAAAgZ,EAAA/Y,EAAAgZ,EAAAC,EAAAC,IAAAtB,IACAM,EAAAQ,IAAA3Y,EAAAiZ,EAAAhZ,EAAA+Y,EAAAE,EAAAC,EAAAtB,GAAAsB,EAAA1X,GACA0W,EAAAS,YACA,MAEA,WACA,IAAAG,EAAA,CACAznB,EAAAmF,KAAA6iB,QAAAf,EACAJ,EAAAU,KAAA7Y,EAAA1O,EAAA2O,EAAA3O,EAAA,EAAAA,EAAA,EAAAA,GACA,MAGA6nB,GAAArB,GAIA,cACAkB,EAAAviB,KAAAmL,IAAAuX,GAAAZ,EACAU,EAAAxiB,KAAAoL,IAAAsX,GAAAZ,EACAJ,EAAAO,OAAA1Y,EAAAgZ,EAAA/Y,EAAAgZ,GACAd,EAAAkB,OAAArZ,EAAAiZ,EAAAhZ,EAAA+Y,GACAb,EAAAkB,OAAArZ,EAAAgZ,EAAA/Y,EAAAgZ,GACAd,EAAAkB,OAAArZ,EAAAiZ,EAAAhZ,EAAA+Y,GACAb,EAAAS,YACA,MAEA,eACAO,GAAArB,GAIA,YACAkB,EAAAviB,KAAAmL,IAAAuX,GAAAZ,EACAU,EAAAxiB,KAAAoL,IAAAsX,GAAAZ,EACAJ,EAAAO,OAAA1Y,EAAAgZ,EAAA/Y,EAAAgZ,GACAd,EAAAkB,OAAArZ,EAAAgZ,EAAA/Y,EAAAgZ,GACAd,EAAAO,OAAA1Y,EAAAiZ,EAAAhZ,EAAA+Y,GACAb,EAAAkB,OAAArZ,EAAAiZ,EAAAhZ,EAAA+Y,GACA,MAEA,WACAA,EAAAviB,KAAAmL,IAAAuX,GAAAZ,EACAU,EAAAxiB,KAAAoL,IAAAsX,GAAAZ,EACAJ,EAAAO,OAAA1Y,EAAAgZ,EAAA/Y,EAAAgZ,GACAd,EAAAkB,OAAArZ,EAAAgZ,EAAA/Y,EAAAgZ,GACAd,EAAAO,OAAA1Y,EAAAiZ,EAAAhZ,EAAA+Y,GACAb,EAAAkB,OAAArZ,EAAAiZ,EAAAhZ,EAAA+Y,GACAG,GAAArB,GACAkB,EAAAviB,KAAAmL,IAAAuX,GAAAZ,EACAU,EAAAxiB,KAAAoL,IAAAsX,GAAAZ,EACAJ,EAAAO,OAAA1Y,EAAAgZ,EAAA/Y,EAAAgZ,GACAd,EAAAkB,OAAArZ,EAAAgZ,EAAA/Y,EAAAgZ,GACAd,EAAAO,OAAA1Y,EAAAiZ,EAAAhZ,EAAA+Y,GACAb,EAAAkB,OAAArZ,EAAAiZ,EAAAhZ,EAAA+Y,GACA,MAEA,WACAA,EAAAviB,KAAAmL,IAAAuX,GAAAZ,EACAU,EAAAxiB,KAAAoL,IAAAsX,GAAAZ,EACAJ,EAAAO,OAAA1Y,EAAAgZ,EAAA/Y,EAAAgZ,GACAd,EAAAkB,OAAArZ,EAAAgZ,EAAA/Y,EAAAgZ,GACA,MAEA,WACAd,EAAAO,OAAA1Y,EAAAC,GACAkY,EAAAkB,OAAArZ,EAAAvJ,KAAAmL,IAAAuX,GAAAZ,EAAAtY,EAAAxJ,KAAAoL,IAAAsX,GAAAZ,GAIAJ,EAAAoB,OACApB,EAAAqB,eA/GArB,EAAAsB,UAAAlhB,EAAAyH,EAAAzH,EAAAkB,MAAA,EAAAwG,EAAA1H,EAAA8f,OAAA,EAAA9f,EAAAkB,MAAAlB,EAAA8f,SAyHAqB,eAAA,SAAAC,EAAAC,GAGA,OAAAD,EAAA3Z,EAAA4Z,EAAAlgB,KAFA,MAEAigB,EAAA3Z,EAAA4Z,EAAApB,MAFA,MAEAmB,EAAA1Z,EAAA2Z,EAAAjgB,IAFA,MAEAggB,EAAA1Z,EAAA2Z,EAAAnB,OAFA,MAIAoB,SAAA,SAAA1B,EAAAyB,GACAzB,EAAA2B,OACA3B,EAAAiB,YACAjB,EAAAU,KAAAe,EAAAlgB,KAAAkgB,EAAAjgB,IAAAigB,EAAApB,MAAAoB,EAAAlgB,KAAAkgB,EAAAnB,OAAAmB,EAAAjgB,KACAwe,EAAA4B,QAEAC,WAAA,SAAA7B,GACAA,EAAA8B,WAEAZ,OAAA,SAAAlB,EAAA+B,EAAA9qB,EAAA+qB,GACA,IAAAC,EAAAhrB,EAAAirB,YAEA,GAAAD,EAAA,CACA,cAAAA,EAAA,CACA,IAAAE,GAAAJ,EAAAla,EAAA5Q,EAAA4Q,GAAA,EACAmY,EAAAkB,OAAAiB,EAAAH,EAAA/qB,EAAA6Q,EAAAia,EAAAja,GACAkY,EAAAkB,OAAAiB,EAAAH,EAAAD,EAAAja,EAAA7Q,EAAA6Q,OACS,UAAAma,IAAAD,GAAA,UAAAC,GAAAD,EACThC,EAAAkB,OAAAa,EAAAla,EAAA5Q,EAAA6Q,GAEAkY,EAAAkB,OAAAjqB,EAAA4Q,EAAAka,EAAAja,GAGAkY,EAAAkB,OAAAjqB,EAAA4Q,EAAA5Q,EAAA6Q,QAIA7Q,EAAAmrB,QAKApC,EAAAqC,cAAAL,EAAAD,EAAAO,sBAAAP,EAAAQ,kBAAAP,EAAAD,EAAAS,sBAAAT,EAAAU,kBAAAT,EAAA/qB,EAAAsrB,kBAAAtrB,EAAAqrB,sBAAAN,EAAA/qB,EAAAwrB,kBAAAxrB,EAAAurB,sBAAAvrB,EAAA4Q,EAAA5Q,EAAA6Q,GAJAkY,EAAAkB,OAAAjqB,EAAA4Q,EAAA5Q,EAAA6Q,KAOA4a,GAAA7C,GAUA9C,EAAA+C,MAAAD,GAAAC,MASA/C,EAAA4F,qBAAA,SAAA3C,GACAA,EAAAiB,YACApB,GAAAM,YAAAzF,MAAAmF,GAAA1oB,YAGA,IAAAyrB,GAAA,CAIAC,KAAA,SAAAC,EAAAhP,GACA,OAAAiJ,EAAAd,MAAAzhB,KAAAsoB,KAAAtoB,KAAAsoB,GAAA,IAAgEhP,KAIhE8O,GAAAC,KAAA,UACAE,aAAA,kBACAC,iBAAA,OACAC,kBAAA,qDACAC,gBAAA,GACAC,iBAAA,SACAC,kBAAA,IACAC,WAAA,IAGA,IAAAC,GAAAV,GACAhI,GAAAmC,EAAAnC,eAqBA2I,GAAA,CASAC,aAAA,SAAA9sB,EAAAyC,GACA,IAAAsqB,GAAA,GAAA/sB,GAAA+e,MAAA,wCAEA,IAAAgO,GAAA,WAAAA,EAAA,GACA,WAAAtqB,EAKA,OAFAzC,GAAA+sB,EAAA,GAEAA,EAAA,IACA,SACA,OAAA/sB,EAEA,QACAA,GAAA,IAOA,OAAAyC,EAAAzC,GAUAgtB,UAAA,SAAAhtB,GACA,IAAAgS,EAAAzB,EAAAE,EAAAxC,EAWA,OATAoY,EAAAzC,SAAA5jB,IACAgS,GAAAhS,EAAA8K,KAAA,EACAyF,GAAAvQ,EAAA2pB,OAAA,EACAlZ,GAAAzQ,EAAA4pB,QAAA,EACA3b,GAAAjO,EAAA6K,MAAA,GAEAmH,EAAAzB,EAAAE,EAAAxC,GAAAjO,GAAA,EAGA,CACA8K,IAAAkH,EACA2X,MAAApZ,EACAqZ,OAAAnZ,EACA5F,KAAAoD,EACAub,OAAAxX,EAAAvB,EACA7F,MAAAqD,EAAAsC,IAWA0c,WAAA,SAAA7H,GACA,IAAA8H,EAAAN,GAAAO,OACA1qB,EAAAyhB,GAAAkB,EAAAgI,SAAAF,EAAAV,iBACAa,EAAA,CACAC,OAAApJ,GAAAkB,EAAAmI,WAAAL,EAAAX,mBACAiB,WAAAnH,EAAAjB,QAAA0H,aAAA5I,GAAAkB,EAAAoI,WAAAN,EAAAR,mBAAAjqB,GACAA,OACAiH,MAAAwa,GAAAkB,EAAAqI,UAAAP,EAAAT,kBACAtK,OAAA,KACA3f,OAAA,IAGA,OADA6qB,EAAA7qB,OA7FA,SAAA6qB,GACA,OAAAA,GAAAhH,EAAA5C,cAAA4J,EAAA5qB,OAAA4jB,EAAA5C,cAAA4J,EAAAC,QACA,MAGAD,EAAA3jB,MAAA2jB,EAAA3jB,MAAA,SAAA2jB,EAAAlL,OAAAkL,EAAAlL,OAAA,QAAAkL,EAAA5qB,KAAA,MAAA4qB,EAAAC,OAwFAI,CAAAL,GACAA,GAYAM,QAAA,SAAAC,EAAAC,EAAA3K,GACA,IAAA1iB,EAAAukB,EAAA/kB,EAEA,IAAAQ,EAAA,EAAAukB,EAAA6I,EAAAltB,OAAuCF,EAAAukB,IAAUvkB,EAGjD,QAAA4F,KAFApG,EAAA4tB,EAAAptB,WAMA4F,IAAAynB,GAAA,oBAAA7tB,IACAA,IAAA6tB,SAGAznB,IAAA8c,GAAAmD,EAAA3C,QAAA1jB,KACAA,IAAAkjB,SAGA9c,IAAApG,GACA,OAAAA,IAKA8tB,GAAAzH,EACA0H,GAAAnF,EACAnhB,GAAAukB,GACA5G,GAAAyH,GACAiB,GAAAC,UACAD,GAAArmB,UACAqmB,GAAA1I,WAkDA,IAAA4I,GAAA,SAAAC,GACAH,GAAAlI,OAAA9hB,KAAAmqB,GACAnqB,KAAAoqB,WAAAlK,MAAAlgB,KAAArD,YAGAqtB,GAAAlI,OAAAoI,GAAA7pB,UAAA,CACA+pB,WAAA,WACApqB,KAAAqqB,QAAA,GAEAC,MAAA,WACA,IAAApI,EAAAliB,KAOA,OALAkiB,EAAAqI,QACArI,EAAAqI,MAAAP,GAAAvL,MAAAyD,EAAAsI,SAGAtI,EAAAuI,OAAA,GACAvI,GAEAwI,WAAA,SAAAC,GACA,IAAAzI,EAAAliB,KACA4qB,EAAA1I,EAAAsI,OACAK,EAAA3I,EAAAuI,OACAK,EAAA5I,EAAAqI,MAEA,OAAAK,GAAA,IAAAD,GAMAG,IACAA,EAAA5I,EAAAqI,MAAA,IAGAM,IACAA,EAAA3I,EAAAuI,OAAA,IApFA,SAAAI,EAAAC,EAAAF,EAAAD,GACA,IACAjuB,EAAAukB,EAAAhlB,EAAA8uB,EAAAC,EAAAvuB,EAAAgC,EAAAwsB,EAAAC,EADAnuB,EAAAZ,OAAAY,KAAA6tB,GAGA,IAAAluB,EAAA,EAAAukB,EAAAlkB,EAAAH,OAAmCF,EAAAukB,IAAUvkB,EAW7C,GAVAT,EAAAc,EAAAL,GACAD,EAAAmuB,EAAA3uB,GAGA6uB,EAAA5hB,eAAAjN,KACA6uB,EAAA7uB,GAAAQ,IAGAsuB,EAAAD,EAAA7uB,MAEAQ,GAAA,MAAAR,EAAA,IAWA,GAPA4uB,EAAA3hB,eAAAjN,KACA4uB,EAAA5uB,GAAA8uB,GAGAC,EAAAH,EAAA5uB,IACAwC,SAAAhC,YAEAuuB,EACA,cAAAvsB,GAGA,IAFAwsB,EAAA1L,EAAAyL,IAEAlsB,QACAosB,EAAA3L,EAAA9iB,IAEAqC,MAAA,CACAgsB,EAAA7uB,GAAAivB,EAAA/M,IAAA8M,EAAAN,GAAAnQ,YACA,eAGS,GAAAwP,GAAAjK,SAAAiL,IAAAhB,GAAAjK,SAAAtjB,GAAA,CACTquB,EAAA7uB,GAAA+uB,GAAAvuB,EAAAuuB,GAAAL,EACA,SAIAG,EAAA7uB,GAAAQ,GA2CA0uB,CAAAN,EAAAC,EAAAF,EAAAD,GACAzI,IAdAA,EAAAqI,MAAAK,EACA1I,EAAAuI,OAAA,KACAvI,IAcAkJ,gBAAA,WACA,OACA/d,EAAArN,KAAAwqB,OAAAnd,EACAC,EAAAtN,KAAAwqB,OAAAld,IAGA+d,SAAA,WACA,OAAArB,GAAAsB,SAAAtrB,KAAAwqB,OAAAnd,IAAA2c,GAAAsB,SAAAtrB,KAAAwqB,OAAAld,MAGA4c,GAAApI,OAAAkI,GAAAhI,SACA,IAAAuJ,GAAArB,GACAsB,GAAAD,GAAAzJ,OAAA,CACAyD,MAAA,KAEAkG,YAAA,EAEAC,SAAA,GAEAzB,OAAA,GAEA1pB,OAAA,KAEAorB,oBAAA,KAEAC,oBAAA,OAGAC,GAAAL,GASArvB,OAAAC,eAAAovB,GAAAnrB,UAAA,mBACAyrB,IAAA,WACA,OAAA9rB,QAUA7D,OAAAC,eAAAovB,GAAAnrB,UAAA,iBACAyrB,IAAA,WACA,OAAA9rB,KAAAulB,OAEAwG,IAAA,SAAA7vB,GACA8D,KAAAulB,MAAArpB,KAIA4sB,GAAAT,KAAA,UACA2D,UAAA,CACAC,SAAA,IACAhC,OAAA,eACAiC,WAAAlC,GAAAvK,KACA0M,WAAAnC,GAAAvK,QAIA,IAAA2M,GAAA,CACAC,WAAA,GACAC,QAAA,KAQAC,aAAA,SAAAhH,EAAAyG,EAAAC,EAAAO,GACA,IACA9vB,EAAAukB,EADAoL,EAAArsB,KAAAqsB,WAUA,IARAL,EAAAzG,QACAyG,EAAAS,UAAAC,KAAAC,MACAX,EAAAC,WAEAO,IACAjH,EAAAqH,WAAA,GAGAlwB,EAAA,EAAAukB,EAAAoL,EAAAzvB,OAA2CF,EAAAukB,IAAUvkB,EACrD,GAAA2vB,EAAA3vB,GAAA6oB,UAEA,YADA8G,EAAA3vB,GAAAsvB,GAKAK,EAAAQ,KAAAb,GAEA,IAAAK,EAAAzvB,QACAoD,KAAA8sB,yBAGAC,gBAAA,SAAAxH,GACA,IAAAnG,EAAA4K,GAAAgD,UAAAhtB,KAAAqsB,WAAA,SAAAL,GACA,OAAAA,EAAAzG,aAGA,IAAAnG,IACApf,KAAAqsB,WAAAY,OAAA7N,EAAA,GACAmG,EAAAqH,WAAA,IAGAE,sBAAA,WACA,IAAA5K,EAAAliB,KAEA,OAAAkiB,EAAAoK,UAIApK,EAAAoK,QAAAtC,GAAAkD,iBAAAntB,KAAAuf,OAAA,WACA4C,EAAAoK,QAAA,KACApK,EAAAiL,kBAQAA,YAAA,WACAntB,KACAotB,UADAptB,KAGAqsB,WAAAzvB,OAAA,GAHAoD,KAIA8sB,yBAOAM,QAAA,WAKA,IAJA,IACApB,EAAAzG,EAAAmG,EAAA2B,EADAhB,EAAArsB,KAAAqsB,WAEA3vB,EAAA,EAEAA,EAAA2vB,EAAAzvB,QACAovB,EAAAK,EAAA3vB,GACA6oB,EAAAyG,EAAAzG,MACAmG,EAAAM,EAAAN,SAGA2B,EAAAvpB,KAAAgK,OAAA4e,KAAAC,MAAAX,EAAAS,WAAAT,EAAAC,SAAAP,GAAA,EACAM,EAAAP,YAAA3nB,KAAA8I,IAAAygB,EAAA3B,GACA1B,GAAAzJ,SAAAyL,EAAAzrB,OAAA,CAAAglB,EAAAyG,GAAAzG,GACAyE,GAAAzJ,SAAAyL,EAAAL,oBAAA,CAAAK,GAAAzG,GAEAyG,EAAAP,aAAAC,GACA1B,GAAAzJ,SAAAyL,EAAAJ,oBAAA,CAAAI,GAAAzG,GACAA,EAAAqH,WAAA,EACAP,EAAAY,OAAAvwB,EAAA,MAEAA,IAKAmtB,GAAAG,GAAA1I,QAAAuI,QACAyD,GAAA,0CA8CA,SAAAC,GAAA9K,EAAA+K,GACA,IAAAC,EAAAhL,EAAAiL,SAEA,GAAAD,EAAA,CAIA,IAAAE,EAAAF,EAAAE,UACAvO,EAAAuO,EAAA/sB,QAAA4sB,IAEA,IAAApO,GACAuO,EAAAV,OAAA7N,EAAA,GAGAuO,EAAA/wB,OAAA,IAIA0wB,GAAAjwB,QAAA,SAAApB,UACAwmB,EAAAxmB,YAEAwmB,EAAAiL,WAIA,IAAAE,GAAA,SAAArI,EAAAsI,GACA7tB,KAAAoqB,WAAA7E,EAAAsI,IAGA7D,GAAAlI,OAAA8L,GAAAvtB,UAAA,CAKAytB,mBAAA,KAMAC,gBAAA,KACA3D,WAAA,SAAA7E,EAAAsI,GACA7tB,KACAulB,QADAvlB,KAEAof,MAAAyO,EAFA7tB,KAGAguB,aAHAhuB,KAIAiuB,eAEAC,YAAA,SAAAL,GACA7tB,KAAAof,MAAAyO,GAEAG,WAAA,WACA,IAAA9L,EAAAliB,KACAmuB,EAAAjM,EAAAkM,UACAC,EAAAnM,EAAAoM,aAEA,OAAAH,EAAAI,SAAAJ,EAAAI,WAAArM,EAAAqD,MAAAiJ,SACAL,EAAAI,QAAAF,EAAAE,SAAArM,EAAAqD,MAAAjE,QAAAkN,OAAAC,MAAA,GAAA7qB,IAGA,OAAAuqB,EAAAO,SAAAP,EAAAO,WAAAxM,EAAAqD,MAAAiJ,SACAL,EAAAO,QAAAL,EAAAK,SAAAxM,EAAAqD,MAAAjE,QAAAkN,OAAAG,MAAA,GAAA/qB,KAGA0qB,WAAA,WACA,OAAAtuB,KAAAulB,MAAAqJ,KAAAC,SAAA7uB,KAAAof,QAEAgP,QAAA,WACA,OAAApuB,KAAAulB,MAAAuJ,eAAA9uB,KAAAof,QAEA2P,cAAA,SAAAC,GACA,OAAAhvB,KAAAulB,MAAAiJ,OAAAQ,IAMAC,iBAAA,WACA,OAAAjvB,KAAAouB,UAAAM,SAMAQ,iBAAA,WACA,OAAAlvB,KAAAouB,UAAAG,SAMAY,eAAA,WACA,OAAAnvB,KAAA+uB,cAAA/uB,KAAAivB,qBAMAG,eAAA,WACA,OAAApvB,KAAA+uB,cAAA/uB,KAAAkvB,qBAEAG,MAAA,WACArvB,KAAAsvB,QAAA,IAMAC,QAAA,WACAvvB,KAAAwvB,OACAjC,GAAAvtB,KAAAwvB,MAAAxvB,OAGAyvB,kBAAA,WACA,IACAhxB,EADAuB,KACA8tB,mBACA,OAAArvB,GAAA,IAAAA,EAAA,CACAiF,OAHA1D,KAGAulB,MACAmK,cAJA1vB,KAIAof,SAGAuQ,eAAA,SAAAvQ,GACA,IACA3gB,EADAuB,KACA+tB,gBACA,OAAAtvB,GAAA,IAAAA,EAAA,CACAiF,OAHA1D,KAGAulB,MACAmK,cAJA1vB,KAIAof,MACAwQ,OAAAxQ,KAGA6O,YAAA,WACA,IAIAvxB,EAAAukB,EAHAkN,EADAnuB,KACAouB,UACAQ,EAFA5uB,KAEAsuB,aAAAM,MAAA,GACAiB,EAAA1B,EAAAS,KAGA,IAAAlyB,EAAA,EAAAukB,EAAA2N,EAAAhyB,OAAqCF,EAAAukB,IAAUvkB,EAC/CmzB,EAAAnzB,GAAAmzB,EAAAnzB,IAPAsD,KAOA2vB,eAAAjzB,GAGAyxB,EAAAE,QAAAF,EAAAE,SAVAruB,KAUAyvB,qBAEAK,mBAAA,SAAA1Q,GACA,IAAA2Q,EAAA/vB,KAAA2vB,eAAAvQ,GACApf,KAAAouB,UAAAQ,KAAA3B,OAAA7N,EAAA,EAAA2Q,GACA/vB,KAAAgwB,cAAAD,EAAA3Q,GAAA,IAEA6Q,sBAAA,WACA,IA5LAxN,EAAA+K,EA4LAtL,EAAAliB,KACAquB,EAAAnM,EAAAoM,aACAM,EAAAP,EAAAO,OAAAP,EAAAO,KAAA,IAIA1M,EAAAsN,QAAAZ,IACA1M,EAAAsN,OAEAjC,GAAArL,EAAAsN,MAAAtN,GAGA0M,GAAAzyB,OAAA+zB,aAAAtB,KAxMApB,EAyMAtL,GAzMAO,EAyMAmM,GAxMAlB,SACAjL,EAAAiL,SAAAC,UAAAd,KAAAW,IAKArxB,OAAAC,eAAAqmB,EAAA,YACAnmB,cAAA,EACAD,YAAA,EACAH,MAAA,CACAyxB,UAAA,CAAAH,MAGAF,GAAAjwB,QAAA,SAAApB,GACA,IAAAk0B,EAAA,SAAAl0B,EAAA+iB,OAAA,GAAAvD,cAAAxf,EAAA4c,MAAA,GACAuX,EAAA3N,EAAAxmB,GACAE,OAAAC,eAAAqmB,EAAAxmB,EAAA,CACAK,cAAA,EACAD,YAAA,EACAH,MAAA,WACA,IAAA0N,EAAAgP,MAAAvY,UAAAwY,MAAA9Y,KAAApD,WACA0zB,EAAAD,EAAAlQ,MAAAlgB,KAAA4J,GAMA,OALAogB,GAAAtJ,KAAA+B,EAAAiL,SAAAC,UAAA,SAAAvuB,GACA,oBAAAA,EAAA+wB,IACA/wB,EAAA+wB,GAAAjQ,MAAA9gB,EAAAwK,KAGAymB,SAgLAnO,EAAAsN,MAAAZ,GAKA1M,EAAAoO,kBAEAhB,OAAAtF,GAAAvK,KACAiL,WAAA,SAAA6F,GAMA,IALA,IAAApC,EAAAnuB,KAAAouB,UACAoC,EAAArC,EAAAS,MAAA,GACA3N,EAAAuP,EAAA5zB,OACAF,EAAA,EAEYA,EAAAukB,IAAUvkB,EACtB8zB,EAAA9zB,GAAAguB,WAAA6F,GAGApC,EAAAE,SACAF,EAAAE,QAAA3D,WAAA6F,IAGAE,KAAA,WACA,IAAAtC,EAAAnuB,KAAAouB,UACAoC,EAAArC,EAAAS,MAAA,GACA3N,EAAAuP,EAAA5zB,OACAF,EAAA,EAMA,IAJAyxB,EAAAE,SACAF,EAAAE,QAAAoC,OAGY/zB,EAAAukB,IAAUvkB,EACtB8zB,EAAA9zB,GAAA+zB,QAGAC,iBAAA,SAAAX,GACA/F,GAAAvI,MAAAsO,EAAAvF,OAAAuF,EAAAY,gBAAA,WACAZ,EAAAY,gBAEAC,cAAA,SAAAb,GACA,IAAA1B,EAAAruB,KAAAulB,MAAAqJ,KAAAC,SAAAkB,EAAAL,eACAtQ,EAAA2Q,EAAAH,OACAiB,EAAAd,EAAAc,QAAA,GACAjG,EAAAmF,EAAAvF,OACAsG,EAAA9G,GAAA8G,cACAf,EAAAY,eAAA,CACA9qB,gBAAA+kB,EAAA/kB,gBACAkrB,YAAAnG,EAAAmG,YACAC,YAAApG,EAAAoG,aAEApG,EAAA/kB,gBAAAgkB,GAAA,CAAAgH,EAAAI,qBAAA5C,EAAA4C,qBAAAH,EAAAlG,EAAA/kB,uBAAAvD,EAAA8c,GACAwL,EAAAmG,YAAAlH,GAAA,CAAAgH,EAAAK,iBAAA7C,EAAA6C,iBAAAJ,EAAAlG,EAAAmG,mBAAAzuB,EAAA8c,GACAwL,EAAAoG,YAAAnH,GAAA,CAAAgH,EAAAM,iBAAA9C,EAAA8C,iBAAAvG,EAAAoG,kBAAA1uB,EAAA8c,IAMAkR,eAAA,WACA,IACAnC,EADAnuB,KACAouB,UACAQ,EAFA5uB,KAEAsuB,aAAAM,KACAwC,EAAAjD,EAAAS,KAAAhyB,OACAy0B,EAAAzC,EAAAhyB,OAEAy0B,EAAAD,EACAjD,EAAAS,KAAA3B,OAAAoE,EAAAD,EAAAC,GACOA,EAAAD,GARPpxB,KASAsxB,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAzG,EAAA0G,GACA,QAAA70B,EAAA,EAAqBA,EAAA60B,IAAW70B,EAChCsD,KAAA8vB,mBAAAjF,EAAAnuB,IAOA80B,WAAA,WACA,IAAAD,EAAA50B,UAAAC,OACAoD,KAAAsxB,eAAAtxB,KAAAsuB,aAAAM,KAAAhyB,OAAA20B,MAMAE,UAAA,WACAzxB,KAAAouB,UAAAQ,KAAA3oB,OAMAyrB,YAAA,WACA1xB,KAAAouB,UAAAQ,KAAA+C,SAMAC,aAAA,SAAA/G,EAAA0G,GACAvxB,KAAAouB,UAAAQ,KAAA3B,OAAApC,EAAA0G,GACAvxB,KAAAsxB,eAAAzG,EAAAluB,UAAAC,OAAA,IAMAi1B,cAAA,WACA7xB,KAAAsxB,eAAA,EAAA30B,UAAAC,WAGAgxB,GAAA9L,OAAAkI,GAAAhI,SACA,IAAA8P,GAAAlE,GAEA9E,GAAAT,KAAA,UACAmI,SAAA,CACAxK,IAAA,CACAngB,gBAAAijB,GAAAO,OAAAd,aACAwI,YAAA,OACAC,YAAA,EACAe,YAAA,aAKA,IAAAC,GAAAzG,GAAAzJ,OAAA,CACAmQ,aAAA,SAAAC,GACA,IAAAC,EAAAnyB,KAAAuqB,MAEA,QAAA4H,GACAruB,KAAAsJ,IAAA8kB,EAAAC,EAAA9kB,EAAA,GAAAvJ,KAAAsJ,IAAA+kB,EAAAvM,OAAAuM,EAAAC,YAAA,IAKAC,QAAA,SAAAC,EAAAC,GACA,IAAAJ,EAAAnyB,KAAAuqB,MAEA,GAAA4H,EAAA,CAWA,IAVA,IAAAK,EAAAxI,GAAAyI,kBAAAN,EAAA,CACA9kB,EAAAilB,EACAhlB,EAAAilB,IAEAG,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SAEAC,EAAAT,EAAAS,WACAC,EAAAV,EAAAU,SAEAA,EAAAD,GACAC,GAAA,EAAA/uB,KAAAgL,GAGA,KAAA4jB,EAAAG,GACAH,GAAA,EAAA5uB,KAAAgL,GAGA,KAAA4jB,EAAAE,GACAF,GAAA,EAAA5uB,KAAAgL,GAIA,IAAAgkB,EAAAJ,GAAAE,GAAAF,GAAAG,EACAE,EAAAJ,GAAAR,EAAAa,aAAAL,GAAAR,EAAAc,YACA,OAAAH,GAAAC,EAGA,UAEAG,eAAA,WACA,IAAAf,EAAAnyB,KAAAuqB,MACA4I,GAAAhB,EAAAS,WAAAT,EAAAU,UAAA,EACAO,GAAAjB,EAAAa,YAAAb,EAAAc,aAAA,EACA,OACA5lB,EAAA8kB,EAAA9kB,EAAAvJ,KAAAmL,IAAAkkB,GAAAC,EACA9lB,EAAA6kB,EAAA7kB,EAAAxJ,KAAAoL,IAAAikB,GAAAC,IAGAC,QAAA,WACA,IAAAlB,EAAAnyB,KAAAuqB,MACA,OAAAzmB,KAAAgL,KAAAqjB,EAAAU,SAAAV,EAAAS,aAAA,EAAA9uB,KAAAgL,MAAAhL,KAAAsJ,IAAA+kB,EAAAc,YAAA,GAAAnvB,KAAAsJ,IAAA+kB,EAAAa,YAAA,KAEA5H,gBAAA,WACA,IAAA+G,EAAAnyB,KAAAuqB,MACA+I,EAAAnB,EAAAS,YAAAT,EAAAU,SAAAV,EAAAS,YAAA,EACAW,GAAApB,EAAAc,YAAAd,EAAAa,aAAA,EAAAb,EAAAa,YACA,OACA3lB,EAAA8kB,EAAA9kB,EAAAvJ,KAAAmL,IAAAqkB,GAAAC,EACAjmB,EAAA6kB,EAAA7kB,EAAAxJ,KAAAoL,IAAAokB,GAAAC,IAGA9C,KAAA,WACA,IAKA+C,EALAhO,EAAAxlB,KAAA0D,OAAA8hB,IACA2M,EAAAnyB,KAAAuqB,MACAkJ,EAAAtB,EAAAS,WACAc,EAAAvB,EAAAU,SACAc,EAAA,UAAAxB,EAAAJ,YAAA,MAEAvM,EAAA2B,OACA3B,EAAAiB,YACAjB,EAAAQ,IAAAmM,EAAA9kB,EAAA8kB,EAAA7kB,EAAAxJ,KAAA+I,IAAAslB,EAAAc,YAAAU,EAAA,GAAAF,EAAAC,GACAlO,EAAAQ,IAAAmM,EAAA9kB,EAAA8kB,EAAA7kB,EAAA6kB,EAAAa,YAAAU,EAAAD,GAAA,GACAjO,EAAAS,YACAT,EAAAoO,UAAAzB,EAAAtsB,gBACA2f,EAAAoB,OAEAuL,EAAAnB,cACA,UAAAmB,EAAAJ,aAGAvM,EAAAiB,YACA+M,EAAAG,EAAAxB,EAAAc,YACAzN,EAAAQ,IAAAmM,EAAA9kB,EAAA8kB,EAAA7kB,EAAA6kB,EAAAc,YAAAQ,EAAAD,EAAAE,EAAAF,GAEArB,EAAAa,YAAAW,GACAH,EAAAG,EAAAxB,EAAAa,YACAxN,EAAAQ,IAAAmM,EAAA9kB,EAAA8kB,EAAA7kB,EAAA6kB,EAAAa,YAAAW,EAAAD,EAAAF,EAAAC,EAAAD,GAAA,IAEAhO,EAAAQ,IAAAmM,EAAA9kB,EAAA8kB,EAAA7kB,EAAAqmB,EAAAD,EAAA5vB,KAAAgL,GAAA,EAAA2kB,EAAA3vB,KAAAgL,GAAA,GAGA0W,EAAAS,YACAT,EAAA4B,OACA5B,EAAAiB,YACAjB,EAAAQ,IAAAmM,EAAA9kB,EAAA8kB,EAAA7kB,EAAA6kB,EAAAc,YAAAQ,EAAAC,GACAlO,EAAAQ,IAAAmM,EAAA9kB,EAAA8kB,EAAA7kB,EAAA6kB,EAAAa,YAAAU,EAAAD,GAAA,GACAjO,EAAAS,YACAT,EAAAqO,UAAA,EAAA1B,EAAAnB,YACAxL,EAAAsO,SAAA,UAEAtO,EAAAqO,UAAA1B,EAAAnB,YACAxL,EAAAsO,SAAA,SAGAtO,EAAAuO,YAAA5B,EAAApB,YACAvL,EAAAqB,UAGArB,EAAA8B,aAGA0M,GAAAhK,GAAA5J,eACAmI,GAAAO,GAAAO,OAAAd,aAEAO,GAAAT,KAAA,UACAmI,SAAA,CACAyD,KAAA,CACArM,QAAA,GACA/hB,gBAAA0iB,GACAyI,YAAA,EACAD,YAAAxI,GACA2L,eAAA,OACAC,WAAA,GACAC,iBAAA,EACAC,gBAAA,QACAC,iBAAA,EACA1N,MAAA,MAMA,IAAA2N,GAAAhJ,GAAAzJ,OAAA,CACA2O,KAAA,WACA,IAWArR,EAAAoV,EAAAjN,EAAAkN,EAVAtC,EADAnyB,KACAuqB,MACA/E,EAFAxlB,KAEA0D,OAAA8hB,IACAkP,EAAAvC,EAAAuC,SAEAC,EALA30B,KAKA40B,UAAA/b,QAGAuQ,EAAAN,GAAAO,OACAwL,EAAAzL,EAAAoH,SAAAyD,KACAa,GAAA,EAuBA,IAjCA90B,KAaA+0B,OAAAJ,EAAA/3B,QACA+3B,EAAA9H,KAAA8H,EAAA,IAGAnP,EAAA2B,OAEA3B,EAAAwP,QAAA7C,EAAA+B,gBAAAW,EAAAX,eAEA1O,EAAAyP,aACAzP,EAAAyP,YAAA9C,EAAAgC,YAAAU,EAAAV,YAGA3O,EAAA0P,eAAAlB,GAAA7B,EAAAiC,iBAAAS,EAAAT,kBACA5O,EAAAsO,SAAA3B,EAAAkC,iBAAAQ,EAAAR,gBACA7O,EAAAqO,UAAAG,GAAA7B,EAAAnB,YAAA6D,EAAA7D,aACAxL,EAAAuO,YAAA5B,EAAApB,aAAA3H,EAAAb,aAEA/C,EAAAiB,YACAqO,GAAA,EAEA1V,EAAA,EAAqBA,EAAAuV,EAAA/3B,SAAuBwiB,EAC5CoV,EAAAG,EAAAvV,GACAmI,EAAAyC,GAAAmL,aAAAR,EAAAvV,GACAqV,EAAAD,EAAAjK,MAEA,IAAAnL,EACAqV,EAAAW,OACA5P,EAAAO,OAAA0O,EAAApnB,EAAAonB,EAAAnnB,GACAwnB,EAAA1V,IAGAmI,GAAA,IAAAuN,EAAAvN,EAAAoN,EAAAG,GAEAL,EAAAW,OACAN,IAAA1V,EAAA,IAAAsV,IAAA,IAAAI,EAEAtP,EAAAO,OAAA0O,EAAApnB,EAAAonB,EAAAnnB,GAGA0c,GAAArmB,OAAA+iB,OAAAlB,EAAA+B,EAAAgD,MAAAiK,EAAAjK,OAGAuK,EAAA1V,IAKAoG,EAAAqB,SACArB,EAAA8B,aAGA+N,GAAArL,GAAA5J,eACAkV,GAAAxM,GAAAO,OAAAd,aAkBA,SAAAgN,GAAArD,GACA,IAAAC,EAAAnyB,KAAAuqB,MACA,QAAA4H,GAAAruB,KAAA0xB,IAAAtD,EAAAC,EAAA9kB,GAAA8kB,EAAAvM,OAAAuM,EAAAsD,UAlBA3M,GAAAT,KAAA,UACAmI,SAAA,CACAxJ,MAAA,CACApB,OAAA,EACA8P,WAAA,SACA7vB,gBAAAyvB,GACAvE,YAAAuE,GACAtE,YAAA,EAEAyE,UAAA,EACArD,YAAA,EACAjB,iBAAA,MAeA,IAAAwE,GAAApK,GAAAzJ,OAAA,CACAuQ,QAAA,SAAAH,EAAA0D,GACA,IAAAzD,EAAAnyB,KAAAuqB,MACA,QAAA4H,GAAAruB,KAAAsJ,IAAA8kB,EAAAC,EAAA9kB,EAAA,GAAAvJ,KAAAsJ,IAAAwoB,EAAAzD,EAAA7kB,EAAA,GAAAxJ,KAAAsJ,IAAA+kB,EAAAsD,UAAAtD,EAAAvM,OAAA,IAEAqM,aAAAsD,GACAM,SAAAN,GACAO,SAZA,SAAAF,GACA,IAAAzD,EAAAnyB,KAAAuqB,MACA,QAAA4H,GAAAruB,KAAA0xB,IAAAI,EAAAzD,EAAA7kB,GAAA6kB,EAAAvM,OAAAuM,EAAAsD,WAWAvC,eAAA,WACA,IAAAf,EAAAnyB,KAAAuqB,MACA,OACAld,EAAA8kB,EAAA9kB,EACAC,EAAA6kB,EAAA7kB,IAGA+lB,QAAA,WACA,OAAAvvB,KAAAgL,GAAAhL,KAAAsJ,IAAApN,KAAAuqB,MAAA3E,OAAA,IAEAwF,gBAAA,WACA,IAAA+G,EAAAnyB,KAAAuqB,MACA,OACAld,EAAA8kB,EAAA9kB,EACAC,EAAA6kB,EAAA7kB,EACAyoB,QAAA5D,EAAAvM,OAAAuM,EAAAnB,cAGAP,KAAA,SAAAuF,GACA,IAAA7D,EAAAnyB,KAAAuqB,MACA/E,EAAAxlB,KAAA0D,OAAA8hB,IACAkQ,EAAAvD,EAAAuD,WACAtP,EAAA+L,EAAA/L,SACAR,EAAAuM,EAAAvM,OACAvY,EAAA8kB,EAAA9kB,EACAC,EAAA6kB,EAAA7kB,EACA8b,EAAAN,GAAAO,OACAd,EAAAa,EAAAb,aAEA4J,EAAAiD,YAKA9yB,IAAA0zB,GAAAhM,GAAArmB,OAAAojB,eAAAoL,EAAA6D,MACAxQ,EAAAuO,YAAA5B,EAAApB,aAAAxI,EACA/C,EAAAqO,UAAAwB,GAAAlD,EAAAnB,YAAA5H,EAAAoH,SAAAxJ,MAAAgK,aACAxL,EAAAoO,UAAAzB,EAAAtsB,iBAAA0iB,EACAyB,GAAArmB,OAAAwiB,UAAAX,EAAAkQ,EAAA9P,EAAAvY,EAAAC,EAAA8Y,OAIA6P,GAAAnN,GAAAO,OAAAd,aAaA,SAAA2N,GAAA/D,GACA,OAAAA,QAAA7vB,IAAA6vB,EAAArrB,MAUA,SAAAqvB,GAAAhE,GACA,IAAAiE,EAAAC,EAAAC,EAAA3nB,EAAA4nB,EAgBA,OAdAL,GAAA/D,IACAoE,EAAApE,EAAArrB,MAAA,EACAsvB,EAAAjE,EAAA9kB,EAAAkpB,EACAF,EAAAlE,EAAA9kB,EAAAkpB,EACAD,EAAAxyB,KAAA8I,IAAAulB,EAAA7kB,EAAA6kB,EAAA/B,MACAzhB,EAAA7K,KAAA+I,IAAAslB,EAAA7kB,EAAA6kB,EAAA/B,QAEAmG,EAAApE,EAAAzM,OAAA,EACA0Q,EAAAtyB,KAAA8I,IAAAulB,EAAA9kB,EAAA8kB,EAAA/B,MACAiG,EAAAvyB,KAAA+I,IAAAslB,EAAA9kB,EAAA8kB,EAAA/B,MACAkG,EAAAnE,EAAA7kB,EAAAipB,EACA5nB,EAAAwjB,EAAA7kB,EAAAipB,GAGA,CACAxvB,KAAAqvB,EACApvB,IAAAsvB,EACAzQ,MAAAwQ,EACAvQ,OAAAnX,GAIA,SAAA6nB,GAAAC,EAAAtV,EAAAuV,GACA,OAAAD,IAAAtV,EAAAuV,EAAAD,IAAAC,EAAAvV,EAAAsV,EAuBA,SAAAE,GAAAxE,EAAAyE,EAAAC,GACA,IAEA3oB,EAAAzB,EAAAE,EAAAxC,EAFAjO,EAAAi2B,EAAAnB,YACAoE,EAtBA,SAAAjD,GACA,IAAA2E,EAAA3E,EAAA4E,cACA1G,EAAA,GAEA,OAAAyG,GAIA3E,EAAA6E,WACA7E,EAAA/B,KAAA+B,EAAA9kB,IACAypB,EAAAN,GAAAM,EAAA,iBAEK3E,EAAA/B,KAAA+B,EAAA7kB,IACLwpB,EAAAN,GAAAM,EAAA,iBAGAzG,EAAAyG,IAAA,EACAzG,GAZAA,EAiBA4G,CAAA9E,GAYA,OATAnI,GAAAlK,SAAA5jB,IACAgS,GAAAhS,EAAA8K,KAAA,EACAyF,GAAAvQ,EAAA2pB,OAAA,EACAlZ,GAAAzQ,EAAA4pB,QAAA,EACA3b,GAAAjO,EAAA6K,MAAA,GAEAmH,EAAAzB,EAAAE,EAAAxC,GAAAjO,GAAA,EAGA,CACAgS,EAAAknB,EAAApuB,KAAAkH,EAAA,IAAAA,EAAA2oB,IAAA3oB,EACAzB,EAAA2oB,EAAAvP,OAAApZ,EAAA,IAAAA,EAAAmqB,IAAAnqB,EACAE,EAAAyoB,EAAAtP,QAAAnZ,EAAA,IAAAA,EAAAkqB,IAAAlqB,EACAxC,EAAAirB,EAAAruB,MAAAoD,EAAA,IAAAA,EAAAysB,IAAAzsB,GAyBA,SAAA+sB,GAAA/E,EAAA9kB,EAAAC,GACA,IAAA6pB,EAAA,OAAA9pB,EACA+pB,EAAA,OAAA9pB,EACA+pB,KAAAlF,GAAAgF,GAAAC,IAAAjB,GAAAhE,GACA,OAAAkF,IAAAF,GAAA9pB,GAAAgqB,EAAAtwB,MAAAsG,GAAAgqB,EAAAxR,SAAAuR,GAAA9pB,GAAA+pB,EAAArwB,KAAAsG,GAAA+pB,EAAAvR,QAtHAgD,GAAAT,KAAA,UACAmI,SAAA,CACA8G,UAAA,CACAzxB,gBAAAowB,GACAlF,YAAAkF,GACAc,cAAA,SACA/F,YAAA,MAmHA,IAAAuG,GAAAhM,GAAAzJ,OAAA,CACA2O,KAAA,WACA,IAAAjL,EAAAxlB,KAAA0D,OAAA8hB,IACA2M,EAAAnyB,KAAAuqB,MACAiN,EAhCA,SAAArF,GACA,IAAAkF,EAAAlB,GAAAhE,GACArrB,EAAAuwB,EAAAxR,MAAAwR,EAAAtwB,KACA2e,EAAA2R,EAAAvR,OAAAuR,EAAArwB,IACAywB,EAAAd,GAAAxE,EAAArrB,EAAA,EAAA4e,EAAA,GACA,OACAgS,MAAA,CACArqB,EAAAgqB,EAAAtwB,KACAuG,EAAA+pB,EAAArwB,IACA+F,EAAAjG,EACAmD,EAAAyb,GAEAiS,MAAA,CACAtqB,EAAAgqB,EAAAtwB,KAAA0wB,EAAAttB,EACAmD,EAAA+pB,EAAArwB,IAAAywB,EAAAvpB,EACAnB,EAAAjG,EAAA2wB,EAAAttB,EAAAstB,EAAAhrB,EACAxC,EAAAyb,EAAA+R,EAAAvpB,EAAAupB,EAAA9qB,IAgBAirB,CAAAzF,GACAuF,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MACAnS,EAAAoO,UAAAzB,EAAAtsB,gBACA2f,EAAAqS,SAAAH,EAAArqB,EAAAqqB,EAAApqB,EAAAoqB,EAAA3qB,EAAA2qB,EAAAztB,GAEAytB,EAAA3qB,IAAA4qB,EAAA5qB,GAAA2qB,EAAAztB,IAAA0tB,EAAA1tB,IAIAub,EAAA2B,OACA3B,EAAAiB,YACAjB,EAAAU,KAAAwR,EAAArqB,EAAAqqB,EAAApqB,EAAAoqB,EAAA3qB,EAAA2qB,EAAAztB,GACAub,EAAA4B,OACA5B,EAAAoO,UAAAzB,EAAApB,YACAvL,EAAAU,KAAAyR,EAAAtqB,EAAAsqB,EAAArqB,EAAAqqB,EAAA5qB,EAAA4qB,EAAA1tB,GACAub,EAAAoB,KAAA,WACApB,EAAA8B,YAEA5B,OAAA,WACA,IAAAyM,EAAAnyB,KAAAuqB,MACA,OAAA4H,EAAA/B,KAAA+B,EAAA7kB,GAEA+kB,QAAA,SAAAH,EAAA0D,GACA,OAAAsB,GAAAl3B,KAAAuqB,MAAA2H,EAAA0D,IAEA3D,aAAA,SAAAC,EAAA0D,GACA,IAAAzD,EAAAnyB,KAAAuqB,MACA,OAAA2L,GAAA/D,GAAA+E,GAAA/E,EAAAD,EAAA,MAAAgF,GAAA/E,EAAA,KAAAyD,IAEAC,SAAA,SAAA3D,GACA,OAAAgF,GAAAl3B,KAAAuqB,MAAA2H,EAAA,OAEA4D,SAAA,SAAAF,GACA,OAAAsB,GAAAl3B,KAAAuqB,MAAA,KAAAqL,IAEA1C,eAAA,WACA,IACA7lB,EAAAC,EADA6kB,EAAAnyB,KAAAuqB,MAWA,OARA2L,GAAA/D,IACA9kB,EAAA8kB,EAAA9kB,EACAC,GAAA6kB,EAAA7kB,EAAA6kB,EAAA/B,MAAA,IAEA/iB,GAAA8kB,EAAA9kB,EAAA8kB,EAAA/B,MAAA,EACA9iB,EAAA6kB,EAAA7kB,GAGA,CACAD,IACAC,MAGA+lB,QAAA,WACA,IAAAlB,EAAAnyB,KAAAuqB,MACA,OAAA2L,GAAA/D,KAAArrB,MAAAhD,KAAA0xB,IAAArD,EAAA7kB,EAAA6kB,EAAA/B,MAAA+B,EAAAzM,OAAA5hB,KAAA0xB,IAAArD,EAAA9kB,EAAA8kB,EAAA/B,OAEAhF,gBAAA,WACA,IAAA+G,EAAAnyB,KAAAuqB,MACA,OACAld,EAAA8kB,EAAA9kB,EACAC,EAAA6kB,EAAA7kB,MAIAkjB,GAAA,GACAsH,GAAA9F,GACA+F,GAAAxD,GACAyD,GAAArC,GACAsC,GAAAV,GACA/G,GAAAsH,OACAtH,GAAAuH,QACAvH,GAAAwH,SACAxH,GAAAyH,aACA,IAAAC,GAAAlO,GAAA1I,QAAAuI,QAEAf,GAAAT,KAAA,OACAtgB,MAAA,CACAowB,KAAA,SAEA3J,OAAA,CACAC,MAAA,EACAhwB,KAAA,WACA25B,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,KAGA7J,MAAA,EACAlwB,KAAA,cA8FA,IAAAg6B,GAAA3G,GAAAhQ,OAAA,CACAiM,gBAAAyC,GAAAyH,UACA7N,WAAA,WACA,IACA+D,EACA2D,GAAAzxB,UAAA+pB,WAAAlK,MAFAlgB,KAEArD,YACAwxB,EAHAnuB,KAGAouB,WACAsK,MAJA14B,KAIAsuB,aAAAoK,MACAvK,EAAAwK,KAAA,GAEArJ,OAAA,SAAAD,GACA,IAEA3yB,EAAAukB,EADAuW,EADAx3B,KACAouB,UAAAQ,KAIA,IALA5uB,KAGA44B,OAHA54B,KAGA64B,WAEAn8B,EAAA,EAAAukB,EAAAuW,EAAA56B,OAAsCF,EAAAukB,IAAUvkB,EALhDsD,KAMAgwB,cAAAwH,EAAA96B,KAAA2yB,IAGAW,cAAA,SAAAsH,EAAAlY,EAAAiQ,GACA,IAAAnN,EAAAliB,KACAmuB,EAAAjM,EAAAkM,UACAC,EAAAnM,EAAAoM,aAEAhN,EAAAY,EAAA4W,uBAAAxB,EAAAlY,GAEAkY,EAAAyB,QAAA7W,EAAA6M,cAAAZ,EAAAI,SACA+I,EAAA0B,QAAA9W,EAAA6M,cAAAZ,EAAAO,SACA4I,EAAA5H,cAAAxN,EAAA9C,MACAkY,EAAA1H,OAAAxQ,EACAkY,EAAA9M,OAAA,CACA3kB,gBAAAyb,EAAAzb,gBACAkrB,YAAAzP,EAAAyP,YACAgG,cAAAzV,EAAAyV,cACA/F,YAAA1P,EAAA0P,YACAiI,aAAA5K,EAAA6K,MACAA,MAAAhX,EAAAqD,MAAAqJ,KAAAuK,OAAA/Z,IAGA8C,EAAAkX,uBAAA9B,EAAAlY,EAAAiQ,GAEAiI,EAAAhN,SAMA8O,uBAAA,SAAA9B,EAAAlY,EAAAiQ,GACA,IAAAnN,EAAAliB,KACA4qB,EAAA0M,EAAA9M,OAEA6O,EAAAnX,EAAAiN,iBAEAiB,EAAAiJ,EAAAC,eACAtC,EAAAqC,EAAAE,eACAC,EAAAtX,EAAA0W,QAAA1W,EAAA2W,WACAY,EAAAvX,EAAAwX,wBAAAxX,EAAA9C,SACAua,EAAAzX,EAAA0X,wBAAA1X,EAAA9C,QAAAoa,GACA5O,EAAAoM,aACApM,EAAAwF,KAAAf,EAAAe,EAAAqJ,EAAArJ,KACAxF,EAAAvd,EAAA2pB,EAAA3H,EAAAe,EAAAqJ,EAAAI,KAAAF,EAAAG,OACAlP,EAAAtd,EAAA0pB,EAAA2C,EAAAG,OAAAzK,EAAAe,EAAAqJ,EAAAI,KACAjP,EAAAlF,OAAAsR,EAAA2C,EAAAh7B,UAAA2D,EACAsoB,EAAA9jB,MAAAkwB,OAAA10B,EAAAq3B,EAAAh7B,MASAo7B,WAAA,SAAAC,GACA,IAQAt9B,EAAAyxB,EAPA5I,EADAvlB,KACAulB,MAEAlK,EAHArb,KAGAovB,iBAEA6K,EAAA5e,EAAAiG,QAAA2Y,QACAhZ,OAAA3e,IAAA03B,EAAAzU,EAAAqJ,KAAAC,SAAAjyB,OAAAo9B,EAAA,EACAE,EAAA,GAGA,IAAAx9B,EAAA,EAAiBA,EAAAukB,IAAUvkB,GAC3ByxB,EAAA5I,EAAAuJ,eAAApyB,IAEAi8B,KAAApT,EAAA4U,iBAAAz9B,MAAA,IAAAu9B,IAAA,IAAAA,IAAA,IAAAC,EAAAt5B,QAAAutB,EAAAuK,aAAAp2B,IAAA23B,SAAA33B,IAAA6rB,EAAAuK,QAAA,IAAAwB,EAAAt5B,QAAAutB,EAAAuK,UACAwB,EAAArN,KAAAsB,EAAAuK,OAIA,OAAAwB,GAOAE,cAAA,WACA,OAAAp6B,KAAA+5B,aAAAn9B,QAUAy9B,cAAA,SAAAxM,EAAAnS,GACA,IAAAwe,EAAAl6B,KAAA+5B,WAAAlM,GAEAzO,OAAA9c,IAAAoZ,EAAAwe,EAAAt5B,QAAA8a,IAAA,EAEA,WAAA0D,EAAA8a,EAAAt9B,OAAA,EAAAwiB,GAMAyZ,SAAA,WACA,IAUAn8B,EAAAukB,EARA5F,EAFArb,KAEAovB,iBAEAkL,EAJAt6B,KAIAo6B,gBACAvM,EALA7tB,KAKAof,MACAma,EAAAle,EAAAke,eACA1O,EAAA0O,EAAAle,EAAAtU,KAAAsU,EAAArU,IACAuzB,EAAA1P,GAAA0O,EAAAle,EAAAvU,MAAAuU,EAAAqK,QACA8U,EAAA,GAGA,IAAA99B,EAAA,EAAAukB,EAZAjhB,KAYAouB,UAAAQ,KAAAhyB,OAAkDF,EAAAukB,IAAUvkB,EAC5D89B,EAAA3N,KAAAxR,EAAAof,iBAAA,KAAA/9B,EAAAmxB,IAIA,OACAjhB,IAFAod,GAAArK,cAAAtE,EAAAiG,QAAAoZ,cA9NA,SAAArf,EAAAmf,GACA,IAEAG,EAAAC,EAAAl+B,EAAAukB,EAFArU,EAAAyO,EAAAke,eAAAle,EAAAvU,MAAAuU,EAAAqK,OACAmV,EAAAxf,EAAAyf,WAGA,IAAAp+B,EAAA,EAAAukB,EAAAuZ,EAAA59B,OAAqCF,EAAAukB,IAAUvkB,EAC/CkQ,EAAA9I,KAAA8I,MAAA9I,KAAA0xB,IAAAgF,EAAA99B,GAAA89B,EAAA99B,EAAA,KAGA,IAAAA,EAAA,EAAAukB,EAAA4Z,EAAAj+B,OAAoCF,EAAAukB,IAAUvkB,EAC9Ck+B,EAAAvf,EAAA0f,gBAAAr+B,GACAkQ,EAAAlQ,EAAA,EAAAoH,KAAA8I,MAAAguB,EAAAD,GAAA/tB,EACA+tB,EAAAC,EAGA,OAAAhuB,EA+MAouB,CAAA3f,EAAAmf,IAAA,EAGAA,SACA3P,QACA0P,MACAD,aACAjf,UAQAqe,wBAAA,SAAA7L,EAAAzO,GACA,IAaA1iB,EAAAu+B,EAAAC,EAAA9K,EAAAyJ,EAAAl7B,EAZA4mB,EADAvlB,KACAulB,MACA4I,EAFAnuB,KAEAouB,UAEA/S,EAJArb,KAIAmvB,iBAEAoK,EAAAle,EAAAke,eACA1K,EAAAtJ,EAAAqJ,KAAAC,SACA3yB,GAAAmf,EAAA8f,cAAAtM,EAAAhB,GAAAe,KAAAxP,IACAgc,EAAA/f,EAAAiG,QAAA8Z,aACAnB,EAAA5e,EAAAiG,QAAA2Y,QACAvB,EAAAvK,EAAAuK,MACA7N,EAAA,EAGA,GAAAoP,QAAA33B,IAAA23B,QAAA33B,IAAAo2B,EACA,IAAAh8B,EAAA,EAAmBA,EAAAmxB,IAAkBnxB,GACrCu+B,EAAA1V,EAAAuJ,eAAApyB,IAEAi8B,KAAAsC,EAAAvC,WAAAuC,EAAAI,WAAApM,qBAAA5T,EAAAzX,IAAA2hB,EAAA4U,iBAAAz9B,KACAw+B,GAAA7f,EAAA8f,cAAAtM,EAAAnyB,GAAAkyB,KAAAxP,KAEAljB,EAAA,GAAAg/B,EAAA,GAAAh/B,GAAA,GAAAg/B,EAAA,KACArQ,GAAAqQ,IAoBA,OAdA9K,EAAA/U,EAAAof,iBAAA5P,GACAgP,EAAAxe,EAAAof,iBAAA5P,EAAA3uB,GACAyC,EAAAk7B,EAAAzJ,OAEA9tB,IAAA84B,GAAAt3B,KAAA0xB,IAAA72B,GAAAy8B,IACAz8B,EAAAy8B,EAGAvB,EADA39B,GAAA,IAAAq9B,GAAAr9B,EAAA,GAAAq9B,EACAnJ,EAAAgL,EAEAhL,EAAAgL,GAIA,CACAz8B,OACAyxB,OACAyJ,OACAC,OAAAD,EAAAl7B,EAAA,IAOAi7B,wBAAA,SAAA/L,EAAAzO,EAAAoa,GACA,IACAlY,EAAAkY,EAAAne,MAAAiG,QACAga,EAAA,SAAAha,EAAAoZ,aA/OA,SAAAtb,EAAAoa,EAAAlY,GACA,IAKAuJ,EALA2P,EAAAhB,EAAAgB,OACAI,EAAAJ,EAAApb,GACAub,EAAAvb,EAAA,EAAAob,EAAApb,EAAA,QACAmc,EAAAnc,EAAAob,EAAA59B,OAAA,EAAA49B,EAAApb,EAAA,QACAoc,EAAAla,EAAA8W,mBAgBA,OAbA,OAAAuC,IAGAA,EAAAC,GAAA,OAAAW,EAAA/B,EAAAe,IAAAf,EAAA3O,MAAA0Q,EAAAX,IAGA,OAAAW,IAEAA,EAAAX,IAAAD,GAGA9P,EAAA+P,KAAA92B,KAAA8I,IAAA+tB,EAAAY,IAAA,EAAAC,EAEA,CACAC,MAFA33B,KAAA0xB,IAAA+F,EAAAZ,GAAA,EAAAa,EAEAhC,EAAAc,WACAhsB,MAAAgT,EAAA+W,cACAxN,SAuNA6Q,CAAAtc,EAAAoa,EAAAlY,GA9QA,SAAAlC,EAAAoa,EAAAlY,GACA,IAGA3iB,EAAA2P,EAHAqtB,EAAAra,EAAAoZ,aACAnJ,EAAAiI,EAAAc,WACAM,EAAApB,EAAAgB,OAAApb,GAcA,OAXA4K,GAAArK,cAAAgc,IACAh9B,EAAA66B,EAAA5sB,IAAA0U,EAAA8W,mBACA9pB,EAAAgT,EAAA+W,gBAKA15B,EAAAg9B,EAAApK,EACAjjB,EAAA,GAGA,CACAmtB,MAAA98B,EAAA4yB,EACAjjB,QACAuc,MAAA+P,EAAAj8B,EAAA,GA0PAi9B,CAAAxc,EAAAoa,EAAAlY,GACAua,EAHA77B,KAGAq6B,cAAAxM,EAHA7tB,KAGAouB,UAAAsK,OACAoB,EAAAwB,EAAAzQ,MAAAyQ,EAAAG,MAAAI,EAAAP,EAAAG,MAAA,EACA98B,EAAAmF,KAAA8I,IAAAod,GAAA5J,eAAAkB,EAAAwa,gBAAAC,KAAAT,EAAAG,MAAAH,EAAAhtB,OACA,OACA8hB,KAAA0J,EAAAn7B,EAAA,EACAk7B,KAAAC,EAAAn7B,EAAA,EACAm7B,SACAn7B,SAGA8xB,KAAA,WACA,IACAlL,EADAvlB,KACAulB,MAEAlK,EAHArb,KAGAmvB,iBAEAqI,EALAx3B,KAKAouB,UAAAQ,KACAP,EANAruB,KAMAsuB,aACArN,EAAAuW,EAAA56B,OACAF,EAAA,EAGA,IAFAstB,GAAArmB,OAAAujB,SAAA3B,EAAAC,IAAAD,EAAAyQ,WAEYt5B,EAAAukB,IAAUvkB,EACtB4e,MAAAD,EAAA8f,cAAA9M,EAAAO,KAAAlyB,MACA86B,EAAA96B,GAAA+zB,OAIAzG,GAAArmB,OAAA0jB,WAAA9B,EAAAC,MAMAsT,uBAAA,SAAAxB,EAAAlY,GACA,IAOA1iB,EAAAukB,EAAAhlB,EANAspB,EADAvlB,KACAulB,MACAsJ,EAAAtJ,EAAAqJ,KAAAC,SACAR,EAAAQ,EAHA7uB,KAGAof,OACAyR,EAAAyG,EAAAzG,QAAA,GACAvP,EAAAiE,EAAAjE,QAAAkP,SAAA8G,UACAhe,EAAA,GAGAyQ,EAAA,CACAxE,QACAyW,UAAA5c,EACAiP,UACAR,aAbA7tB,KAaAof,OAEAriB,EAAA,gEAEA,IAAAL,EAAA,EAAAukB,EAAAlkB,EAAAH,OAAqCF,EAAAukB,IAAUvkB,EAE/C4c,EADArd,EAAAc,EAAAL,IACAw7B,GAAA,CAAArH,EAAA50B,GAAAoyB,EAAApyB,GAAAqlB,EAAArlB,IAAA8tB,EAAA3K,GAGA,OAAA9F,KAGA2iB,GAAAjS,GAAA5J,eACA8b,GAAAlS,GAAA1I,QAAAuI,QAEAf,GAAAT,KAAA,UACAtgB,MAAA,CACAowB,KAAA,UAEA3J,OAAA,CACAC,MAAA,EACAhwB,KAAA,SAEA0H,SAAA,SACAvC,GAAA,aAGA+qB,MAAA,EACAlwB,KAAA,SACA0H,SAAA,OACAvC,GAAA,cAGAu4B,SAAA,CACAC,UAAA,CACAr3B,MAAA,WAEA,UAEAm0B,MAAA,SAAA5zB,EAAAspB,GACA,IAAAqK,EAAArK,EAAAC,SAAAvpB,EAAAuoB,cAAAqL,OAAA,GACAmD,EAAAzN,EAAAC,SAAAvpB,EAAAuoB,cAAAe,KAAAtpB,EAAA8Z,OACA,OAAA6Z,EAAA,MAAA3zB,EAAAg3B,OAAA,KAAAh3B,EAAAi3B,OAAA,KAAAF,EAAA5vB,EAAA,SAMA,IAAA+vB,GAAA1K,GAAAhQ,OAAA,CAIAiM,gBAAAyC,GAAAwH,MAKA1I,OAAA,SAAAD,GACA,IAAAnN,EAAAliB,KACAmuB,EAAAjM,EAAAkM,UACAuG,EAAAxG,EAAAS,KAEA5E,GAAAtJ,KAAAiU,EAAA,SAAA3N,EAAA5H,GACA8C,EAAA8N,cAAAhJ,EAAA5H,EAAAiQ,MAOAW,cAAA,SAAAhJ,EAAA5H,EAAAiQ,GACA,IAAAnN,EAAAliB,KACAmuB,EAAAjM,EAAAkM,UACAyC,EAAA7J,EAAA6J,QAAA,GACA4L,EAAAva,EAAA6M,cAAAZ,EAAAI,SACAmO,EAAAxa,EAAA6M,cAAAZ,EAAAO,SAEApN,EAAAY,EAAA4W,uBAAA9R,EAAA5H,GAEAwP,EAAA1M,EAAAoM,aAAAM,KAAAxP,GACAud,EAAAza,EAAA9C,MACA/R,EAAAgiB,EAAAoN,EAAAG,mBAAA,IAAAH,EAAAhC,iBAAA,kBAAA7L,IAAAiO,IAAAzd,EAAAud,GACArvB,EAAA+hB,EAAAqN,EAAApD,eAAAoD,EAAAjC,iBAAA7L,EAAAxP,EAAAud,GACA3V,EAAA+R,QAAA0D,EACAzV,EAAAgS,QAAA0D,EACA1V,EAAA8V,SAAAxb,EACA0F,EAAA0I,cAAAiN,EACA3V,EAAA4I,OAAAxQ,EACA4H,EAAAwD,OAAA,CACA3kB,gBAAAyb,EAAAzb,gBACAkrB,YAAAzP,EAAAyP,YACAC,YAAA1P,EAAA0P,YACAyE,UAAAnU,EAAAmU,UACAC,WAAApU,EAAAoU,WACAtP,SAAA9E,EAAA8E,SACAR,OAAAyJ,EAAA,EAAA/N,EAAAsE,OACAwP,KAAAvE,EAAAuE,MAAA9Z,MAAAjO,IAAAiO,MAAAhO,GACAD,IACAC,KAEA0Z,EAAAsD,SAMAsG,cAAA,SAAA5J,GACA,IAAA4D,EAAA5D,EAAAwD,OACAlJ,EAAA0F,EAAA8V,SACAhM,EAAA9G,GAAA8G,cACA9J,EAAA2J,eAAA,CACA9qB,gBAAA+kB,EAAA/kB,gBACAkrB,YAAAnG,EAAAmG,YACAC,YAAApG,EAAAoG,YACApL,OAAAgF,EAAAhF,QAEAgF,EAAA/kB,gBAAAo2B,GAAA3a,EAAA2P,qBAAAH,EAAAxP,EAAAzb,kBACA+kB,EAAAmG,YAAAkL,GAAA3a,EAAA4P,iBAAAJ,EAAAxP,EAAAyP,cACAnG,EAAAoG,YAAAiL,GAAA3a,EAAA6P,iBAAA7P,EAAA0P,aACApG,EAAAhF,OAAAtE,EAAAsE,OAAAtE,EAAA8Q,aAMA0G,uBAAA,SAAA9R,EAAA5H,GACA,IAQA1iB,EAAAukB,EAAAhlB,EAPAspB,EADAvlB,KACAulB,MACAsJ,EAAAtJ,EAAAqJ,KAAAC,SACAR,EAAAQ,EAHA7uB,KAGAof,OACAyR,EAAA7J,EAAA6J,QAAA,GACAvP,EAAAiE,EAAAjE,QAAAkP,SAAAxJ,MACA4H,EAAAP,EAAAO,KAAAxP,GACA9F,EAAA,GAGAyQ,EAAA,CACAxE,QACAyW,UAAA5c,EACAiP,UACAR,aAdA7tB,KAcAof,OAEAriB,EAAA,+JAEA,IAAAL,EAAA,EAAAukB,EAAAlkB,EAAAH,OAAqCF,EAAAukB,IAAUvkB,EAE/C4c,EADArd,EAAAc,EAAAL,IACAw/B,GAAA,CAAArL,EAAA50B,GAAAoyB,EAAApyB,GAAAqlB,EAAArlB,IAAA8tB,EAAA3K,GAKA,OADA9F,EAAAsM,OAAAsW,GAAA,CAAArL,EAAAjL,OAAAgJ,IAAAniB,OAAAnK,EAAA+rB,EAAAzI,OAAAtE,EAAAsE,QAAAmE,EAAA3K,GACA9F,KAGAyjB,GAAA/S,GAAA1I,QAAAuI,QACAmT,GAAAhT,GAAA5J,eAEA0I,GAAAT,KAAA,YACA2D,UAAA,CAEAiR,eAAA,EAEAC,cAAA,GAEAn1B,MAAA,CACAowB,KAAA,UAEAgF,eAAA,SAAA5X,GACA,IAAA6X,EAAA,GACAA,EAAAvQ,KAAA,cAAAtH,EAAA3hB,GAAA,aACA,IAAAgrB,EAAArJ,EAAAqJ,KACAC,EAAAD,EAAAC,SACAsK,EAAAvK,EAAAuK,OAEA,GAAAtK,EAAAjyB,OACA,QAAAF,EAAA,EAAuBA,EAAAmyB,EAAA,GAAAD,KAAAhyB,SAA6BF,EACpD0gC,EAAAvQ,KAAA,qCAAAgC,EAAA,GAAAhpB,gBAAAnJ,GAAA,aAEAy8B,EAAAz8B,IACA0gC,EAAAvQ,KAAAsM,EAAAz8B,IAGA0gC,EAAAvQ,KAAA,SAKA,OADAuQ,EAAAvQ,KAAA,SACAuQ,EAAAC,KAAA,KAEAC,OAAA,CACAnE,OAAA,CACAoE,eAAA,SAAAhY,GACA,IAAAqJ,EAAArJ,EAAAqJ,KAEA,OAAAA,EAAAuK,OAAAv8B,QAAAgyB,EAAAC,SAAAjyB,OACAgyB,EAAAuK,OAAA9zB,IAAA,SAAA6zB,EAAAx8B,GACA,IAAAyxB,EAAA5I,EAAAuJ,eAAA,GACA0O,EAAA5O,EAAAC,SAAA,GACA7I,EAAAmI,EAAAS,KAAAlyB,GACAm0B,EAAA7K,KAAA6K,QAAA,GACA4M,EAAAlY,EAAAjE,QAAAkP,SAAAxK,IACAY,EAAAmW,GAAA,CAAAlM,EAAAhrB,gBAAA23B,EAAA33B,gBAAA43B,EAAA53B,sBAAAvD,EAAA5F,GACAmqB,EAAAkW,GAAA,CAAAlM,EAAAE,YAAAyM,EAAAzM,YAAA0M,EAAA1M,kBAAAzuB,EAAA5F,GACAghC,EAAAX,GAAA,CAAAlM,EAAAG,YAAAwM,EAAAxM,YAAAyM,EAAAzM,kBAAA1uB,EAAA5F,GACA,OACA0gC,KAAAlE,EACAtF,UAAAhN,EACAmN,YAAAlN,EACAgN,UAAA6J,EACArT,OAAA/O,MAAAkiB,EAAA5O,KAAAlyB,KAAAyxB,EAAAS,KAAAlyB,GAAA2tB,OAEAjL,MAAA1iB,KAKA,KAGAkF,QAAA,SAAAG,EAAA47B,GACA,IAEAjhC,EAAAukB,EAAAkN,EAFA/O,EAAAue,EAAAve,MACAmG,EAAAvlB,KAAAulB,MAGA,IAAA7oB,EAAA,EAAAukB,GAAAsE,EAAAqJ,KAAAC,UAAA,IAAAjyB,OAA8DF,EAAAukB,IAAUvkB,GACxEyxB,EAAA5I,EAAAuJ,eAAApyB,IAEAkyB,KAAAxP,KACA+O,EAAAS,KAAAxP,GAAAiL,QAAA8D,EAAAS,KAAAxP,GAAAiL,QAIA9E,EAAA+J,WAIAsO,iBAAA,GAEAxX,UAAA,GAAAtiB,KAAAgL,GAEA+uB,cAAA,EAAA/5B,KAAAgL,GAEAqtB,SAAA,CACAC,UAAA,CACAr3B,MAAA,WACA,UAEAm0B,MAAA,SAAA4E,EAAAlP,GACA,IAAAmP,EAAAnP,EAAAuK,OAAA2E,EAAA1e,OACAljB,EAAA,KAAA0yB,EAAAC,SAAAiP,EAAAjQ,cAAAe,KAAAkP,EAAA1e,OAWA,OATA4K,GAAApK,QAAAme,IAGAA,IAAAllB,SACA,IAAA3c,EAEA6hC,GAAA7hC,EAGA6hC,OAMA,IAAAC,GAAAlM,GAAAhQ,OAAA,CACAiM,gBAAAyC,GAAAsH,IACA9J,WAAAhE,GAAAvK,KAEAwe,aAAA,SAAApQ,GAGA,IAFA,IAAAqQ,EAAA,EAEAC,EAAA,EAAqBA,EAAAtQ,IAAkBsQ,EACvCn+B,KAAAulB,MAAA4U,iBAAAgE,MACAD,EAIA,OAAAA,GAEA5O,OAAA,SAAAD,GACA,IAkBA3yB,EAAAukB,EAlBAiB,EAAAliB,KACAulB,EAAArD,EAAAqD,MACAyQ,EAAAzQ,EAAAyQ,UACAoI,EAAA7Y,EAAAjE,QACA+c,EAAArI,EAAAnQ,MAAAmQ,EAAAjvB,KACAu3B,EAAAtI,EAAAlQ,OAAAkQ,EAAAhvB,IACAu3B,EAAAz6B,KAAA8I,IAAAyxB,EAAAC,GACAhG,EAAA,CACAjrB,EAAA,EACAC,EAAA,GAEA6gB,EAAAjM,EAAAkM,UACAoQ,EAAArQ,EAAAS,KACAgP,EAAAQ,EAAAR,iBACAC,EAAAO,EAAAP,cAEAY,EAAAvc,EAAAwc,eAAAxc,EAAA9C,OAIA,GAAAye,EAAA,EAAA/5B,KAAAgL,GAAA,CACA,IAAA8jB,EAAAwL,EAAAhY,UAAA,EAAAtiB,KAAAgL,IAEA+jB,GADAD,GAAA,EAAA9uB,KAAAgL,IAAA8jB,GAAA9uB,KAAAgL,IAAA,EAAA8jB,GAAA9uB,KAAAgL,GAAA,MACA+uB,EACAhT,EAAA,CACAxd,EAAAvJ,KAAAmL,IAAA2jB,GACAtlB,EAAAxJ,KAAAoL,IAAA0jB,IAEA2H,EAAA,CACAltB,EAAAvJ,KAAAmL,IAAA4jB,GACAvlB,EAAAxJ,KAAAoL,IAAA2jB,IAEA8L,EAAA/L,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAA9uB,KAAAgL,IAAA,EAAAhL,KAAAgL,IAAA+jB,EACA+L,EAAAhM,GAAA,GAAA9uB,KAAAgL,IAAA,GAAAhL,KAAAgL,IAAA+jB,GAAAD,GAAA,IAAA9uB,KAAAgL,IAAA,IAAAhL,KAAAgL,IAAA+jB,EACAgM,EAAAjM,IAAA9uB,KAAAgL,KAAAhL,KAAAgL,IAAA+jB,GAAAD,GAAA9uB,KAAAgL,IAAAhL,KAAAgL,IAAA+jB,EACAiM,EAAAlM,GAAA,IAAA9uB,KAAAgL,IAAA,IAAAhL,KAAAgL,IAAA+jB,GAAAD,GAAA,IAAA9uB,KAAAgL,IAAA,IAAAhL,KAAAgL,IAAA+jB,EACAkM,EAAAnB,EAAA,IACAhxB,EAAA,CACAS,EAAAwxB,GAAA,EAAA/6B,KAAA8I,IAAAie,EAAAxd,GAAAwd,EAAAxd,EAAA,IAAA0xB,GAAAxE,EAAAltB,GAAAktB,EAAAltB,EAAA,IAAA0xB,IACAzxB,EAAAwxB,GAAA,EAAAh7B,KAAA8I,IAAAie,EAAAvd,GAAAud,EAAAvd,EAAA,IAAAyxB,GAAAxE,EAAAjtB,GAAAitB,EAAAjtB,EAAA,IAAAyxB,KAEAlyB,EAAA,CACAQ,EAAAsxB,EAAA,EAAA76B,KAAA+I,IAAAge,EAAAxd,GAAAwd,EAAAxd,EAAA,IAAA0xB,GAAAxE,EAAAltB,GAAAktB,EAAAltB,EAAA,IAAA0xB,IACAzxB,EAAAsxB,EAAA,EAAA96B,KAAA+I,IAAAge,EAAAvd,GAAAud,EAAAvd,EAAA,IAAAyxB,GAAAxE,EAAAjtB,GAAAitB,EAAAjtB,EAAA,IAAAyxB,KAEApgC,EAAA,CACAmI,MAAA,IAAA+F,EAAAQ,EAAAT,EAAAS,GACAqY,OAAA,IAAA7Y,EAAAS,EAAAV,EAAAU,IAEAixB,EAAAz6B,KAAA8I,IAAAyxB,EAAA1/B,EAAAmI,MAAAw3B,EAAA3/B,EAAA+mB,QACA4S,EAAA,CACAjrB,GAAA,IAAAR,EAAAQ,EAAAT,EAAAS,GACAC,GAAA,IAAAT,EAAAS,EAAAV,EAAAU,IAIA,IAAA5Q,EAAA,EAAAukB,EAAAud,EAAA5hC,OAAqCF,EAAAukB,IAAUvkB,EAC/C8hC,EAAA9hC,GAAAogC,SAAA5a,EAAA4W,uBAAA0F,EAAA9hC,MAaA,IAVA6oB,EAAAyL,YAAA9O,EAAA8c,oBACAzZ,EAAA0N,YAAAnvB,KAAA+I,KAAA0xB,EAAAhZ,EAAAyL,aAAA,KACAzL,EAAAyN,YAAAlvB,KAAA+I,IAAA+wB,EAAArY,EAAA0N,YAAA,IAAA2K,EAAA,KACArY,EAAA0Z,cAAA1Z,EAAA0N,YAAA1N,EAAAyN,cAAA9Q,EAAAgd,iCAAA,GACA3Z,EAAA4Z,QAAA7G,EAAAjrB,EAAAkY,EAAA0N,YACA1N,EAAA6Z,QAAA9G,EAAAhrB,EAAAiY,EAAA0N,YACA9E,EAAAkR,MAAAnd,EAAAod,iBACApd,EAAA+Q,YAAA1N,EAAA0N,YAAA1N,EAAA0Z,aAAA/c,EAAAqd,qBAAArd,EAAA9C,OACA8C,EAAA8Q,YAAAlvB,KAAA+I,IAAAqV,EAAA+Q,YAAA1N,EAAA0Z,aAAAR,EAAA,GAEA/hC,EAAA,EAAAukB,EAAAud,EAAA5hC,OAAqCF,EAAAukB,IAAUvkB,EAC/CwlB,EAAA8N,cAAAwO,EAAA9hC,KAAA2yB,IAGAW,cAAA,SAAAhK,EAAA5G,EAAAiQ,GACA,IAAAnN,EAAAliB,KACAulB,EAAArD,EAAAqD,MACAyQ,EAAAzQ,EAAAyQ,UACAoI,EAAA7Y,EAAAjE,QACAke,EAAApB,EAAApS,UACAyT,GAAAzJ,EAAAjvB,KAAAivB,EAAAnQ,OAAA,EACA6Z,GAAA1J,EAAAhvB,IAAAgvB,EAAAlQ,QAAA,EACA8M,EAAAwL,EAAAhY,SAEAyM,EAAAuL,EAAAhY,SAEAiI,EAAAnM,EAAAoM,aACAuP,EAAAxO,GAAAmQ,EAAAvC,cAAA,EAAAjX,EAAAqE,OAAA,EAAAnI,EAAAyd,uBAAAtR,EAAAO,KAAAxP,KAAAgf,EAAAP,eAAA,EAAA/5B,KAAAgL,KACAkkB,EAAA3D,GAAAmQ,EAAAtC,aAAA,EAAAhb,EAAA8Q,YACAC,EAAA5D,GAAAmQ,EAAAtC,aAAA,EAAAhb,EAAA+Q,YACA3R,EAAA0E,EAAA8W,UAAA,GACA9S,GAAAlI,OAAAkE,EAAA,CAEA0J,cAAAxN,EAAA9C,MACAwQ,OAAAxQ,EAEAoL,OAAA,CACA3kB,gBAAAyb,EAAAzb,gBACAkrB,YAAAzP,EAAAyP,YACAC,YAAA1P,EAAA0P,YACAe,YAAAzQ,EAAAyQ,YACA1kB,EAAAoyB,EAAAla,EAAA4Z,QACA7xB,EAAAoyB,EAAAna,EAAA6Z,QACAxM,aACAC,WACAgL,gBACA5K,cACAD,cACAkG,MAAAlP,GAAA1J,sBAAA+N,EAAA6K,MAAA9Z,EAAAmG,EAAAqJ,KAAAuK,OAAA/Z,OAGA,IAAAwL,EAAA5E,EAAAwE,OAEA6E,GAAAmQ,EAAAvC,gBAEArS,EAAAgI,WADA,IAAAxT,EACAgf,EAAAhY,SAEAlE,EAAAkM,UAAAQ,KAAAxP,EAAA,GAAAoL,OAAAqI,SAGAjI,EAAAiI,SAAAjI,EAAAgI,WAAAhI,EAAAiT,eAGA7X,EAAAsE,SAEAgV,eAAA,WACA,IAGApjC,EAHAmyB,EAAAruB,KAAAsuB,aACAH,EAAAnuB,KAAAouB,UACAiR,EAAA,EAaA,OAXArV,GAAAtJ,KAAAyN,EAAAS,KAAA,SAAAmB,EAAA3Q,GACAljB,EAAAmyB,EAAAO,KAAAxP,GAEA9D,MAAApf,IAAA6zB,EAAA1F,SACAgV,GAAAv7B,KAAA0xB,IAAAt5B,MAOAmjC,GAEAM,uBAAA,SAAAzjC,GACA,IAAAmjC,EAAAr/B,KAAAouB,UAAAiR,MAEA,OAAAA,EAAA,IAAA/jB,MAAApf,GACA,EAAA4H,KAAAgL,IAAAhL,KAAA0xB,IAAAt5B,GAAAmjC,GAGA,GAGAL,kBAAA,SAAAR,GACA,IAGA9hC,EAAAukB,EAAAkN,EAAAnI,EAAAqV,EAAA/Z,EAAA0P,EAAA4O,EAFA/yB,EAAA,EACA0Y,EAFAvlB,KAEAulB,MAGA,IAAAiZ,EAEA,IAAA9hC,EAAA,EAAAukB,EAAAsE,EAAAqJ,KAAAC,SAAAjyB,OAAsDF,EAAAukB,IAAUvkB,EAChE,GAAA6oB,EAAA4U,iBAAAz9B,GAAA,CACAyxB,EAAA5I,EAAAuJ,eAAApyB,GACA8hC,EAAArQ,EAAAS,KAEAlyB,IAZAsD,KAYAof,QACAic,EAAAlN,EAAAkN,YAGA,MAKA,IAAAmD,EACA,SAGA,IAAA9hC,EAAA,EAAAukB,EAAAud,EAAA5hC,OAAqCF,EAAAukB,IAAUvkB,EAC/CspB,EAAAwY,EAAA9hC,GAGA,WAFA4kB,EAAA+Z,IAAAvC,uBAAA9S,EAAAtpB,GAAAspB,EAAA8W,UAEA/K,cACAf,EAAA1P,EAAA0P,YACA4O,EAAAte,EAAA6P,iBAEAtkB,EAAA+yB,GADA/yB,EAAAmkB,EAAAnkB,EAAAmkB,EAAAnkB,GACA+yB,EAAA/yB,GAIA,OAAAA,GAMA+jB,cAAA,SAAA5K,GACA,IAAA4E,EAAA5E,EAAAwE,OACAlJ,EAAA0E,EAAA8W,SACAhM,EAAA9G,GAAA8G,cACA9K,EAAA2K,eAAA,CACA9qB,gBAAA+kB,EAAA/kB,gBACAkrB,YAAAnG,EAAAmG,YACAC,YAAApG,EAAAoG,aAEApG,EAAA/kB,gBAAAm3B,GAAA1b,EAAA2P,qBAAAH,EAAAxP,EAAAzb,kBACA+kB,EAAAmG,YAAAiM,GAAA1b,EAAA4P,iBAAAJ,EAAAxP,EAAAyP,cACAnG,EAAAoG,YAAAgM,GAAA1b,EAAA6P,iBAAA7P,EAAA0P,cAMA8H,uBAAA,SAAA9S,EAAA5G,GACA,IAMA1iB,EAAAukB,EAAAhlB,EALAspB,EADAvlB,KACAulB,MACA8I,EAFAruB,KAEAsuB,aACAuC,EAAA7K,EAAA6K,QAAA,GACAvP,EAAAiE,EAAAjE,QAAAkP,SAAAxK,IACA1M,EAAA,GAGAyQ,EAAA,CACAxE,QACAyW,UAAA5c,EACAiP,UACAR,aAZA7tB,KAYAof,OAEAriB,EAAA,2HAEA,IAAAL,EAAA,EAAAukB,EAAAlkB,EAAAH,OAAqCF,EAAAukB,IAAUvkB,EAE/C4c,EADArd,EAAAc,EAAAL,IACAqgC,GAAA,CAAAlM,EAAA50B,GAAAoyB,EAAApyB,GAAAqlB,EAAArlB,IAAA8tB,EAAA3K,GAGA,OAAA9F,GAOAimB,qBAAA,SAAA1R,GAGA,IAFA,IAAAgS,EAAA,EAEAnjC,EAAA,EAAqBA,EAAAmxB,IAAkBnxB,EACvCsD,KAAAulB,MAAA4U,iBAAAz9B,KACAmjC,GAAA7/B,KAAA0+B,eAAAhiC,IAIA,OAAAmjC,GAMAnB,eAAA,SAAAoB,GACA,OAAAh8B,KAAA+I,IAAAmwB,GAAAh9B,KAAAulB,MAAAqJ,KAAAC,SAAAiR,GAAAzhB,OAAA,OAOA6gB,8BAAA,WACA,OAAAl/B,KAAAu/B,qBAAAv/B,KAAAulB,MAAAqJ,KAAAC,SAAAjyB,WAIAksB,GAAAT,KAAA,iBACAtgB,MAAA,CACAowB,KAAA,QACA4H,KAAA,KAEAvR,OAAA,CACAC,MAAA,EACAhwB,KAAA,SACA0H,SAAA,WAEAwoB,MAAA,EACAlwB,KAAA,WACA0H,SAAA,OACAiyB,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,MAIAhI,SAAA,CACA8G,UAAA,CACAP,cAAA,SAGAoF,SAAA,CACAhE,KAAA,QACA4H,KAAA,OAIA,IAAAC,GAAAvH,GAAA3W,OAAA,CAIAmN,iBAAA,WACA,OAAAjvB,KAAAouB,UAAAG,SAMAW,iBAAA,WACA,OAAAlvB,KAAAouB,UAAAM,WAGAuR,GAAAjW,GAAA5J,eACA8f,GAAAlW,GAAA1I,QAAAuI,QACAsW,GAAAnW,GAAArmB,OAAAojB,eAoBA,SAAAqZ,GAAA/R,EAAA/M,GACA,OAAA2e,GAAA5R,EAAAgS,SAAA/e,EAAAuH,WAnBAC,GAAAT,KAAA,QACAQ,WAAA,EACA6L,UAAA,EACA3sB,MAAA,CACAowB,KAAA,SAEA3J,OAAA,CACAC,MAAA,EACAhwB,KAAA,WACAmF,GAAA,aAEA+qB,MAAA,EACAlwB,KAAA,SACAmF,GAAA,gBASA,IAAA08B,GAAAxO,GAAAhQ,OAAA,CACAgM,mBAAA0C,GAAAuH,KACAhK,gBAAAyC,GAAAwH,MACA1I,OAAA,SAAAD,GACA,IAOA3yB,EAAAukB,EAPAiB,EAAAliB,KACAmuB,EAAAjM,EAAAkM,UACA6F,EAAA9F,EAAAE,QACAsG,EAAAxG,EAAAS,MAAA,GACAvT,EAAA6G,EAAA6M,cAAAZ,EAAAO,SACAL,EAAAnM,EAAAoM,aACA+R,EAAAD,GAAA/R,EAAAnM,EAAAqD,MAAAjE,SAoBA,IAjBA+e,SAEA/9B,IAAA+rB,EAAAzG,cAAAtlB,IAAA+rB,EAAAkS,cACAlS,EAAAkS,YAAAlS,EAAAzG,SAIAqM,EAAAuM,OAAAnlB,EACA4Y,EAAAvE,cAAAxN,EAAA9C,MAEA6U,EAAAW,UAAAD,EAEAV,EAAAzJ,OAAAtI,EAAAue,oBAAAxM,GACAA,EAAA3J,SAIA5tB,EAAA,EAAAukB,EAAA0T,EAAA/3B,OAAuCF,EAAAukB,IAAUvkB,EACjDwlB,EAAA8N,cAAA2E,EAAAj4B,KAAA2yB,GAQA,IALAgR,GAAA,IAAApM,EAAAzJ,OAAA5C,SACA1F,EAAAwe,4BAIAhkC,EAAA,EAAAukB,EAAA0T,EAAA/3B,OAAuCF,EAAAukB,IAAUvkB,EACjDi4B,EAAAj4B,GAAA4tB,SAGA0F,cAAA,SAAAhJ,EAAA5H,EAAAiQ,GACA,IASAhiB,EAAAC,EATA4U,EAAAliB,KACAmuB,EAAAjM,EAAAkM,UACAyC,EAAA7J,EAAA6J,QAAA,GACAxC,EAAAnM,EAAAoM,aACAT,EAAA3L,EAAA9C,MACAljB,EAAAmyB,EAAAO,KAAAxP,GACAsd,EAAAxa,EAAA6M,cAAAZ,EAAAO,SACA+N,EAAAva,EAAA6M,cAAAZ,EAAAI,SACAoS,EAAAxS,EAAAE,QAAA7D,OAGAlJ,EAAAY,EAAA0e,qBAAA5Z,EAAA5H,GAEA/R,EAAAovB,EAAAhC,iBAAA,kBAAAv+B,IAAA2gC,IAAAzd,EAAAyO,GACAvgB,EAAA+hB,EAAAqN,EAAApD,eAAApX,EAAA2e,gBAAA3kC,EAAAkjB,EAAAyO,GAEA7G,EAAA+R,QAAA0D,EACAzV,EAAAgS,QAAA0D,EACA1V,EAAA8V,SAAAxb,EACA0F,EAAA0I,cAAA7B,EACA7G,EAAA4I,OAAAxQ,EAEA4H,EAAAwD,OAAA,CACAnd,IACAC,IACA8nB,KAAAvE,EAAAuE,MAAA9Z,MAAAjO,IAAAiO,MAAAhO,GAEAsY,OAAAtE,EAAAsE,OACA8P,WAAApU,EAAAoU,WACAtP,SAAA9E,EAAA8E,SACAvgB,gBAAAyb,EAAAzb,gBACAkrB,YAAAzP,EAAAyP,YACAC,YAAA1P,EAAA0P,YACApJ,QAAAqY,GAAApP,EAAAjJ,QAAA+Y,IAAA/Y,QAAA,GACAF,cAAAiZ,KAAAjZ,YAEA+N,UAAAnU,EAAAmU,YAOAmL,qBAAA,SAAA7Q,EAAA3Q,GACA,IAMA1iB,EAAAukB,EAAAhlB,EALAspB,EADAvlB,KACAulB,MACA8I,EAAA9I,EAAAqJ,KAAAC,SAFA7uB,KAEAof,OACAyR,EAAAd,EAAAc,QAAA,GACAvP,EAAAiE,EAAAjE,QAAAkP,SAAAxJ,MACA1N,EAAA,GAGAyQ,EAAA,CACAxE,QACAyW,UAAA5c,EACAiP,UACAR,aAZA7tB,KAYAof,OAEA0hB,EAAA,CACAj7B,gBAAA,uBACAkrB,YAAA,mBACAC,YAAA,mBACAyE,UAAA,iBACAxE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAiB,YAAA,mBACAsD,WAAA,aACA9P,OAAA,cACAQ,SAAA,iBAEArpB,EAAAZ,OAAAY,KAAA+jC,GAEA,IAAApkC,EAAA,EAAAukB,EAAAlkB,EAAAH,OAAqCF,EAAAukB,IAAUvkB,EAC/CT,EAAAc,EAAAL,GACA4c,EAAArd,GAAAikC,GAAA,CAAArP,EAAA50B,GAAAoyB,EAAAyS,EAAA7kC,IAAAoyB,EAAApyB,GAAAqlB,EAAArlB,IAAA8tB,EAAA3K,GAGA,OAAA9F,GAMAmnB,oBAAA,SAAA1Q,GACA,IAOArzB,EAAAukB,EAAAhlB,EANAspB,EADAvlB,KACAulB,MACA8I,EAAA9I,EAAAqJ,KAAAC,SAFA7uB,KAEAof,OACAyR,EAAAd,EAAAc,QAAA,GACAvP,EAAAiE,EAAAjE,QACAyf,EAAAzf,EAAAkP,SAAAyD,KACA3a,EAAA,GAEAvc,EAAA,mJAEA,IAAAL,EAAA,EAAAukB,EAAAlkB,EAAAH,OAAqCF,EAAAukB,IAAUvkB,EAE/C4c,EADArd,EAAAc,EAAAL,IACAwjC,GAAA,CAAArP,EAAA50B,GAAAoyB,EAAApyB,GAAA8kC,EAAA9kC,KASA,OAHAqd,EAAAob,SAAAuL,GAAA5R,EAAAqG,SAAApT,EAAAoT,UACApb,EAAAsO,QAAAqY,GAAA5R,EAAAkS,YAAAQ,EAAAnZ,SACAtO,EAAAoO,YAAAwY,GAAA,CAAArP,EAAAnJ,YAAA2G,EAAA3G,YAAAqZ,EAAAtZ,UACAnO,GAEAunB,gBAAA,SAAA3kC,EAAAkjB,EAAAyO,GACA,IAMAnxB,EAAA8gC,EAAAwD,EALAzb,EADAvlB,KACAulB,MACA4I,EAFAnuB,KAEAouB,UACAsO,EAHA18B,KAGA+uB,cAAAZ,EAAAO,SACAuS,EAAA,EACAC,EAAA,EAGA,GAAAxE,EAAApb,QAAA2Y,QAAA,CACA,IAAAv9B,EAAA,EAAmBA,EAAAmxB,EAAkBnxB,IAIrC,GAHA8gC,EAAAjY,EAAAqJ,KAAAC,SAAAnyB,GAGA,UAFAskC,EAAAzb,EAAAuJ,eAAApyB,IAEA+B,MAAAuiC,EAAAtS,UAAAgO,EAAA94B,IAAA2hB,EAAA4U,iBAAAz9B,GAAA,CACA,IAAAykC,EAAAhhB,OAAAuc,EAAAvB,cAAAqC,EAAA5O,KAAAxP,KAEA+hB,EAAA,EACAD,GAAAC,GAAA,EAEAF,GAAAE,GAAA,EAKA,IAAAC,EAAAjhB,OAAAuc,EAAAvB,cAAAj/B,IAEA,OAAAklC,EAAA,EACA1E,EAAAjC,iBAAAyG,EAAAE,GAGA1E,EAAAjC,iBAAAwG,EAAAG,GAGA,OAAA1E,EAAAjC,iBAAAv+B,IAEAwkC,0BAAA,WACA,IAMAhkC,EAAAukB,EAAA2J,EAAAyW,EALA9b,EADAvlB,KACAulB,MACA4I,EAFAnuB,KAEAouB,UACAuS,EAAAxS,EAAAE,QAAA7D,OACAvD,EAAA1B,EAAAyQ,UACArB,EAAAxG,EAAAS,MAAA,GASA,SAAA0S,EAAAC,EAAA30B,EAAAC,GACA,OAAA/I,KAAA+I,IAAA/I,KAAA8I,IAAA20B,EAAA10B,GAAAD,GAGA,GAVA+zB,EAAAjM,WACAC,IAAAz3B,OAAA,SAAAqkC,GACA,OAAAA,EAAA/W,OAAA4K,QAQA,aAAAuL,EAAAa,uBACAxX,GAAAyX,oBAAA9M,QAEA,IAAAj4B,EAAA,EAAAukB,EAAA0T,EAAA/3B,OAAyCF,EAAAukB,IAAUvkB,EACnDkuB,EAAA+J,EAAAj4B,GAAA8tB,OACA6W,EAAArX,GAAA0X,YAAA1X,GAAAmL,aAAAR,EAAAj4B,GAAA8tB,OAAAI,EAAAZ,GAAA2X,SAAAhN,EAAAj4B,GAAA8tB,OAAAmW,EAAA/Y,SACAgD,EAAA9C,sBAAAuZ,EAAA9Z,SAAAla,EACAud,EAAA5C,sBAAAqZ,EAAA9Z,SAAAja,EACAsd,EAAA7C,kBAAAsZ,EAAA9F,KAAAluB,EACAud,EAAA3C,kBAAAoZ,EAAA9F,KAAAjuB,EAIA,GAAAiY,EAAAjE,QAAAkP,SAAAyD,KAAAK,gBACA,IAAA53B,EAAA,EAAAukB,EAAA0T,EAAA/3B,OAAyCF,EAAAukB,IAAUvkB,EACnDkuB,EAAA+J,EAAAj4B,GAAA8tB,OAEA2V,GAAAvV,EAAA3D,KACAvqB,EAAA,GAAAyjC,GAAAxL,EAAAj4B,EAAA,GAAA8tB,OAAAvD,KACA2D,EAAA9C,sBAAAwZ,EAAA1W,EAAA9C,sBAAAb,EAAAlgB,KAAAkgB,EAAApB,OACA+E,EAAA5C,sBAAAsZ,EAAA1W,EAAA5C,sBAAAf,EAAAjgB,IAAAigB,EAAAnB,SAGAppB,EAAAi4B,EAAA/3B,OAAA,GAAAujC,GAAAxL,EAAAj4B,EAAA,GAAA8tB,OAAAvD,KACA2D,EAAA7C,kBAAAuZ,EAAA1W,EAAA7C,kBAAAd,EAAAlgB,KAAAkgB,EAAApB,OACA+E,EAAA3C,kBAAAqZ,EAAA1W,EAAA3C,kBAAAhB,EAAAjgB,IAAAigB,EAAAnB,WAMA2K,KAAA,WACA,IAMAmR,EALArc,EADAvlB,KACAulB,MACA4I,EAFAnuB,KAEAouB,UACAuG,EAAAxG,EAAAS,MAAA,GACA3H,EAAA1B,EAAAyQ,UACA/U,EAAA0T,EAAA/3B,OAEAF,EAAA,EAeA,IAbA0jC,GATApgC,KASAsuB,aAAA/I,EAAAjE,WACAsgB,GAAAzT,EAAAE,QAAA7D,OAAAwG,aAAA,KACAhH,GAAArmB,OAAAujB,SAAA3B,EAAAC,IAAA,CACAze,KAAAkgB,EAAAlgB,KACA8e,MAAAoB,EAAApB,MACA7e,IAAAigB,EAAAjgB,IAAA46B,EACA9b,OAAAmB,EAAAnB,OAAA8b,IAEAzT,EAAAE,QAAAoC,OACAzG,GAAArmB,OAAA0jB,WAAA9B,EAAAC,MAIY9oB,EAAAukB,IAAUvkB,EACtBi4B,EAAAj4B,GAAA+zB,KAAAxJ,IAOA2J,cAAA,SAAA5J,GACA,IAAA4D,EAAA5D,EAAAwD,OACAlJ,EAAA0F,EAAA8V,SACAhM,EAAA9G,GAAA8G,cACA9J,EAAA2J,eAAA,CACA9qB,gBAAA+kB,EAAA/kB,gBACAkrB,YAAAnG,EAAAmG,YACAC,YAAApG,EAAAoG,YACApL,OAAAgF,EAAAhF,QAEAgF,EAAA/kB,gBAAAo6B,GAAA3e,EAAA2P,qBAAAH,EAAAxP,EAAAzb,kBACA+kB,EAAAmG,YAAAkP,GAAA3e,EAAA4P,iBAAAJ,EAAAxP,EAAAyP,cACAnG,EAAAoG,YAAAiP,GAAA3e,EAAA6P,iBAAA7P,EAAA0P,aACApG,EAAAhF,OAAAqa,GAAA3e,EAAA8Q,YAAA9Q,EAAAsE,WAGAic,GAAA7X,GAAA1I,QAAAuI,QAEAf,GAAAT,KAAA,aACAhN,MAAA,CACA5c,KAAA,eACAqjC,WAAA,CACAC,SAAA,GAEAxJ,UAAA,CACAyJ,UAAA,GAEAC,YAAA,CACAF,SAAA,GAEAlH,MAAA,CACAqH,aAAA,IAIAlW,UAAA,CACAiR,eAAA,EACAC,cAAA,GAEAtK,YAAA,GAAA9uB,KAAAgL,GACAquB,eAAA,SAAA5X,GACA,IAAA6X,EAAA,GACAA,EAAAvQ,KAAA,cAAAtH,EAAA3hB,GAAA,aACA,IAAAgrB,EAAArJ,EAAAqJ,KACAC,EAAAD,EAAAC,SACAsK,EAAAvK,EAAAuK,OAEA,GAAAtK,EAAAjyB,OACA,QAAAF,EAAA,EAAuBA,EAAAmyB,EAAA,GAAAD,KAAAhyB,SAA6BF,EACpD0gC,EAAAvQ,KAAA,qCAAAgC,EAAA,GAAAhpB,gBAAAnJ,GAAA,aAEAy8B,EAAAz8B,IACA0gC,EAAAvQ,KAAAsM,EAAAz8B,IAGA0gC,EAAAvQ,KAAA,SAKA,OADAuQ,EAAAvQ,KAAA,SACAuQ,EAAAC,KAAA,KAEAC,OAAA,CACAnE,OAAA,CACAoE,eAAA,SAAAhY,GACA,IAAAqJ,EAAArJ,EAAAqJ,KAEA,OAAAA,EAAAuK,OAAAv8B,QAAAgyB,EAAAC,SAAAjyB,OACAgyB,EAAAuK,OAAA9zB,IAAA,SAAA6zB,EAAAx8B,GACA,IAAAyxB,EAAA5I,EAAAuJ,eAAA,GACA0O,EAAA5O,EAAAC,SAAA,GACA7I,EAAAmI,EAAAS,KAAAlyB,GACAm0B,EAAA7K,EAAA6K,QAAA,GACA4M,EAAAlY,EAAAjE,QAAAkP,SAAAxK,IACAY,EAAAib,GAAA,CAAAhR,EAAAhrB,gBAAA23B,EAAA33B,gBAAA43B,EAAA53B,sBAAAvD,EAAA5F,GACAmqB,EAAAgb,GAAA,CAAAhR,EAAAE,YAAAyM,EAAAzM,YAAA0M,EAAA1M,kBAAAzuB,EAAA5F,GACAghC,EAAAmE,GAAA,CAAAhR,EAAAG,YAAAwM,EAAAxM,YAAAyM,EAAAzM,kBAAA1uB,EAAA5F,GACA,OACA0gC,KAAAlE,EACAtF,UAAAhN,EACAmN,YAAAlN,EACAgN,UAAA6J,EACArT,OAAA/O,MAAAkiB,EAAA5O,KAAAlyB,KAAAyxB,EAAAS,KAAAlyB,GAAA2tB,OAEAjL,MAAA1iB,KAKA,KAGAkF,QAAA,SAAAG,EAAA47B,GACA,IAEAjhC,EAAAukB,EAAAkN,EAFA/O,EAAAue,EAAAve,MACAmG,EAAAvlB,KAAAulB,MAGA,IAAA7oB,EAAA,EAAAukB,GAAAsE,EAAAqJ,KAAAC,UAAA,IAAAjyB,OAA8DF,EAAAukB,IAAUvkB,GACxEyxB,EAAA5I,EAAAuJ,eAAApyB,IACAkyB,KAAAxP,GAAAiL,QAAA8D,EAAAS,KAAAxP,GAAAiL,OAGA9E,EAAA+J,WAIA6M,SAAA,CACAC,UAAA,CACAr3B,MAAA,WACA,UAEAm0B,MAAA,SAAA5zB,EAAAspB,GACA,OAAAA,EAAAuK,OAAA7zB,EAAA8Z,OAAA,KAAA9Z,EAAAi3B,YAMA,IAAA4F,GAAArQ,GAAAhQ,OAAA,CACAiM,gBAAAyC,GAAAsH,IACA9J,WAAAhE,GAAAvK,KACA6P,OAAA,SAAAD,GACA,IAOA3yB,EAAAukB,EAAAyR,EAPAxQ,EAAAliB,KACAquB,EAAAnM,EAAAoM,aACAH,EAAAjM,EAAAkM,UACAvD,EAAA3I,EAAAqD,MAAAjE,QAAAsR,YAAA,EACAwP,EAAAlgB,EAAAmgB,QAAA,GACAC,EAAApgB,EAAAqgB,QAAA,GACA/D,EAAArQ,EAAAS,KAOA,IAJA1M,EAAAsgB,gBAEArU,EAAAoD,MAAArP,EAAAugB,uBAEA/lC,EAAA,EAAAukB,EAAAoN,EAAAO,KAAAhyB,OAA6CF,EAAAukB,EAAUvkB,IACvD0lC,EAAA1lC,GAAAmuB,EACA6H,EAAAxQ,EAAAwgB,cAAAhmC,GACA4lC,EAAA5lC,GAAAg2B,EACA7H,GAAA6H,EAGA,IAAAh2B,EAAA,EAAAukB,EAAAud,EAAA5hC,OAAqCF,EAAAukB,IAAUvkB,EAC/C8hC,EAAA9hC,GAAAogC,SAAA5a,EAAA4W,uBAAA0F,EAAA9hC,MACAwlB,EAAA8N,cAAAwO,EAAA9hC,KAAA2yB,IAOAmT,cAAA,WACA,IAAAtgB,EAAAliB,KACAulB,EAAArD,EAAAqD,MACAyQ,EAAAzQ,EAAAyQ,UACAoI,EAAA7Y,EAAAjE,QACAid,EAAAz6B,KAAA8I,IAAAopB,EAAAnQ,MAAAmQ,EAAAjvB,KAAAivB,EAAAlQ,OAAAkQ,EAAAhvB,KACAue,EAAA0N,YAAAnvB,KAAA+I,IAAA0xB,EAAA,KACAhZ,EAAAyN,YAAAlvB,KAAA+I,IAAAuxB,EAAAR,iBAAArY,EAAA0N,YAAA,IAAAmL,EAAAR,iBAAA,KACArY,EAAA0Z,cAAA1Z,EAAA0N,YAAA1N,EAAAyN,aAAAzN,EAAAod,yBACAzgB,EAAA+Q,YAAA1N,EAAA0N,YAAA1N,EAAA0Z,aAAA/c,EAAA9C,MACA8C,EAAA8Q,YAAA9Q,EAAA+Q,YAAA1N,EAAA0Z,cAEAjP,cAAA,SAAAhK,EAAA5G,EAAAiQ,GACA,IAAAnN,EAAAliB,KACAulB,EAAArD,EAAAqD,MACA8I,EAAAnM,EAAAoM,aACA8P,EAAA7Y,EAAAjE,QACAke,EAAApB,EAAApS,UACA3Q,EAAAkK,EAAAlK,MACA8d,EAAA5T,EAAAqJ,KAAAuK,OACAsG,EAAApkB,EAAAunB,QACAlD,EAAArkB,EAAAwnB,QAEAC,EAAA1E,EAAAxL,WACAD,EAAA3M,EAAAqE,OAAA,EAAAhP,EAAA0nB,8BAAA1U,EAAAO,KAAAxP,IACAwT,EAAA1Q,EAAAmgB,QAAAjjB,GACAyT,EAAAD,GAAA5M,EAAAqE,OAAA,EAAAnI,EAAAqgB,QAAAnjB,IACA4jB,EAAAxD,EAAAtC,aAAA,EAAA7hB,EAAA0nB,8BAAA1U,EAAAO,KAAAxP,IACAkC,EAAA0E,EAAA8W,UAAA,GACA9S,GAAAlI,OAAAkE,EAAA,CAEA0J,cAAAxN,EAAA9C,MACAwQ,OAAAxQ,EACAohB,OAAAnlB,EAEAmP,OAAA,CACA3kB,gBAAAyb,EAAAzb,gBACAkrB,YAAAzP,EAAAyP,YACAC,YAAA1P,EAAA0P,YACAe,YAAAzQ,EAAAyQ,YACA1kB,EAAAoyB,EACAnyB,EAAAoyB,EACA1M,YAAA,EACAC,YAAA5D,EAAA2T,EAAArQ,EACAC,WAAAvD,GAAAmQ,EAAAvC,cAAA6F,EAAAlQ,EACAC,SAAAxD,GAAAmQ,EAAAvC,cAAA6F,EAAAjQ,EACAqG,MAAAlP,GAAA1J,sBAAA6Y,EAAA/Z,EAAA+Z,EAAA/Z,OAGA4G,EAAAsE,SAEAmY,qBAAA,WACA,IAAApU,EAAAruB,KAAAsuB,aACAH,EAAAnuB,KAAAouB,UACAmD,EAAA,EAMA,OALAvH,GAAAtJ,KAAAyN,EAAAS,KAAA,SAAAmB,EAAA3Q,GACA9D,MAAA+S,EAAAO,KAAAxP,KAAA2Q,EAAA1F,QACAkH,MAGAA,GAMAX,cAAA,SAAA5K,GACA,IAAA4E,EAAA5E,EAAAwE,OACAlJ,EAAA0E,EAAA8W,SACAhM,EAAA9G,GAAA8G,cACA1Q,EAAA4J,GAAA5J,eACA4F,EAAA2K,eAAA,CACA9qB,gBAAA+kB,EAAA/kB,gBACAkrB,YAAAnG,EAAAmG,YACAC,YAAApG,EAAAoG,aAEApG,EAAA/kB,gBAAAua,EAAAkB,EAAA2P,qBAAAH,EAAAxP,EAAAzb,kBACA+kB,EAAAmG,YAAA3Q,EAAAkB,EAAA4P,iBAAAJ,EAAAxP,EAAAyP,cACAnG,EAAAoG,YAAA5Q,EAAAkB,EAAA6P,iBAAA7P,EAAA0P,cAMA8H,uBAAA,SAAA9S,EAAA5G,GACA,IAMA1iB,EAAAukB,EAAAhlB,EALAspB,EADAvlB,KACAulB,MACA8I,EAFAruB,KAEAsuB,aACAuC,EAAA7K,EAAA6K,QAAA,GACAvP,EAAAiE,EAAAjE,QAAAkP,SAAAxK,IACA1M,EAAA,GAGAyQ,EAAA,CACAxE,QACAyW,UAAA5c,EACAiP,UACAR,aAZA7tB,KAYAof,OAEAriB,EAAA,2HAEA,IAAAL,EAAA,EAAAukB,EAAAlkB,EAAAH,OAAqCF,EAAAukB,IAAUvkB,EAE/C4c,EADArd,EAAAc,EAAAL,IACAmlC,GAAA,CAAAhR,EAAA50B,GAAAoyB,EAAApyB,GAAAqlB,EAAArlB,IAAA8tB,EAAA3K,GAGA,OAAA9F,GAMAopB,cAAA,SAAAtjB,GACA,IAAA8C,EAAAliB,KACAuxB,EAAAvxB,KAAAouB,UAAAmD,MACAlD,EAAAnM,EAAAoM,aACAH,EAAAjM,EAAAkM,UAEA,GAAA9S,MAAA+S,EAAAO,KAAAxP,KAAA+O,EAAAS,KAAAxP,GAAAiL,OACA,SAIA,IAAAN,EAAA,CACAxE,MAAArD,EAAAqD,MACAyW,UAAA5c,EACAiP,UACAR,aAAA3L,EAAA9C,OAEA,OAAAyiB,GAAA,CAAA3f,EAAAqD,MAAAjE,QAAAkP,SAAAxK,IAAA0M,MAAA,EAAA5uB,KAAAgL,GAAAyiB,GAAAxH,EAAA3K,MAIA0J,GAAAT,KAAA,MAAA2B,GAAAvL,MAAAqK,GAAAma,WAEAna,GAAAT,KAAA,OACAuV,iBAAA,IAIA,IAAAsF,GAAAlF,GACAmF,GAAAnZ,GAAA5J,eACAgjB,GAAApZ,GAAA1I,QAAAuI,QAEAf,GAAAT,KAAA,SACAhN,MAAA,CACA5c,KAAA,gBAEA+xB,SAAA,CACAyD,KAAA,CACArM,QAAA,MAMA,IAAAyb,GAAAvR,GAAAhQ,OAAA,CACAgM,mBAAA0C,GAAAuH,KACAhK,gBAAAyC,GAAAwH,MACAhK,WAAAhE,GAAAvK,KACA6P,OAAA,SAAAD,GACA,IAMA3yB,EAAAukB,EANAiB,EAAAliB,KACAmuB,EAAAjM,EAAAkM,UACA6F,EAAA9F,EAAAE,QACAsG,EAAAxG,EAAAS,MAAA,GACAvT,EAAA6G,EAAAqD,MAAAlK,MACAgT,EAAAnM,EAAAoM,aAiBA,SAdAhsB,IAAA+rB,EAAAzG,cAAAtlB,IAAA+rB,EAAAkS,cACAlS,EAAAkS,YAAAlS,EAAAzG,SAIAqM,EAAAuM,OAAAnlB,EACA4Y,EAAAvE,cAAAxN,EAAA9C,MAEA6U,EAAAW,UAAAD,EACAV,EAAAc,OAAA,EAEAd,EAAAzJ,OAAAtI,EAAAue,oBAAAxM,GACAA,EAAA3J,QAEA5tB,EAAA,EAAAukB,EAAA0T,EAAA/3B,OAAuCF,EAAAukB,IAAUvkB,EACjDwlB,EAAA8N,cAAA2E,EAAAj4B,KAAA2yB,GAMA,IAFAnN,EAAAwe,4BAEAhkC,EAAA,EAAAukB,EAAA0T,EAAA/3B,OAAuCF,EAAAukB,IAAUvkB,EACjDi4B,EAAAj4B,GAAA4tB,SAGA0F,cAAA,SAAAhJ,EAAA5H,EAAAiQ,GACA,IAAAnN,EAAAliB,KACA6wB,EAAA7J,EAAA6J,QAAA,GACAxC,EAAAnM,EAAAoM,aACAjT,EAAA6G,EAAAqD,MAAAlK,MACAioB,EAAAjoB,EAAAkoB,yBAAAnkB,EAAAiP,EAAAO,KAAAxP,IAEAkC,EAAAY,EAAA0e,qBAAA5Z,EAAA5H,GAEAuhB,EAAAze,EAAAkM,UAAAC,QAAA7D,OAEAnd,EAAAgiB,EAAAhU,EAAAunB,QAAAU,EAAAj2B,EACAC,EAAA+hB,EAAAhU,EAAAwnB,QAAAS,EAAAh2B,EAEA0Z,EAAAwZ,OAAAnlB,EACA2L,EAAA8V,SAAAxb,EACA0F,EAAA0I,cAAAxN,EAAA9C,MACA4H,EAAA4I,OAAAxQ,EAEA4H,EAAAwD,OAAA,CACAnd,IAEAC,IACA8nB,KAAAvE,EAAAuE,MAAA9Z,MAAAjO,IAAAiO,MAAAhO,GAEAsY,OAAAtE,EAAAsE,OACA8P,WAAApU,EAAAoU,WACAtP,SAAA9E,EAAA8E,SACAvgB,gBAAAyb,EAAAzb,gBACAkrB,YAAAzP,EAAAyP,YACAC,YAAA1P,EAAA0P,YACApJ,QAAAub,GAAAtS,EAAAjJ,QAAA+Y,IAAA/Y,QAAA,GAEA6N,UAAAnU,EAAAmU,YAOAmL,qBAAA,SAAA7Q,EAAA3Q,GACA,IAMA1iB,EAAAukB,EAAAhlB,EALAspB,EADAvlB,KACAulB,MACA8I,EAAA9I,EAAAqJ,KAAAC,SAFA7uB,KAEAof,OACAyR,EAAAd,EAAAc,QAAA,GACAvP,EAAAiE,EAAAjE,QAAAkP,SAAAxJ,MACA1N,EAAA,GAGAyQ,EAAA,CACAxE,QACAyW,UAAA5c,EACAiP,UACAR,aAZA7tB,KAYAof,OAEA0hB,EAAA,CACAj7B,gBAAA,uBACAkrB,YAAA,mBACAC,YAAA,mBACAyE,UAAA,iBACAxE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAiB,YAAA,mBACAsD,WAAA,aACA9P,OAAA,cACAQ,SAAA,iBAEArpB,EAAAZ,OAAAY,KAAA+jC,GAEA,IAAApkC,EAAA,EAAAukB,EAAAlkB,EAAAH,OAAqCF,EAAAukB,IAAUvkB,EAC/CT,EAAAc,EAAAL,GACA4c,EAAArd,GAAAmnC,GAAA,CAAAvS,EAAA50B,GAAAoyB,EAAAyS,EAAA7kC,IAAAoyB,EAAApyB,GAAAqlB,EAAArlB,IAAA8tB,EAAA3K,GAGA,OAAA9F,GAMAmnB,oBAAA,SAAA1Q,GACA,IAMArzB,EAAAukB,EAAAhlB,EALAspB,EADAvlB,KACAulB,MACA8I,EAAA9I,EAAAqJ,KAAAC,SAFA7uB,KAEAof,OACAyR,EAAAd,EAAAc,QAAA,GACAvP,EAAAiE,EAAAjE,QAAAkP,SAAAyD,KACA3a,EAAA,GAEAvc,EAAA,0HAEA,IAAAL,EAAA,EAAAukB,EAAAlkB,EAAAH,OAAqCF,EAAAukB,IAAUvkB,EAE/C4c,EADArd,EAAAc,EAAAL,IACA0mC,GAAA,CAAAvS,EAAA50B,GAAAoyB,EAAApyB,GAAAqlB,EAAArlB,KAIA,OADAqd,EAAAsO,QAAAub,GAAA9U,EAAAkS,YAAAjf,EAAAsG,SACAtO,GAEAonB,0BAAA,WACA,IAIAhkC,EAAAukB,EAAA2J,EAAAyW,EAHAlT,EADAnuB,KACAouB,UACAnH,EAFAjnB,KAEAulB,MAAAyQ,UACArB,EAAAxG,EAAAS,MAAA,GAGA,SAAA0S,EAAAC,EAAA30B,EAAAC,GACA,OAAA/I,KAAA+I,IAAA/I,KAAA8I,IAAA20B,EAAA10B,GAAAD,GAGA,IAAAlQ,EAAA,EAAAukB,EAAA0T,EAAA/3B,OAAuCF,EAAAukB,IAAUvkB,EACjDkuB,EAAA+J,EAAAj4B,GAAA8tB,OACA6W,EAAArX,GAAA0X,YAAA1X,GAAAmL,aAAAR,EAAAj4B,GAAA,GAAA8tB,OAAAI,EAAAZ,GAAA2X,SAAAhN,EAAAj4B,GAAA,GAAA8tB,OAAAI,EAAAhD,SAEAgD,EAAA9C,sBAAAwZ,EAAAD,EAAA9Z,SAAAla,EAAA4Z,EAAAlgB,KAAAkgB,EAAApB,OACA+E,EAAA5C,sBAAAsZ,EAAAD,EAAA9Z,SAAAja,EAAA2Z,EAAAjgB,IAAAigB,EAAAnB,QACA8E,EAAA7C,kBAAAuZ,EAAAD,EAAA9F,KAAAluB,EAAA4Z,EAAAlgB,KAAAkgB,EAAApB,OACA+E,EAAA3C,kBAAAqZ,EAAAD,EAAA9F,KAAAjuB,EAAA2Z,EAAAjgB,IAAAigB,EAAAnB,SAGA8K,cAAA,SAAA5J,GACA,IAAA4D,EAAA5D,EAAAwD,OACAlJ,EAAA0F,EAAA8V,SACAhM,EAAA9G,GAAA8G,cACA9J,EAAA2J,eAAA,CACA9qB,gBAAA+kB,EAAA/kB,gBACAkrB,YAAAnG,EAAAmG,YACAC,YAAApG,EAAAoG,YACApL,OAAAgF,EAAAhF,QAEAgF,EAAA/kB,gBAAAs9B,GAAA7hB,EAAA2P,qBAAAH,EAAAxP,EAAAzb,kBACA+kB,EAAAmG,YAAAoS,GAAA7hB,EAAA4P,iBAAAJ,EAAAxP,EAAAyP,cACAnG,EAAAoG,YAAAmS,GAAA7hB,EAAA6P,iBAAA7P,EAAA0P,aACApG,EAAAhF,OAAAud,GAAA7hB,EAAA8Q,YAAA9Q,EAAAsE,WAIAkD,GAAAT,KAAA,WACAtgB,MAAA,CACAowB,KAAA,UAEA3J,OAAA,CACAC,MAAA,EACA7qB,GAAA,WAEAnF,KAAA,SAEA0H,SAAA,WAEAwoB,MAAA,EACA/qB,GAAA,WACAnF,KAAA,SACA0H,SAAA,UAGA0iB,WAAA,EACAsT,SAAA,CACAC,UAAA,CACAr3B,MAAA,WACA,UAEAm0B,MAAA,SAAA5zB,GACA,UAAAA,EAAAg3B,OAAA,KAAAh3B,EAAAi3B,OAAA,SAOA,IAIAiH,GAAA,CACA7K,IAAAF,GACAgL,OAAAjH,GACAyG,SAAAjF,GACA0F,cAAA1D,GACA/L,KAAAqM,GACAqD,UAAAxB,GACAyB,IAAAV,GACAW,MAAAR,GACAS,QAbAxD,IAsBA,SAAAyD,GAAAhiC,EAAAwjB,GACA,OAAAxjB,EAAAiiC,OACA,CACA32B,EAAAtL,EAAAsL,EACAC,EAAAvL,EAAAuL,GAIA0c,GAAA+Z,oBAAAhiC,EAAAwjB,GASA,SAAA0e,GAAA1e,EAAA2e,GACA,IACA/V,EAAAzxB,EAAAyhC,EAAAld,EAAAkjB,EADAtV,EAAAtJ,EAAAqJ,KAAAC,SAGA,IAAAnyB,EAAA,EAAAukB,EAAA4N,EAAAjyB,OAAuCF,EAAAukB,IAAUvkB,EACjD,GAAA6oB,EAAA4U,iBAAAz9B,GAMA,IAFAyxB,EAAA5I,EAAAuJ,eAAApyB,GAEAyhC,EAAA,EAAAgG,EAAAhW,EAAAS,KAAAhyB,OAA0CuhC,EAAAgG,IAAUhG,EAAA,CACpD,IAAApO,EAAA5B,EAAAS,KAAAuP,GAEApO,EAAAxF,MAAA6K,MACA8O,EAAAnU,IAaA,SAAAqU,GAAA7e,EAAApf,GACA,IAAAqqB,EAAA,GAMA,OALAyT,GAAA1e,EAAA,SAAAwK,GACAA,EAAAsC,QAAAlsB,EAAAkH,EAAAlH,EAAAmH,IACAkjB,EAAA3D,KAAAkD,KAGAS,EAYA,SAAA6T,GAAA9e,EAAApf,EAAAm+B,EAAAC,GACA,IAAAC,EAAArkB,OAAAskB,kBACAC,EAAA,GAiBA,OAhBAT,GAAA1e,EAAA,SAAAwK,GACA,IAAAuU,GAAAvU,EAAAsC,QAAAlsB,EAAAkH,EAAAlH,EAAAmH,GAAA,CAIA,IAAAwsB,EAAA/J,EAAAmD,iBACAP,EAAA4R,EAAAp+B,EAAA2zB,GAEAnH,EAAA6R,GACAE,EAAA,CAAA3U,GACAyU,EAAA7R,GACOA,IAAA6R,GAEPE,EAAA7X,KAAAkD,MAGA2U,EASA,SAAAC,GAAA5E,GACA,IAAA6E,GAAA,IAAA7E,EAAAn/B,QAAA,KACAikC,GAAA,IAAA9E,EAAAn/B,QAAA,KACA,gBAAAkkC,EAAAC,GACA,IAAAC,EAAAJ,EAAA9gC,KAAA0xB,IAAAsP,EAAAz3B,EAAA03B,EAAA13B,GAAA,EACA43B,EAAAJ,EAAA/gC,KAAA0xB,IAAAsP,EAAAx3B,EAAAy3B,EAAAz3B,GAAA,EACA,OAAAxJ,KAAAiL,KAAAjL,KAAAsJ,IAAA43B,EAAA,GAAAlhC,KAAAsJ,IAAA63B,EAAA,KAIA,SAAAC,GAAA3f,EAAAxjB,EAAAuf,GACA,IAAAnb,EAAA49B,GAAAhiC,EAAAwjB,GAEAjE,EAAAye,KAAAze,EAAAye,MAAA,IACA,IAAAwE,EAAAI,GAAArjB,EAAAye,MACAoF,EAAA7jB,EAAAgjB,UAAAF,GAAA7e,EAAApf,GAAAk+B,GAAA9e,EAAApf,GAAA,EAAAo+B,GACA/T,EAAA,GAEA,OAAA2U,EAAAvoC,QAIA2oB,EAAAqJ,KAAAC,SAAAxxB,QAAA,SAAAgxB,EAAAR,GACA,GAAAtI,EAAA4U,iBAAAtM,GAAA,CACA,IAAAM,EAAA5I,EAAAuJ,eAAAjB,GACAkC,EAAA5B,EAAAS,KAAAuW,EAAA,GAAAvV,QAEAG,MAAAxF,MAAA6K,MACA5E,EAAA3D,KAAAkD,MAIAS,GAbA,GA+BA,IAAA4U,GAAA,CAEAC,MAAA,CACAC,OAAA,SAAA/f,EAAAxjB,GACA,IAAAoE,EAAA49B,GAAAhiC,EAAAwjB,GACAiL,EAAA,GAOA,OANAyT,GAAA1e,EAAA,SAAAwK,GACA,GAAAA,EAAAsC,QAAAlsB,EAAAkH,EAAAlH,EAAAmH,GAEA,OADAkjB,EAAA3D,KAAAkD,GACAS,IAGAA,EAAA3X,MAAA,MASAqgB,MAAAgM,GAYA9lB,MAAA8lB,GAWA7W,QAAA,SAAA9I,EAAAxjB,EAAAuf,GACA,IAAAnb,EAAA49B,GAAAhiC,EAAAwjB,GACAjE,EAAAye,KAAAze,EAAAye,MAAA,KACA,IAAAwE,EAAAI,GAAArjB,EAAAye,MACAoF,EAAA7jB,EAAAgjB,UAAAF,GAAA7e,EAAApf,GAAAk+B,GAAA9e,EAAApf,GAAA,EAAAo+B,GAMA,OAJAY,EAAAvoC,OAAA,IACAuoC,EAAA5f,EAAAuJ,eAAAqW,EAAA,GAAAzV,eAAAd,MAGAuW,GASAI,SAAA,SAAAhgB,EAAAxjB,GACA,OAAAmjC,GAAA3f,EAAAxjB,EAAA,CACAuiC,WAAA,KAYAtd,MAAA,SAAAzB,EAAAxjB,GACA,IAAAoE,EAAA49B,GAAAhiC,EAAAwjB,GACA,OAAA6e,GAAA7e,EAAApf,IAWAq/B,QAAA,SAAAjgB,EAAAxjB,EAAAuf,GACA,IAAAnb,EAAA49B,GAAAhiC,EAAAwjB,GACAjE,EAAAye,KAAAze,EAAAye,MAAA,KACA,IAAAwE,EAAAI,GAAArjB,EAAAye,MACA,OAAAsE,GAAA9e,EAAApf,EAAAmb,EAAAgjB,UAAAC,IAWAl3B,EAAA,SAAAkY,EAAAxjB,EAAAuf,GACA,IAAAnb,EAAA49B,GAAAhiC,EAAAwjB,GACA4f,EAAA,GACAM,GAAA,EAgBA,OAfAxB,GAAA1e,EAAA,SAAAwK,GACAA,EAAA8F,SAAA1vB,EAAAkH,IACA83B,EAAAtY,KAAAkD,GAGAA,EAAAsC,QAAAlsB,EAAAkH,EAAAlH,EAAAmH,KACAm4B,GAAA,KAKAnkB,EAAAgjB,YAAAmB,IACAN,EAAA,IAGAA,GAWA73B,EAAA,SAAAiY,EAAAxjB,EAAAuf,GACA,IAAAnb,EAAA49B,GAAAhiC,EAAAwjB,GACA4f,EAAA,GACAM,GAAA,EAgBA,OAfAxB,GAAA1e,EAAA,SAAAwK,GACAA,EAAA+F,SAAA3vB,EAAAmH,IACA63B,EAAAtY,KAAAkD,GAGAA,EAAAsC,QAAAlsB,EAAAkH,EAAAlH,EAAAmH,KACAm4B,GAAA,KAKAnkB,EAAAgjB,YAAAmB,IACAN,EAAA,IAGAA,KAKA,SAAAO,GAAAjjB,EAAAtc,GACA,OAAA6jB,GAAA2b,MAAAljB,EAAA,SAAA9X,GACA,OAAAA,EAAAxE,eAIA,SAAAy/B,GAAAnjB,EAAA7B,GACA6B,EAAAplB,QAAA,SAAAsN,EAAAjO,GAEA,OADAiO,EAAAk7B,WAAAnpC,EACAiO,IAEA8X,EAAAqjB,KAAA,SAAAvnC,EAAAoO,GACA,IAAAuU,EAAAN,EAAAjU,EAAApO,EACA4iB,EAAAP,EAAAriB,EAAAoO,EACA,OAAAuU,EAAA7C,SAAA8C,EAAA9C,OAAA6C,EAAA2kB,WAAA1kB,EAAA0kB,WAAA3kB,EAAA7C,OAAA8C,EAAA9C,SAEAoE,EAAAplB,QAAA,SAAAsN,UACAA,EAAAk7B,aA0BA,SAAAE,GAAAC,EAAArnC,GACAqrB,GAAAtJ,KAAAslB,EAAA,SAAAC,GACAtnC,EAAAsnC,EAAA9/B,WAAA8/B,EAAA1M,eAAA0M,EAAAvgB,OAAAugB,EAAAn/B,QAIAgiB,GAAAT,KAAA,UACA6d,OAAA,CACAnQ,QAAA,CACA/uB,IAAA,EACA6e,MAAA,EACAC,OAAA,EACA/e,KAAA,MAyBA,IA8TAhJ,GA9TAooC,GAAA,CACA/d,SAAA,GAQAge,OAAA,SAAA7gB,EAAAjgB,GACAigB,EAAAygB,QACAzgB,EAAAygB,MAAA,IAIA1gC,EAAA+gC,UAAA/gC,EAAA+gC,YAAA,EACA/gC,EAAAa,SAAAb,EAAAa,UAAA,MACAb,EAAA+Y,OAAA/Y,EAAA+Y,QAAA,EACAkH,EAAAygB,MAAAnZ,KAAAvnB,IAQAghC,UAAA,SAAA/gB,EAAAghB,GACA,IAAAnnB,EAAAmG,EAAAygB,MAAAzgB,EAAAygB,MAAAplC,QAAA2lC,IAAA,GAEA,IAAAnnB,GACAmG,EAAAygB,MAAA/Y,OAAA7N,EAAA,IAUAonB,UAAA,SAAAjhB,EAAAjgB,EAAAgc,GAMA,IALA,IAGA3C,EAHA9e,EAAA,kCACAohB,EAAAphB,EAAAjD,OACAF,EAAA,EAGYA,EAAAukB,IAAUvkB,EACtBiiB,EAAA9e,EAAAnD,GAEA4kB,EAAApY,eAAAyV,KACArZ,EAAAqZ,GAAA2C,EAAA3C,KAYA2Q,OAAA,SAAA/J,EAAAze,EAAA4e,GACA,GAAAH,EAAA,CAIA,IAAAkhB,EAAAlhB,EAAAjE,QAAA4kB,QAAA,GACAnQ,EAAA/L,GAAA1I,QAAA4H,UAAAud,EAAA1Q,SACA2Q,EAAA3Q,EAAAhvB,KACA4/B,EAAA5Q,EAAAlQ,MACA+gB,EAAA7Q,EAAA/uB,IACA6/B,EAAA9Q,EAAAjQ,OACAghB,EAAApB,GAAAngB,EAAAygB,MAAA,QACAe,EAAArB,GAAAngB,EAAAygB,MAAA,SACAgB,EAAAtB,GAAAngB,EAAAygB,MAAA,OACAiB,EAAAvB,GAAAngB,EAAAygB,MAAA,UACAkB,EAAAxB,GAAAngB,EAAAygB,MAAA,aAEAJ,GAAAkB,GAAA,GACAlB,GAAAmB,GAAA,GACAnB,GAAAoB,GAAA,GACApB,GAAAqB,GAAA,GACA,IA2DAE,EA3DAC,EAAAN,EAAA7pC,OAAA8pC,GACAM,EAAAL,EAAA/pC,OAAAgqC,GACAK,EAAAF,EAAAnqC,OAAAoqC,GAsCAE,EAAAzgC,EAAA4/B,EAAAC,EACAa,EAAA9hB,EAAAkhB,EAAAC,EACAY,EAAAF,EAAA,EAGAG,GAAA5gC,EAAA2gC,GAAAL,EAAAxqC,OAKA+qC,EAAAJ,EACAK,EAAAJ,EACAK,EAAA,CACA7gC,IAAA4/B,EACA7/B,KAAA2/B,EACA5gB,OAAA+gB,EACAhhB,MAAA8gB,GAEAmB,EAAA,GAsBA9d,GAAAtJ,KAAA4mB,EAnBA,SAAArB,GACA,IAAA1H,EACAhF,EAAA0M,EAAA1M,eAEAA,GACAgF,EAAA0H,EAAA3W,OAAA2W,EAAAI,UAAAkB,EAAAI,EAAAH,EAAA,GACAI,GAAArJ,EAAA7Y,SAEA6Y,EAAA0H,EAAA3W,OAAAoY,EAAAE,GACAD,GAAApJ,EAAAz3B,OAGAghC,EAAAjb,KAAA,CACAmK,WAAAuC,EACAzyB,MAAAy3B,EAAAz3B,MACAm/B,UAMAkB,EAhOA,SAAAnB,GACA,IAAAh/B,EAAA,EACAD,EAAA,EACA+e,EAAA,EACAD,EAAA,EAUA,OATAmE,GAAAtJ,KAAAslB,EAAA,SAAAC,GACA,GAAAA,EAAA8B,WAAA,CACA,IAAAC,EAAA/B,EAAA8B,aACA/gC,EAAAlD,KAAA+I,IAAA7F,EAAAghC,EAAAhhC,KACAD,EAAAjD,KAAA+I,IAAA9F,EAAAihC,EAAAjhC,MACA+e,EAAAhiB,KAAA+I,IAAAiZ,EAAAkiB,EAAAliB,QACAD,EAAA/hB,KAAA+I,IAAAgZ,EAAAmiB,EAAAniB,UAGA,CACA7e,MACAD,OACA+e,SACAD,SA8MAoiB,CAAAX,GA4BAtd,GAAAtJ,KAAA0mB,EAAAc,GACAnC,GAAAqB,EAAAS,GAEA7d,GAAAtJ,KAAA2mB,EAAAa,GACAnC,GAAAsB,EAAAQ,GAmBA7d,GAAAtJ,KAAA0mB,EAjBA,SAAAnB,GACA,IAAAkC,EAAAne,GAAAoe,cAAAN,EAAA,SAAAvJ,GACA,OAAAA,EAAA0H,UAEAoC,EAAA,CACAthC,KAAA,EACA8e,MAAA,EACA7e,IAAA6gC,EAAA7gC,IACA8e,OAAA+hB,EAAA/hB,QAGAqiB,GACAlC,EAAA3W,OAAA6Y,EAAArhC,MAAA8gC,EAAAS,KAaAtC,GAAAuB,EANAO,EAAA,CACA7gC,IAAA4/B,EACA7/B,KAAA2/B,EACA5gB,OAAA+gB,EACAhhB,MAAA8gB,IAIA,IAAA2B,EAAAxkC,KAAA+I,IAAAs6B,EAAApgC,KAAA8gC,EAAA9gC,KAAA,GACA8gC,EAAA9gC,MAAAuhC,EACAT,EAAAhiB,OAAA/hB,KAAA+I,IAAAs6B,EAAAthB,MAAAgiB,EAAAhiB,MAAA,GACA,IAAA0iB,EAAAzkC,KAAA+I,IAAAs6B,EAAAngC,IAAA6gC,EAAA7gC,IAAA,GACA6gC,EAAA7gC,KAAAuhC,EACAV,EAAA/hB,QAAAhiB,KAAA+I,IAAAs6B,EAAArhB,OAAA+hB,EAAA/hB,OAAA,GAIA,IAAA0iB,EAAA9iB,EAAAmiB,EAAA7gC,IAAA6gC,EAAA/hB,OACA2iB,EAAA3hC,EAAA+gC,EAAA9gC,KAAA8gC,EAAAhiB,MAEA4iB,IAAAd,GAAAa,IAAAZ,IACA5d,GAAAtJ,KAAA0mB,EAAA,SAAAnB,GACAA,EAAAvgB,OAAA8iB,IAEAxe,GAAAtJ,KAAA2mB,EAAA,SAAApB,GACAA,EAAAI,YACAJ,EAAAn/B,MAAA2hC,KAGAb,EAAAY,EACAb,EAAAc,GAIA,IAAA1hC,EAAA2/B,EAAA4B,EACAthC,EAAA4/B,EAAA2B,EAoBAve,GAAAtJ,KAAAomB,EAAA7pC,OAAA+pC,GAAA0B,GAEA3hC,GAAA4gC,EACA3gC,GAAA4gC,EACA5d,GAAAtJ,KAAAqmB,EAAA2B,GACA1e,GAAAtJ,KAAAumB,EAAAyB,GAEAnjB,EAAAyQ,UAAA,CACAjvB,KAAA8gC,EAAA9gC,KACAC,IAAA6gC,EAAA7gC,IACA6e,MAAAgiB,EAAA9gC,KAAA4gC,EACA7hB,OAAA+hB,EAAA7gC,IAAA4gC,GAGA5d,GAAAtJ,KAAAwmB,EAAA,SAAAjB,GACAA,EAAAl/B,KAAAwe,EAAAyQ,UAAAjvB,KACAk/B,EAAAj/B,IAAAue,EAAAyQ,UAAAhvB,IACAi/B,EAAApgB,MAAAN,EAAAyQ,UAAAnQ,MACAogB,EAAAngB,OAAAP,EAAAyQ,UAAAlQ,OACAmgB,EAAA3W,OAAAqY,EAAAC,KA1HA,SAAAM,EAAAjC,GACA,IAAAkC,EAAAne,GAAAoe,cAAAN,EAAA,SAAAa,GACA,OAAAA,EAAA1C,UAGA,GAAAkC,EACA,GAAAA,EAAAnR,WAAA,CACA,IAAAqR,EAAA,CACAthC,KAAAjD,KAAA+I,IAAAg7B,EAAA9gC,KAAAogC,EAAApgC,MACA8e,MAAA/hB,KAAA+I,IAAAg7B,EAAAhiB,MAAAshB,EAAAthB,OACA7e,IAAA,EACA8e,OAAA,GAIAmgB,EAAA3W,OAAA2W,EAAAI,UAAAkB,EAAAI,EAAAH,EAAA,EAAAa,QAEApC,EAAA3W,OAAA6Y,EAAArhC,MAAA8gC,GAoEA,SAAAc,EAAAzC,GACAA,EAAA1M,gBACA0M,EAAAl/B,KAAAk/B,EAAAI,UAAAK,EAAAmB,EAAA9gC,KACAk/B,EAAApgB,MAAAogB,EAAAI,UAAAv/B,EAAA6/B,EAAAkB,EAAA9gC,KAAA4gC,EACA1B,EAAAj/B,MACAi/B,EAAAngB,OAAA9e,EAAAi/B,EAAAvgB,OAEA1e,EAAAi/B,EAAAngB,SAEAmgB,EAAAl/B,OACAk/B,EAAApgB,MAAA9e,EAAAk/B,EAAAn/B,MACAm/B,EAAAj/B,IAAA6gC,EAAA7gC,IACAi/B,EAAAngB,OAAA+hB,EAAA7gC,IAAA4gC,EAEA7gC,EAAAk/B,EAAApgB,UAqDA+iB,IAJA7qC,GAJA5B,OAAA0sC,OAAA,CACAC,QAJA,w3BAQA/qC,GAAA+qC,SAAA/qC,GAIAgrC,GAAA,WAEAC,GAAAC,uBACAC,GAAAD,yBACAE,GAAAF,2BACAG,GAAA,0CAOAC,GAAA,CACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,GAAAha,EAAAia,GACA,IAAA9tC,EAAA8tB,GAAAigB,SAAAla,EAAAia,GACA/gB,EAAA/sB,KAAA+e,MAAA,qBACA,OAAAgO,EAAA9I,OAAA8I,EAAA,SAAA3mB,EAgEA,IAmBA4nC,KAnBA,WACA,IAAAC,GAAA,EAEA,IACA,IAAA7oB,EAAAnlB,OAAAC,eAAA,GAA4C,WAE5C0vB,IAAA,WACAqe,GAAA,KAGA7qB,OAAA8qB,iBAAA,SAAA9oB,GACK,MAAAvf,IAGL,OAAAooC,EAdA,IAmBA,CACAE,SAAA,GAGA,SAAAC,GAAA9rC,EAAAC,EAAA+uB,GACAhvB,EAAA4rC,iBAAA3rC,EAAA+uB,EAAA0c,IAGA,SAAAK,GAAA/rC,EAAAC,EAAA+uB,GACAhvB,EAAAgsC,oBAAA/rC,EAAA+uB,EAAA0c,IAGA,SAAAO,GAAAhsC,EAAA8mB,EAAAlY,EAAAC,EAAAo9B,GACA,OACAjsC,OACA8mB,QACAye,OAAA0G,GAAA,KACAr9B,OAAA/K,IAAA+K,IAAA,KACAC,OAAAhL,IAAAgL,IAAA,MA2BA,SAAAq9B,GAAAC,GACA,IAAAC,EAAAzmC,SAAAjD,cAAA,OAEA,OADA0pC,EAAAprC,UAAAmrC,GAAA,GACAC,EAsEA,SAAAC,GAAAtsC,EAAAgvB,EAAAjI,GACA,IAAAwlB,EAAAvsC,EAAAuqC,MAAAvqC,EAAAuqC,IAAA,IAEAiC,EAAAD,EAAAC,QArEA,SAAA9G,GACA,IAGA8G,EAAAL,GAAA3B,IACAiC,EAAAN,GAAA3B,GAAA,WACAkC,EAAAP,GAAA3B,GAAA,WACAiC,EAAA1mC,YAAAomC,MACAO,EAAA3mC,YAAAomC,MACAK,EAAAzmC,YAAA0mC,GACAD,EAAAzmC,YAAA2mC,GAEAF,EAAAG,OAAA,WACAF,EAAAG,WAZA,IAaAH,EAAAI,UAbA,IAcAH,EAAAE,WAdA,IAeAF,EAAAG,UAfA,KAkBA,IAAAC,EAAA,WACAN,EAAAG,SAEAjH,KAKA,OAFAoG,GAAAW,EAAA,SAAAK,EAAAprC,KAAA+qC,EAAA,WACAX,GAAAY,EAAA,SAAAI,EAAAprC,KAAAgrC,EAAA,WACAF,EA0CAO,CA7FA,SAAA/qB,EAAAC,GACA,IAAA+qB,GAAA,EACA5hC,EAAA,GACA,kBACAA,EAAAgP,MAAAvY,UAAAwY,MAAA9Y,KAAApD,WACA8jB,KAAAzgB,KAEAwrC,IACAA,GAAA,EACAxhB,GAAAkD,iBAAAntB,KAAAuf,OAAA,WACAksB,GAAA,EACAhrB,EAAAN,MAAAO,EAAA7W,OAkFA6hC,CAAA,WACA,GAAAV,EAAAC,QAAA,CACA,IAAAU,EAAAnmB,EAAAjE,QAAAqqB,qBAAAntC,EAAA8F,WACAyI,EAAA2+B,IAAAE,YAAA,EACApe,EAAAid,GAAA,SAAAllB,IAEAmmB,KAAAE,YAAA7+B,GAAAwY,EAAA5hB,QAQA6pB,EAAAid,GAAA,SAAAllB,SApDA,SAAA/mB,EAAA0lC,GACA,IAAA6G,EAAAvsC,EAAAuqC,MAAAvqC,EAAAuqC,IAAA,IAEA8C,EAAAd,EAAAe,YAAA,SAAA/pC,GACAA,EAAAgqC,gBAAA5C,IACAjF,KAIAla,GAAAtJ,KAAA0oB,GAAA,SAAA3qC,GACA6rC,GAAA9rC,EAAAC,EAAAotC,KAOAd,EAAAiB,SAAAxtC,EAAAytC,aACAztC,EAAAiG,UAAAG,IAAAskC,IAwCAgD,CAAA1tC,EAAA,WACA,GAAAusC,EAAAC,QAAA,CACA,IAAAU,EAAAltC,EAAA8F,WAEAonC,OAAAV,EAAA1mC,YACAonC,EAAAS,aAAAnB,EAAAU,EAAAU,YAIApB,EAAAG,YAKA,SAAAkB,GAAA7tC,GACA,IAAAusC,EAAAvsC,EAAAuqC,KAAA,GACAiC,EAAAD,EAAAC,eACAD,EAAAC,QAtDA,SAAAxsC,GACA,IAAAusC,EAAAvsC,EAAAuqC,KAAA,GACA8C,EAAAd,EAAAe,YAEAD,IACA7hB,GAAAtJ,KAAA0oB,GAAA,SAAA3qC,GACA8rC,GAAA/rC,EAAAC,EAAAotC,YAEAd,EAAAe,aAGAttC,EAAAiG,UAAAC,OAAAwkC,IA4CAoD,CAAA9tC,GAEAwsC,KAAA1mC,YACA0mC,EAAA1mC,WAAAioC,YAAAvB,GAkBA,IAAAwB,GAAA,CAQAC,qBAAA,EAOAC,SAAA,qBAAAptB,QAAA,qBAAAlb,SAKAuoC,cAAA,WACA3sC,KAAA4sC,UAIA5sC,KAAA4sC,SAAA,EAEA5sC,KAAAysC,qBAzCA,SAAAI,EAAAC,GAEA,IAAAlnC,EAAAinC,EAAAE,QAAA3oC,SAAAjD,cAAA,SAEA0rC,EAAAE,SACAF,EAAAE,OAAAnnC,EACAknC,EAAA,mBAAAA,EACAlnC,EAAAonC,aAAA,mBACA5oC,SAAA6oC,qBAAA,WAAA1oC,YAAAqB,IAGAA,EAAArB,YAAAH,SAAA8oC,eAAAJ,IA+BAK,CAAAntC,KAAA4oC,MAGAwE,eAAA,SAAA9nC,EAAA+nC,GACA,kBAAA/nC,EACAA,EAAAlB,SAAAC,eAAAiB,GACOA,EAAA1I,SAEP0I,IAAA,IAGAA,KAAA3B,SAEA2B,IAAA3B,QAMA,IAAAomB,EAAAzkB,KAAAgoC,YAAAhoC,EAAAgoC,WAAA,MAYA,OATAttC,KAAA2sC,gBASA5iB,KAAApmB,SAAA2B,GAzTA,SAAA3B,EAAA0pC,GACA,IAAAznC,EAAAjC,EAAAiC,MAGA2nC,EAAA5pC,EAAA6pC,aAAA,UACAC,EAAA9pC,EAAA6pC,aAAA,SAkBA,GAhBA7pC,EAAAolC,IAAA,CACA2E,QAAA,CACAhoB,OAAA6nB,EACAzmC,MAAA2mC,EACA7nC,MAAA,CACAm8B,QAAAn8B,EAAAm8B,QACArc,OAAA9f,EAAA8f,OACA5e,MAAAlB,EAAAkB,SAOAlB,EAAAm8B,QAAAn8B,EAAAm8B,SAAA,QAEA,OAAA0L,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAA5D,GAAApmC,EAAA,cAEArB,IAAAqrC,IACAhqC,EAAAmD,MAAA6mC,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAA5pC,EAAAiC,MAAA8f,OAIA/hB,EAAA+hB,OAAA/hB,EAAAmD,OAAAumC,EAAA/rB,QAAAssB,aAAA,OACO,CACP,IAAAC,EAAA9D,GAAApmC,EAAA,eAEArB,IAAAqrC,IACAhqC,EAAA+hB,OAAAmoB,IAiRAC,CAAAxoC,EAAA+nC,GACAtjB,GAGA,MAEAgkB,eAAA,SAAAhkB,GACA,IAAApmB,EAAAomB,EAAApmB,OAEA,GAAAA,EAAAolC,IAAA,CAIA,IAAA2E,EAAA/pC,EAAAolC,IAAA2E,QACA,mBAAArwC,QAAA,SAAAshB,GACA,IAAAziB,EAAAwxC,EAAA/uB,GAEAqL,GAAArK,cAAAzjB,GACAyH,EAAAqqC,gBAAArvB,GAEAhb,EAAAqpC,aAAAruB,EAAAziB,KAGA8tB,GAAAtJ,KAAAgtB,EAAA9nC,OAAA,GAAwC,SAAA1J,EAAAD,GACxC0H,EAAAiC,MAAA3J,GAAAC,IAOAyH,EAAAmD,MAAAnD,EAAAmD,aACAnD,EAAAolC,MAEAqB,iBAAA,SAAA7kB,EAAA9mB,EAAA+uB,GACA,IAAA7pB,EAAA4hB,EAAA5hB,OAEA,cAAAlF,EAAA,CAMA,IAAAssC,EAAAvd,EAAAub,MAAAvb,EAAAub,IAAA,IACAkF,EAAAlD,EAAAkD,UAAAlD,EAAAkD,QAAA,IAEApC,EAAAoC,EAAA1oB,EAAA3hB,GAAA,IAAAnF,GAAA,SAAAyvC,GACA1gB,EAzQA,SAAA0gB,EAAA3oB,GACA,IAAA9mB,EAAA4qC,GAAA6E,EAAAzvC,OAAAyvC,EAAAzvC,KACA0vC,EAAAnkB,GAAA+Z,oBAAAmK,EAAA3oB,GACA,OAAAklB,GAAAhsC,EAAA8mB,EAAA4oB,EAAA9gC,EAAA8gC,EAAA7gC,EAAA4gC,GAsQAE,CAAAF,EAAA3oB,KAGA+kB,GAAA3mC,EAAAlF,EAAAotC,QAXAf,GAAAnnC,EAAA6pB,EAAAjI,IAaAilB,oBAAA,SAAAjlB,EAAA9mB,EAAA+uB,GACA,IAAA7pB,EAAA4hB,EAAA5hB,OAEA,cAAAlF,EAAA,CAMA,IAAAssC,EAAAvd,EAAAub,KAAA,GACAkF,EAAAlD,EAAAkD,SAAA,GACApC,EAAAoC,EAAA1oB,EAAA3hB,GAAA,IAAAnF,GAEAotC,GAIAtB,GAAA5mC,EAAAlF,EAAAotC,QAZAQ,GAAA1oC,KA0BAqmB,GAAAqkB,SAAA/D,GAWAtgB,GAAAskB,YAAA/D,GAEA,IAAAgE,GAAA/B,GAAAE,SAAAF,GA7dA,CACAY,eAAA,SAAA9nC,GAMA,OALAA,KAAA3B,SAEA2B,IAAA3B,QAGA2B,KAAAgoC,WAAA,cA6dAT,GAAA7iB,GAAAlI,OAAA,CAIAsI,WAAA,aASAgjB,eAAA,aAQAW,eAAA,aASA3D,iBAAA,aAQAI,oBAAA,cACG+D,IAEHzlB,GAAAT,KAAA,UACAmmB,QAAA,KASA,IAAAC,GAAA,CAKAC,SAAA,GAQAC,SAAA,EAMAC,SAAA,SAAAJ,GACA,IAAAxgC,EAAAhO,KAAA0uC,SACA,GAAAzxC,OAAAuxC,GAAAnxC,QAAA,SAAAwxC,IACA,IAAA7gC,EAAApN,QAAAiuC,IACA7gC,EAAA6e,KAAAgiB,KAGA7uC,KAAA2uC,YAOAG,WAAA,SAAAN,GACA,IAAAxgC,EAAAhO,KAAA0uC,SACA,GAAAzxC,OAAAuxC,GAAAnxC,QAAA,SAAAwxC,GACA,IAAAE,EAAA/gC,EAAApN,QAAAiuC,IAEA,IAAAE,GACA/gC,EAAAif,OAAA8hB,EAAA,KAGA/uC,KAAA2uC,YAOArpB,MAAA,WACAtlB,KAAA0uC,SAAA,GACA1uC,KAAA2uC,YAQApd,MAAA,WACA,OAAAvxB,KAAA0uC,SAAA9xC,QAQAoyC,OAAA,WACA,OAAAhvC,KAAA0uC,UAYAO,OAAA,SAAA1pB,EAAA2pB,EAAAtlC,GACA,IAEAlN,EAAAyyC,EAAAN,EAAAO,EAAAjf,EAFAkf,EAAArvC,KAAAqvC,YAAA9pB,GACAtE,EAAAouB,EAAAzyC,OAGA,IAAAF,EAAA,EAAiBA,EAAAukB,IAAUvkB,EAK3B,GAJAyyC,EAAAE,EAAA3yC,GACAmyC,EAAAM,EAAAN,OAGA,oBAFA1e,EAAA0e,EAAAK,OAGAE,EAAA,CAAA7pB,GAAAtoB,OAAA2M,GAAA,KACAijB,KAAAsiB,EAAA7tB,UAEA,IAAA6O,EAAAjQ,MAAA2uB,EAAAO,IACA,SAKA,UAQAC,YAAA,SAAA9pB,GACA,IAAA+pB,EAAA/pB,EAAAgqB,WAAAhqB,EAAAgqB,SAAA,IAEA,GAAAD,EAAA1rC,KAAA5D,KAAA2uC,SACA,OAAAW,EAAAD,YAGA,IAAAb,EAAA,GACAa,EAAA,GACAhC,EAAA9nB,KAAA8nB,QAAA,GACA/rB,EAAA+rB,EAAA/rB,SAAA+rB,EAAA/rB,QAAAktB,SAAA,GA6BA,OA3BAxuC,KAAA0uC,SAAAzxC,OAAAowC,EAAAmB,SAAA,IAAAnxC,QAAA,SAAAwxC,GACA,IAAAE,EAAAP,EAAA5tC,QAAAiuC,GAEA,QAAAE,EAAA,CAIA,IAAAnrC,EAAAirC,EAAAjrC,GACAw6B,EAAA9c,EAAA1d,IAEA,IAAAw6B,KAIA,IAAAA,IACAA,EAAApU,GAAAvL,MAAAqK,GAAAO,OAAAmlB,QAAA5qC,KAGA4qC,EAAA3hB,KAAAgiB,GACAQ,EAAAxiB,KAAA,CACAgiB,SACAvtB,QAAA8c,GAAA,SAIAkR,EAAAD,cACAC,EAAA1rC,GAAA5D,KAAA2uC,SACAU,GASAG,YAAA,SAAAjqB,UACAA,EAAAgqB,WAGAE,GAAA,CAGAC,aAAA,GAIAtnB,SAAA,GACAunB,kBAAA,SAAAlxC,EAAAmxC,EAAAC,GACA7vC,KAAA0vC,aAAAjxC,GAAAmxC,EACA5vC,KAAAooB,SAAA3pB,GAAAurB,GAAAvL,MAAAoxB,IAEAC,oBAAA,SAAArxC,GACA,OAAAuB,KAAA0vC,aAAAxmC,eAAAzK,GAAAuB,KAAA0vC,aAAAjxC,QAAA6D,GAEAytC,iBAAA,SAAAtxC,GAEA,OAAAuB,KAAAooB,SAAAlf,eAAAzK,GAAAurB,GAAAvI,MAAA,GAAoE,CAAAqH,GAAAzN,MAAArb,KAAAooB,SAAA3pB,KAAA,IAEpEuxC,oBAAA,SAAAvxC,EAAAwxC,GACAjwC,KAEAooB,SAAAlf,eAAAzK,KAFAuB,KAGAooB,SAAA3pB,GAAAurB,GAAAlI,OAHA9hB,KAGAooB,SAAA3pB,GAAAwxC,KAGAC,kBAAA,SAAA3qB,GAEAyE,GAAAtJ,KAAA6E,EAAAiJ,OAAA,SAAAnT,GAEAA,EAAAgrB,UAAAhrB,EAAAiG,QAAA+kB,UACAhrB,EAAAlV,SAAAkV,EAAAiG,QAAAnb,SACAkV,EAAAgD,OAAAhD,EAAAiG,QAAAjD,OACA8nB,GAAAC,OAAA7gB,EAAAlK,OAIA80B,GAAAnmB,GAAA5J,eAEA0I,GAAAT,KAAA,UACA8T,SAAA,CACAiU,SAAA,EACAvf,OAAA,KACAsH,KAAA,UACAhyB,SAAA,UACAm+B,WAAA,EACAz+B,gBAAA,kBACAwqC,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACA9qB,aAAA,EACA+qB,mBAAA,OACAC,eAAA,EACAxgB,YAAA,gBACAC,YAAA,EACAoL,UAAA,CAEAoV,YAAAxnB,GAAAvK,KACA1a,MAAA,SAAA0sC,EAAA7iB,GACA,IAAA7pB,EAAA,GACAo0B,EAAAvK,EAAAuK,OACAuY,EAAAvY,IAAAv8B,OAAA,EAEA,GAAA60C,EAAA70C,OAAA,GACA,IAAA0I,EAAAmsC,EAAA,GAEAnsC,EAAA4zB,MACAn0B,EAAAO,EAAA4zB,MACa5zB,EAAAg3B,OACbv3B,EAAAO,EAAAg3B,OACaoV,EAAA,GAAApsC,EAAA8Z,MAAAsyB,IACb3sC,EAAAo0B,EAAA7zB,EAAA8Z,QAIA,OAAAra,GAEA4sC,WAAA3nB,GAAAvK,KAEAmyB,WAAA5nB,GAAAvK,KAEAoyB,YAAA7nB,GAAAvK,KACAyZ,MAAA,SAAA4E,EAAAlP,GACA,IAAAsK,EAAAtK,EAAAC,SAAAiP,EAAAjQ,cAAAqL,OAAA,GAYA,OAVAA,IACAA,GAAA,MAGAlP,GAAArK,cAAAme,EAAA5hC,OAGAg9B,GAAA4E,EAAAvB,OAFArD,GAAA4E,EAAA5hC,MAKAg9B,GAEA4Y,WAAA,SAAAhU,EAAAvY,GACA,IAAA4I,EAAA5I,EAAAuJ,eAAAgP,EAAAjQ,cACAkkB,EAAA5jB,EAAAS,KAAAkP,EAAA1e,OACA0L,EAAAinB,EAAAxnB,MACA,OACAwG,YAAAjG,EAAAiG,YACAlrB,gBAAAilB,EAAAjlB,kBAGAmsC,eAAA,WACA,OAAAhyC,KAAA88B,SAAA6T,eAEAsB,WAAAjoB,GAAAvK,KAEAyyB,UAAAloB,GAAAvK,KAEA0yB,aAAAnoB,GAAAvK,KACA2yB,OAAApoB,GAAAvK,KACA4yB,YAAAroB,GAAAvK,SAKA,IAAA6yB,GAAA,CAOAC,QAAA,SAAA/hB,GACA,IAAAA,EAAA5zB,OACA,SAGA,IAAAF,EAAAmkB,EACAxT,EAAA,EACAC,EAAA,EACAikB,EAAA,EAEA,IAAA70B,EAAA,EAAAmkB,EAAA2P,EAAA5zB,OAAwCF,EAAAmkB,IAASnkB,EAAA,CACjD,IAAAmuC,EAAAra,EAAA9zB,GAEA,GAAAmuC,KAAAxf,WAAA,CACA,IAAA8iB,EAAAtD,EAAAzf,kBACA/d,GAAA8gC,EAAA9gC,EACAC,GAAA6gC,EAAA7gC,IACAikB,GAIA,OACAlkB,IAAAkkB,EACAjkB,IAAAikB,IAWAiU,QAAA,SAAAhV,EAAAgiB,GACA,IAGA91C,EAAAmkB,EAAA4xB,EAHAplC,EAAAmlC,EAAAnlC,EACAC,EAAAklC,EAAAllC,EACAk3B,EAAArkB,OAAAskB,kBAGA,IAAA/nC,EAAA,EAAAmkB,EAAA2P,EAAA5zB,OAAwCF,EAAAmkB,IAASnkB,EAAA,CACjD,IAAAmuC,EAAAra,EAAA9zB,GAEA,GAAAmuC,KAAAxf,WAAA,CACA,IAAAyO,EAAA+Q,EAAA3X,iBACA31B,EAAAysB,GAAA0oB,sBAAAF,EAAA1Y,GAEAv8B,EAAAinC,IACAA,EAAAjnC,EACAk1C,EAAA5H,IAKA,GAAA4H,EAAA,CACA,IAAAE,EAAAF,EAAArnB,kBACA/d,EAAAslC,EAAAtlC,EACAC,EAAAqlC,EAAArlC,EAGA,OACAD,IACAC,OAKA,SAAAslC,GAAAxiB,EAAAyiB,GAUA,OATAA,IACA7oB,GAAApK,QAAAizB,GAEAj6B,MAAAvY,UAAAwsB,KAAA3M,MAAAkQ,EAAAyiB,GAEAziB,EAAAvD,KAAAgmB,IAIAziB,EAUA,SAAA0iB,GAAAt3B,GACA,yBAAAA,gBAAAu3B,SAAAv3B,EAAA5a,QAAA,SACA4a,EAAA1V,MAAA,MAGA0V,EASA,SAAAw3B,GAAAjjB,GACA,IAAA0M,EAAA1M,EAAAgJ,QACA2D,EAAA3M,EAAAiJ,SAAAjJ,EAAAyQ,OAEAphB,EAAA2Q,EAAAH,OACA/B,EAAAkC,EAAAL,cAEA2L,EAAAtL,EAAArsB,OAAAorB,eAAAjB,GAAAwN,WAEA4X,EAAA5X,EAAAjM,iBAEA8jB,EAAA7X,EAAAlM,iBAEA,OACAmN,OAAAG,IAAA0W,iBAAA/zB,EAAAyO,GAAA,GACA0O,OAAAG,IAAAyW,iBAAA/zB,EAAAyO,GAAA,GACAqL,MAAA+Z,EAAA,GAAAA,EAAAE,iBAAA/zB,EAAAyO,GAAA,GACA3xB,MAAAg3C,EAAA,GAAAA,EAAAC,iBAAA/zB,EAAAyO,GAAA,GACAzO,QACAyO,eACAxgB,EAAA0iB,EAAAvF,OAAAnd,EACAC,EAAAyiB,EAAAvF,OAAAld,GASA,SAAA8lC,GAAAC,GACA,IAAAjqB,EAAAN,GAAAO,OACA,OAEA8nB,SAAAkC,EAAAlC,SACAD,SAAAmC,EAAAnC,SACAoC,OAAAD,EAAAC,OACA3uC,OAAA0uC,EAAA1uC,OAEAgsC,cAAA0C,EAAA1C,cACA4C,gBAAApD,GAAAkD,EAAAG,eAAApqB,EAAAX,mBACAgrB,eAAAtD,GAAAkD,EAAAK,cAAAtqB,EAAAT,kBACAgrB,WAAAN,EAAAzC,UACAgD,aAAAzD,GAAAkD,EAAAO,aAAAxqB,EAAAV,iBACAgoB,YAAA2C,EAAA3C,YAEAF,eAAA6C,EAAA7C,eACAqD,iBAAA1D,GAAAkD,EAAAS,gBAAA1qB,EAAAX,mBACAsrB,gBAAA5D,GAAAkD,EAAAhD,eAAAjnB,EAAAT,kBACAqrB,cAAA7D,GAAAkD,EAAAW,cAAA5qB,EAAAV,iBACAurB,YAAAZ,EAAA5C,WACAH,aAAA+C,EAAA/C,aACAC,kBAAA8C,EAAA9C,kBAEAS,gBAAAqC,EAAArC,gBACAkD,kBAAA/D,GAAAkD,EAAAc,iBAAA/qB,EAAAX,mBACA2rB,iBAAAjE,GAAAkD,EAAAxC,gBAAAznB,EAAAT,kBACA0rB,eAAAlE,GAAAkD,EAAAgB,eAAAjrB,EAAAV,iBACA4rB,aAAAjB,EAAApC,YACAH,cAAAuC,EAAAvC,cACAC,gBAAAsC,EAAAtC,gBAEAM,UAAAgC,EAAAhC,UACA9qB,aAAA8sB,EAAA9sB,aACA1gB,gBAAAwtC,EAAAxtC,gBACArB,QAAA,EACA+vC,sBAAAlB,EAAA/B,mBACAC,cAAA8B,EAAA9B,cACAxgB,YAAAsiB,EAAAtiB,YACAC,YAAAqiB,EAAAriB,aA+MA,SAAAwjB,GAAAriB,EAAAsiB,GACA,iBAAAA,EAAAtiB,EAAA9kB,EAAA8kB,EAAArrB,MAAA,YAAA2tC,EAAAtiB,EAAA9kB,EAAA8kB,EAAArrB,MAAAqrB,EAAAgf,SAAAhf,EAAA9kB,EAAA8kB,EAAAgf,SAOA,SAAAuD,GAAAn0B,GACA,OAAAqyB,GAAA,GAAAE,GAAAvyB,IAGA,IAAAo0B,GAAAppB,GAAAzJ,OAAA,CACAsI,WAAA,WACApqB,KAAAwqB,OAAA4oB,GAAApzC,KAAA88B,UACA98B,KAAA40C,YAAA,IAIAC,SAAA,WACA,IACAzW,EADAp+B,KACA88B,SACAV,EAAAgC,EAAAhC,UACAoV,EAAApV,EAAAoV,YAAAtxB,MAHAlgB,KAGArD,WACAoI,EAAAq3B,EAAAr3B,MAAAmb,MAJAlgB,KAIArD,WACAg1C,EAAAvV,EAAAuV,WAAAzxB,MALAlgB,KAKArD,WACA4I,EAAA,GAIA,OAHAA,EAAAqtC,GAAArtC,EAAAutC,GAAAtB,IACAjsC,EAAAqtC,GAAArtC,EAAAutC,GAAA/tC,IACAQ,EAAAqtC,GAAArtC,EAAAutC,GAAAnB,KAIAmD,cAAA,WACA,OAAAJ,GAAA10C,KAAA88B,SAAAV,UAAAwV,WAAA1xB,MAAAlgB,KAAArD,aAGAo4C,QAAA,SAAAtD,EAAA7iB,GACA,IAAA1M,EAAAliB,KACAo8B,EAAAla,EAAA4a,SAAAV,UACA4Y,EAAA,GAYA,OAXAhrB,GAAAtJ,KAAA+wB,EAAA,SAAA3T,GACA,IAAAmX,EAAA,CACAC,OAAA,GACA3vC,MAAA,GACA4vC,MAAA,IAEAvC,GAAAqC,EAAAC,OAAApC,GAAA1W,EAAAyV,YAAA9xC,KAAAmiB,EAAA4b,EAAAlP,KACAgkB,GAAAqC,EAAA1vC,MAAA62B,EAAAlD,MAAAn5B,KAAAmiB,EAAA4b,EAAAlP,IACAgkB,GAAAqC,EAAAE,MAAArC,GAAA1W,EAAA6V,WAAAlyC,KAAAmiB,EAAA4b,EAAAlP,KACAomB,EAAAnoB,KAAAooB,KAEAD,GAGAI,aAAA,WACA,OAAAV,GAAA10C,KAAA88B,SAAAV,UAAA8V,UAAAhyB,MAAAlgB,KAAArD,aAIA04C,UAAA,WACA,IACAjZ,EADAp8B,KACA88B,SAAAV,UACA+V,EAAA/V,EAAA+V,aAAAjyB,MAFAlgB,KAEArD,WACAy1C,EAAAhW,EAAAgW,OAAAlyB,MAHAlgB,KAGArD,WACA01C,EAAAjW,EAAAiW,YAAAnyB,MAJAlgB,KAIArD,WACA4I,EAAA,GAIA,OAHAA,EAAAqtC,GAAArtC,EAAAutC,GAAAX,IACA5sC,EAAAqtC,GAAArtC,EAAAutC,GAAAV,IACA7sC,EAAAqtC,GAAArtC,EAAAutC,GAAAT,KAGA/iB,OAAA,SAAAgmB,GACA,IA0BA54C,EAAAmkB,EA1BAqB,EAAAliB,KACAo+B,EAAAlc,EAAA4a,SAIAyY,EAAArzB,EAAAsI,OACAI,EAAA1I,EAAAsI,OAAA4oB,GAAAhV,GACA98B,EAAA4gB,EAAAszB,QACA5mB,EAAA1M,EAAAsN,MAEAimB,EAAA,CACAnC,OAAAiC,EAAAjC,OACA3uC,OAAA4wC,EAAA5wC,QAEA+wC,EAAA,CACAroC,EAAAkoC,EAAAloC,EACAC,EAAAioC,EAAAjoC,GAEAqoC,EAAA,CACA7uC,MAAAyuC,EAAAzuC,MACA4e,OAAA6vB,EAAA7vB,QAEA0F,EAAA,CACA/d,EAAAkoC,EAAA7uC,OACA4G,EAAAioC,EAAA3uC,QAIA,GAAAtF,EAAA1E,OAAA,CACAguB,EAAApmB,QAAA,EACA,IAAAkB,EAAA,GACAkwC,EAAA,GACAxqB,EAAAknB,GAAAlU,EAAAj4B,UAAApG,KAAAmiB,EAAA5gB,EAAA4gB,EAAA2zB,gBACA,IAAApE,EAAA,GAEA,IAAA/0C,EAAA,EAAAmkB,EAAAvf,EAAA1E,OAAwCF,EAAAmkB,IAASnkB,EACjD+0C,EAAA5kB,KAAAmmB,GAAA1xC,EAAA5E,KAIA0hC,EAAAlhC,SACAu0C,IAAAv0C,OAAA,SAAAqB,GACA,OAAA6/B,EAAAlhC,OAAAqB,EAAAqwB,MAKAwP,EAAA0X,WACArE,IAAA3L,KAAA,SAAAvnC,EAAAoO,GACA,OAAAyxB,EAAA0X,SAAAv3C,EAAAoO,EAAAiiB,MAKA5E,GAAAtJ,KAAA+wB,EAAA,SAAA3T,GACAp4B,EAAAmnB,KAAAuR,EAAAhC,UAAA0V,WAAA/xC,KAAAmiB,EAAA4b,EAAA5b,EAAAxe,SACAkyC,EAAA/oB,KAAAuR,EAAAhC,UAAA4V,eAAAjyC,KAAAmiB,EAAA4b,EAAA5b,EAAAxe,WAGAknB,EAAA7lB,MAAAmd,EAAA2yB,SAAApD,EAAA7iB,GACAhE,EAAAgnB,WAAA1vB,EAAA4yB,cAAArD,EAAA7iB,GACAhE,EAAA/lB,KAAAqd,EAAA6yB,QAAAtD,EAAA7iB,GACAhE,EAAAsnB,UAAAhwB,EAAAkzB,aAAA3D,EAAA7iB,GACAhE,EAAAwnB,OAAAlwB,EAAAmzB,UAAA5D,EAAA7iB,GAEAhE,EAAAvd,EAAA+d,EAAA/d,EACAud,EAAAtd,EAAA8d,EAAA9d,EACAsd,EAAAwmB,aAAAhT,EAAAgT,aACAxmB,EAAAllB,cACAklB,EAAAgrB,kBAEAhrB,EAAAmrB,WAAAtE,EAEAkE,EAzVA,SAAAxxC,EAAAymB,GACA,IAAApF,EAAArhB,EAAAT,OAAA8hB,IACAE,EAAA,EAAAkF,EAAAsmB,SAEApqC,EAAA,EAEAjC,EAAA+lB,EAAA/lB,KACAmxC,EAAAnxC,EAAAoxC,OAAA,SAAA1kB,EAAA0jB,GACA,OAAA1jB,EAAA0jB,EAAAC,OAAAt4C,OAAAq4C,EAAA1vC,MAAA3I,OAAAq4C,EAAAE,MAAAv4C,QACK,GACLo5C,GAAAprB,EAAAgnB,WAAAh1C,OAAAguB,EAAAsnB,UAAAt1C,OACA,IAAAs5C,EAAAtrB,EAAA7lB,MAAAnI,OACAu5C,EAAAvrB,EAAAwnB,OAAAx1C,OACAo3C,EAAAppB,EAAAopB,cACAJ,EAAAhpB,EAAAgpB,aACAS,EAAAzpB,EAAAypB,eACA3uB,GAAAwwB,EAAAlC,EAEAtuB,GAAAwwB,KAAA,GAAAtrB,EAAA0lB,aAAA,EAEA5qB,GAAAwwB,EAAAtrB,EAAA2lB,kBAAA,EAEA7qB,GAAAswB,EAAApC,EAEAluB,GAAAswB,KAAA,GAAAprB,EAAA8lB,YAAA,EAEAhrB,GAAAywB,EAAAvrB,EAAAmmB,gBAAA,EAEArrB,GAAAywB,EAAA9B,EAEA3uB,GAAAywB,KAAA,GAAAvrB,EAAAkmB,cAAA,EAGA,IAAAsF,EAAA,EAEAC,EAAA,SAAApiB,GACAntB,EAAAhD,KAAA+I,IAAA/F,EAAA0e,EAAA8wB,YAAAriB,GAAAntB,MAAAsvC,IAsBA,OAnBA5wB,EAAA+D,KAAAS,GAAAusB,WAAAvC,EAAAppB,EAAAmpB,gBAAAnpB,EAAAipB,kBACA7pB,GAAAtJ,KAAAkK,EAAA7lB,MAAAsxC,GAEA7wB,EAAA+D,KAAAS,GAAAusB,WAAA3C,EAAAhpB,EAAA6oB,eAAA7oB,EAAA2oB,iBACAvpB,GAAAtJ,KAAAkK,EAAAgnB,WAAA30C,OAAA2tB,EAAAsnB,WAAAmE,GAEAD,EAAAxrB,EAAA2mB,cAAAqC,EAAA,IACA5pB,GAAAtJ,KAAA7b,EAAA,SAAAowC,GACAjrB,GAAAtJ,KAAAu0B,EAAAC,OAAAmB,GACArsB,GAAAtJ,KAAAu0B,EAAA1vC,MAAA8wC,GACArsB,GAAAtJ,KAAAu0B,EAAAE,MAAAkB,KAGAD,EAAA,EAEA5wB,EAAA+D,KAAAS,GAAAusB,WAAAlC,EAAAzpB,EAAAwpB,iBAAAxpB,EAAAspB,mBACAlqB,GAAAtJ,KAAAkK,EAAAwnB,OAAAiE,GAGA,CACAvvC,MAFAA,GAAA,EAAA8jB,EAAAumB,SAGAzrB,UA6RA8wB,CAAAx2C,KAAA4qB,GACA6qB,EAtRA,SAAAtxC,EAAAxF,GACA,IAYA83C,EAAAC,EAEAC,EAAAC,EAEAC,EAhBAjsB,EAAAzmB,EAAAqmB,OACAjF,EAAAphB,EAAAT,OACAsyB,EAAA7xB,EAAAT,OAAAsyB,UACAsd,EAAA,SACA3uC,EAAA,SAEAimB,EAAAtd,EAAA3O,EAAA+mB,OACA/gB,EAAA,MACKimB,EAAAtd,EAAAiY,EAAAG,OAAA/mB,EAAA+mB,SACL/gB,EAAA,UASA,IAAAmyC,GAAA9gB,EAAAjvB,KAAAivB,EAAAnQ,OAAA,EACAkxB,GAAA/gB,EAAAhvB,IAAAgvB,EAAAlQ,QAAA,EAEA,WAAAnhB,GACA8xC,EAAA,SAAAppC,GACA,OAAAA,GAAAypC,GAGAJ,EAAA,SAAArpC,GACA,OAAAA,EAAAypC,KAGAL,EAAA,SAAAppC,GACA,OAAAA,GAAA1O,EAAAmI,MAAA,GAGA4vC,EAAA,SAAArpC,GACA,OAAAA,GAAAkY,EAAAze,MAAAnI,EAAAmI,MAAA,IAIA6vC,EAAA,SAAAtpC,GACA,OAAAA,EAAA1O,EAAAmI,MAAA8jB,EAAAymB,UAAAzmB,EAAAwmB,aAAA7rB,EAAAze,OAGA8vC,EAAA,SAAAvpC,GACA,OAAAA,EAAA1O,EAAAmI,MAAA8jB,EAAAymB,UAAAzmB,EAAAwmB,aAAA,GAGAyF,EAAA,SAAAvpC,GACA,OAAAA,GAAAypC,EAAA,gBAGAN,EAAA7rB,EAAAvd,IACAimC,EAAA,OAEAqD,EAAA/rB,EAAAvd,KACAimC,EAAA,SACA3uC,EAAAkyC,EAAAjsB,EAAAtd,KAEKopC,EAAA9rB,EAAAvd,KACLimC,EAAA,QAEAsD,EAAAhsB,EAAAvd,KACAimC,EAAA,SACA3uC,EAAAkyC,EAAAjsB,EAAAtd,KAIA,IAAA8wB,EAAAj6B,EAAA24B,SACA,OACAwW,OAAAlV,EAAAkV,OAAAlV,EAAAkV,SACA3uC,OAAAy5B,EAAAz5B,OAAAy5B,EAAAz5B,UA+MAqyC,CAAAh3C,KAAA21C,GAEAD,EAzMA,SAAAvjB,EAAAxzB,EAAA82C,EAAAlwB,GAEA,IAAAlY,EAAA8kB,EAAA9kB,EACAC,EAAA6kB,EAAA7kB,EACA+jC,EAAAlf,EAAAkf,UACAD,EAAAjf,EAAAif,aACA7qB,EAAA4L,EAAA5L,aACA+sB,EAAAmC,EAAAnC,OACA3uC,EAAA8wC,EAAA9wC,OACAsyC,EAAA5F,EAAAD,EACA8F,EAAA3wB,EAAA6qB,EAoCA,MAlCA,UAAAkC,EACAjmC,GAAA1O,EAAAmI,MACK,WAAAwsC,KACLjmC,GAAA1O,EAAAmI,MAAA,GAEAnI,EAAAmI,MAAAye,EAAAze,QACAuG,EAAAkY,EAAAze,MAAAnI,EAAAmI,OAGAuG,EAAA,IACAA,EAAA,IAIA,QAAA1I,EACA2I,GAAA2pC,EAEA3pC,GADK,WAAA3I,EACLhG,EAAA+mB,OAAAuxB,EAEAt4C,EAAA+mB,OAAA,EAGA,WAAA/gB,EACA,SAAA2uC,EACAjmC,GAAA4pC,EACO,UAAA3D,IACPjmC,GAAA4pC,GAEK,SAAA3D,EACLjmC,GAAA6pC,EACK,UAAA5D,IACLjmC,GAAA6pC,GAGA,CACA7pC,IACAC,KAyJA6pC,CAAAvsB,EAAA+qB,EAAAF,EAAAvzB,EAAAxe,aAEAknB,EAAApmB,QAAA,EAkBA,OAfAomB,EAAA0oB,OAAAmC,EAAAnC,OACA1oB,EAAAjmB,OAAA8wC,EAAA9wC,OACAimB,EAAAvd,EAAAqoC,EAAAroC,EACAud,EAAAtd,EAAAooC,EAAApoC,EACAsd,EAAA9jB,MAAA6uC,EAAA7uC,MACA8jB,EAAAlF,OAAAiwB,EAAAjwB,OAEAkF,EAAAlkB,OAAA0kB,EAAA/d,EACAud,EAAAhkB,OAAAwkB,EAAA9d,EACA4U,EAAAsI,OAAAI,EAEA0qB,GAAAlX,EAAAvN,QACAuN,EAAAvN,OAAA9wB,KAAAmiB,EAAA0I,GAGA1I,GAEAk1B,UAAA,SAAAC,EAAA14C,GACA,IAAA6mB,EAAAxlB,KAAA0D,OAAA8hB,IACA2M,EAAAnyB,KAAAuqB,MACA+sB,EAAAt3C,KAAAu3C,iBAAAF,EAAA14C,EAAAwzB,GACA3M,EAAAkB,OAAA4wB,EAAAlhB,GAAAkhB,EAAAhhB,IACA9Q,EAAAkB,OAAA4wB,EAAAjhB,GAAAihB,EAAA3oC,IACA6W,EAAAkB,OAAA4wB,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAA14C,EAAAwzB,GACA,IAAAiE,EAAAC,EAAAmhB,EAAAlhB,EAAA3nB,EAAA8oC,EACApG,EAAAlf,EAAAkf,UACA9qB,EAAA4L,EAAA5L,aACA+sB,EAAAnhB,EAAAmhB,OACA3uC,EAAAwtB,EAAAxtB,OACA+yC,EAAAL,EAAAhqC,EACAsqC,EAAAN,EAAA/pC,EACAxG,EAAAnI,EAAAmI,MACA4e,EAAA/mB,EAAA+mB,OAEA,cAAA/gB,EACAgK,EAAAgpC,EAAAjyB,EAAA,EAEA,SAAA4tB,GAEAjd,GADAD,EAAAshB,GACArG,EACAmG,EAAAphB,EACAE,EAAA3nB,EAAA0iC,EACAoG,EAAA9oC,EAAA0iC,IAGAhb,GADAD,EAAAshB,EAAA5wC,GACAuqC,EACAmG,EAAAphB,EACAE,EAAA3nB,EAAA0iC,EACAoG,EAAA9oC,EAAA0iC,QAiBA,GAdA,SAAAiC,GAEAld,GADAC,EAAAqhB,EAAAnxB,EAAA8qB,GACAA,EACAmG,EAAAnhB,EAAAgb,GACS,UAAAiC,GAETld,GADAC,EAAAqhB,EAAA5wC,EAAAyf,EAAA8qB,GACAA,EACAmG,EAAAnhB,EAAAgb,IAEAhb,EAAAlE,EAAAzrB,OACA0vB,EAAAC,EAAAgb,EACAmG,EAAAnhB,EAAAgb,GAGA,QAAA1sC,EAEAgK,GADA2nB,EAAAqhB,GACAtG,EACAoG,EAAAnhB,MACS,CAET3nB,GADA2nB,EAAAqhB,EAAAjyB,GACA2rB,EACAoG,EAAAnhB,EAEA,IAAAshB,EAAAJ,EACAA,EAAAphB,EACAA,EAAAwhB,EAIA,OACAxhB,KACAC,KACAmhB,KACAlhB,KACA3nB,KACA8oC,OAGAI,UAAA,SAAAtW,EAAApP,EAAA3M,GACA,IAAAzgB,EAAAotB,EAAAptB,MAEA,GAAAA,EAAAnI,OAAA,CACA2kC,EAAAl0B,EAAAmnC,GAAAriB,IAAA8hB,aACAzuB,EAAAsyB,UAAA3lB,EAAA8hB,YACAzuB,EAAAuyB,aAAA,MACA,IAIAr7C,EAAAmkB,EAJAmzB,EAAA7hB,EAAA6hB,cACA1D,EAAAne,EAAAme,aAKA,IAJA9qB,EAAAoO,UAAAzB,EAAAqe,eACAhrB,EAAA+D,KAAAS,GAAAusB,WAAAvC,EAAA7hB,EAAA4hB,gBAAA5hB,EAAA0hB,kBAGAn3C,EAAA,EAAAmkB,EAAA9b,EAAAnI,OAAuCF,EAAAmkB,IAASnkB,EAChD8oB,EAAAwyB,SAAAjzC,EAAArI,GAAA6kC,EAAAl0B,EAAAk0B,EAAAj0B,GACAi0B,EAAAj0B,GAAA0mC,EAAA1D,EAEA5zC,EAAA,IAAAqI,EAAAnI,SACA2kC,EAAAj0B,GAAA6kB,EAAAoe,kBAAAD,KAKA2H,SAAA,SAAA1W,EAAApP,EAAA3M,GACA,IAQA0yB,EARAtE,EAAAzhB,EAAAyhB,aACAlD,EAAAve,EAAAue,YACAE,EAAAze,EAAAwhB,WACA9uC,EAAAstB,EAAAttB,KACAszC,EAAAhmB,EAAAof,cACA7rC,EAAAysB,EAAAzsB,YACA0yC,EAAA,EACAC,EAAAF,EAAA3D,GAAAriB,EAAA,UAEA3M,EAAAsyB,UAAAlH,EACAprB,EAAAuyB,aAAA,MACAvyB,EAAA+D,KAAAS,GAAAusB,WAAA3C,EAAAzhB,EAAAshB,eAAAthB,EAAAohB,iBACAhS,EAAAl0B,EAAAmnC,GAAAriB,EAAAye,GAEA,IAAA0H,EAAA,SAAArkB,GACAzO,EAAAwyB,SAAA/jB,EAAAsN,EAAAl0B,EAAA+qC,EAAA7W,EAAAj0B,GACAi0B,EAAAj0B,GAAAsmC,EAAAlD,GAIAlrB,EAAAoO,UAAAzB,EAAAwe,cACA3mB,GAAAtJ,KAAAyR,EAAAyf,WAAA0G,GACAF,EAAAD,GAAA,UAAAvH,EAAA,WAAAA,EAAAgD,EAAA,IAAAA,EAAA,IAEA5pB,GAAAtJ,KAAA7b,EAAA,SAAAowC,EAAAv4C,GACAw7C,EAAA/lB,EAAAyjB,gBAAAl5C,GACA8oB,EAAAoO,UAAAskB,EACAluB,GAAAtJ,KAAAu0B,EAAAC,OAAAoD,GACAtuB,GAAAtJ,KAAAu0B,EAAA1vC,MAAA,SAAA0uB,GAEAkkB,IAEA3yB,EAAAoO,UAAAzB,EAAAoiB,sBACA/uB,EAAAqS,SAAAwgB,EAAA9W,EAAAj0B,EAAAsmC,KAEApuB,EAAAqO,UAAA,EACArO,EAAAuO,YAAAruB,EAAAhJ,GAAAq0B,YACAvL,EAAA+yB,WAAAF,EAAA9W,EAAAj0B,EAAAsmC,KAEApuB,EAAAoO,UAAAluB,EAAAhJ,GAAAmJ,gBACA2f,EAAAqS,SAAAwgB,EAAA,EAAA9W,EAAAj0B,EAAA,EAAAsmC,EAAA,EAAAA,EAAA,GACApuB,EAAAoO,UAAAskB,GAGAI,EAAArkB,KAEAjK,GAAAtJ,KAAAu0B,EAAAE,MAAAmD,KAGAF,EAAA,EAEApuB,GAAAtJ,KAAAyR,EAAA+f,UAAAoG,GACA/W,EAAAj0B,GAAAojC,GAEA8H,WAAA,SAAAjX,EAAApP,EAAA3M,GACA,IAAA4sB,EAAAjgB,EAAAigB,OAEAA,EAAAx1C,SACA2kC,EAAAl0B,EAAAmnC,GAAAriB,IAAAmiB,cACA/S,EAAAj0B,GAAA6kB,EAAA4e,gBACAvrB,EAAAsyB,UAAA3lB,EAAAmiB,aACA9uB,EAAAuyB,aAAA,MACAvyB,EAAAoO,UAAAzB,EAAA6e,gBACAxrB,EAAA+D,KAAAS,GAAAusB,WAAApkB,EAAAkiB,eAAAliB,EAAAiiB,iBAAAjiB,EAAA+hB,mBACAlqB,GAAAtJ,KAAA0xB,EAAA,SAAAne,GACAzO,EAAAwyB,SAAA/jB,EAAAsN,EAAAl0B,EAAAk0B,EAAAj0B,GACAi0B,EAAAj0B,GAAA6kB,EAAAkiB,eAAAliB,EAAA2e,kBAIA2H,eAAA,SAAAlX,EAAApP,EAAA3M,EAAAmwB,GACAnwB,EAAAoO,UAAAzB,EAAAtsB,gBACA2f,EAAAuO,YAAA5B,EAAApB,YACAvL,EAAAqO,UAAA1B,EAAAnB,YACA,IAAAsiB,EAAAnhB,EAAAmhB,OACA3uC,EAAAwtB,EAAAxtB,OACA0I,EAAAk0B,EAAAl0B,EACAC,EAAAi0B,EAAAj0B,EACAxG,EAAA6uC,EAAA7uC,MACA4e,EAAAiwB,EAAAjwB,OACAE,EAAAuM,EAAA5L,aACAf,EAAAiB,YACAjB,EAAAO,OAAA1Y,EAAAuY,EAAAtY,GAEA,QAAA3I,GACA3E,KAAAo3C,UAAA7V,EAAAoU,GAGAnwB,EAAAkB,OAAArZ,EAAAvG,EAAA8e,EAAAtY,GACAkY,EAAAkzB,iBAAArrC,EAAAvG,EAAAwG,EAAAD,EAAAvG,EAAAwG,EAAAsY,GAEA,WAAAjhB,GAAA,UAAA2uC,GACAtzC,KAAAo3C,UAAA7V,EAAAoU,GAGAnwB,EAAAkB,OAAArZ,EAAAvG,EAAAwG,EAAAoY,EAAAE,GACAJ,EAAAkzB,iBAAArrC,EAAAvG,EAAAwG,EAAAoY,EAAArY,EAAAvG,EAAA8e,EAAAtY,EAAAoY,GAEA,WAAA/gB,GACA3E,KAAAo3C,UAAA7V,EAAAoU,GAGAnwB,EAAAkB,OAAArZ,EAAAuY,EAAAtY,EAAAoY,GACAF,EAAAkzB,iBAAArrC,EAAAC,EAAAoY,EAAArY,EAAAC,EAAAoY,EAAAE,GAEA,WAAAjhB,GAAA,SAAA2uC,GACAtzC,KAAAo3C,UAAA7V,EAAAoU,GAGAnwB,EAAAkB,OAAArZ,EAAAC,EAAAsY,GACAJ,EAAAkzB,iBAAArrC,EAAAC,EAAAD,EAAAuY,EAAAtY,GACAkY,EAAAS,YACAT,EAAAoB,OAEAuL,EAAAnB,YAAA,GACAxL,EAAAqB,UAGA4J,KAAA,WACA,IAAAjL,EAAAxlB,KAAA0D,OAAA8hB,IACA2M,EAAAnyB,KAAAuqB,MAEA,OAAA4H,EAAA3tB,QAAA,CAIA,IAAAmxC,EAAA,CACA7uC,MAAAqrB,EAAArrB,MACA4e,OAAAyM,EAAAzM,QAEA6b,EAAA,CACAl0B,EAAA8kB,EAAA9kB,EACAC,EAAA6kB,EAAA7kB,GAGA9I,EAAAV,KAAA0xB,IAAArD,EAAA3tB,QAAA,QAAA2tB,EAAA3tB,QAEAm0C,EAAAxmB,EAAAptB,MAAAnI,QAAAu1B,EAAAyf,WAAAh1C,QAAAu1B,EAAAttB,KAAAjI,QAAAu1B,EAAA+f,UAAAt1C,QAAAu1B,EAAAigB,OAAAx1C,OAEAoD,KAAA88B,SAAAsT,SAAAuI,IACAnzB,EAAA2B,OACA3B,EAAAozB,YAAAp0C,EAEAxE,KAAAy4C,eAAAlX,EAAApP,EAAA3M,EAAAmwB,GAEApU,EAAAj0B,GAAA6kB,EAAA+e,SAEAlxC,KAAA63C,UAAAtW,EAAApP,EAAA3M,GAEAxlB,KAAAi4C,SAAA1W,EAAApP,EAAA3M,GAEAxlB,KAAAw4C,WAAAjX,EAAApP,EAAA3M,GACAA,EAAA8B,aAUAuxB,YAAA,SAAA92C,GACA,IAAAmgB,EAAAliB,KACAshB,EAAAY,EAAA4a,SACAwY,GAAA,EAyBA,OAxBApzB,EAAA0yB,YAAA1yB,EAAA0yB,aAAA,GAEA,aAAA7yC,EAAAtD,KACAyjB,EAAAszB,QAAA,GAEAtzB,EAAAszB,QAAAtzB,EAAAxe,OAAAo1C,0BAAA/2C,EAAAuf,EAAA6W,KAAA7W,IAIAg0B,GAAAtrB,GAAAlJ,YAAAoB,EAAAszB,QAAAtzB,EAAA0yB,gBAGA1yB,EAAA0yB,YAAA1yB,EAAAszB,SAEAl0B,EAAA8uB,SAAA9uB,EAAAuP,UACA3O,EAAA2zB,eAAA,CACAxoC,EAAAtL,EAAAsL,EACAC,EAAAvL,EAAAuL,GAEA4U,EAAAoN,QAAA,GACApN,EAAAoI,UAIAgrB,KAOAyD,GAAAzG,GACA0G,GAAArE,GACAqE,GAAA1G,YAAAyG,GACA,IAAAE,GAAAjvB,GAAA5J,eAuBA,SAAA84B,KAGA,OAAAlvB,GAAAvI,MAAA,GAA6B,GAAA5I,MAAA9Y,KAAApD,WAAA,CAC7BklB,OAAA,SAAA5lB,EAAAQ,EAAAI,EAAAykB,GACA,aAAArlB,GAAA,UAAAA,EAAA,CACA,IACAS,EAAA+B,EAAA4c,EADA89B,EAAAt8C,EAAAZ,GAAAW,OAOA,IAJAH,EAAAR,KACAQ,EAAAR,GAAA,IAGAS,EAAA,EAAqBA,EAAAy8C,IAAUz8C,EAC/B2e,EAAAxe,EAAAZ,GAAAS,GACA+B,EAAAw6C,GAAA59B,EAAA5c,KAAA,UAAAxC,EAAA,qBAEAS,GAAAD,EAAAR,GAAAW,QACAH,EAAAR,GAAA4wB,KAAA,KAGApwB,EAAAR,GAAAS,GAAA+B,MAAA4c,EAAA5c,MAAA4c,EAAA5c,OAAAhC,EAAAR,GAAAS,GAAA+B,KAGAurB,GAAAvI,MAAAhlB,EAAAR,GAAAS,GAAA,CAAA+yC,GAAAM,iBAAAtxC,GAAA4c,IAGA2O,GAAAvI,MAAAhlB,EAAAR,GAAAS,GAAA2e,QAIA2O,GAAA3I,QAAAplB,EAAAQ,EAAAI,EAAAykB,MAYA,SAAA83B,KAGA,OAAApvB,GAAAvI,MAAA,GAA6B,GAAA5I,MAAA9Y,KAAApD,WAAA,CAC7BklB,OAAA,SAAA5lB,EAAAQ,EAAAI,EAAAykB,GACA,IAAAC,EAAA9kB,EAAAR,IAAA,GACAulB,EAAA3kB,EAAAZ,GAEA,WAAAA,EAEAQ,EAAAR,GAAAi9C,GAAA33B,EAAAC,GACS,UAAAvlB,EAETQ,EAAAR,GAAA+tB,GAAAvI,MAAAF,EAAA,CAAAkuB,GAAAM,iBAAAvuB,EAAA/iB,MAAA+iB,IAEAwI,GAAA3I,QAAAplB,EAAAQ,EAAAI,EAAAykB,MA+BA,SAAA+3B,GAAAlzC,GACA,cAAAA,GAAA,WAAAA,EA/GA2iB,GAAAT,KAAA,UACAmI,SAAA,GACA8oB,OAAA,0DACAvxC,MAAA,CACAwxC,QAAA,KACAphB,KAAA,UACAmM,WAAA,EACAkV,kBAAA,KAEA53C,QAAA,KACA+pC,qBAAA,EACA3jC,YAAA,EACAyxC,4BAAA,IAsGA,IAAAC,GAAA,SAAAp0C,EAAA+nC,GAEA,OADArtC,KAAA25C,UAAAr0C,EAAA+nC,GACArtC,MAGAgqB,GAAAlI,OAAA43B,GAAAr5C,UAEA,CAIAs5C,UAAA,SAAAr0C,EAAA+nC,GACA,IAAAnrB,EAAAliB,KACAqtC,EA1CA,SAAAA,GAIA,IAAAze,GAHAye,KAAA,IAGAze,KAAAye,EAAAze,MAAA,GAIA,OAHAA,EAAAC,SAAAD,EAAAC,UAAA,GACAD,EAAAuK,OAAAvK,EAAAuK,QAAA,GACAkU,EAAA/rB,QAAA83B,GAAAtwB,GAAAO,OAAAP,GAAAukB,EAAA5uC,MAAA4uC,EAAA/rB,SAAA,IACA+rB,EAkCAuM,CAAAvM,GACA,IAAAtjB,EAAA8iB,GAAAO,eAAA9nC,EAAA+nC,GACA1pC,EAAAomB,KAAApmB,OACA+hB,EAAA/hB,KAAA+hB,OACA5e,EAAAnD,KAAAmD,MACAob,EAAAte,GAAAomB,GAAAtK,MACAwC,EAAAsD,IAAAuE,EACA7H,EAAAve,SACAue,EAAAmrB,SACAnrB,EAAApb,QACAob,EAAAwD,SACAxD,EAAA0rB,YAAAloB,EAAA5e,EAAA4e,EAAA,KACAxD,EAAAZ,QAAA+rB,EAAA/rB,QACAY,EAAA23B,iBAAA,EAUA33B,EAAAqD,MAAArD,EACAA,EAAAmZ,WAAAnZ,EAGAw3B,GAAAI,UAAA53B,EAAAte,IAAAse,EAEA/lB,OAAAC,eAAA8lB,EAAA,QACA4J,IAAA,WACA,OAAA5J,EAAAmrB,OAAAze,MAEA7C,IAAA,SAAA7vB,GACAgmB,EAAAmrB,OAAAze,KAAA1yB,KAIA6tB,GAAApmB,GASAue,EAAAkI,aACAlI,EAAAoN,UALA1Q,QAAAC,MAAA,sEAWAuL,WAAA,WACA,IAAAlI,EAAAliB,KAiBA,OAfAyuC,GAAAQ,OAAA/sB,EAAA,cACA8H,GAAA+vB,YAAA73B,IAAAZ,QAAA04B,kBACA93B,EAAA+3B,aAEA/3B,EAAAZ,QAAAtZ,YAEAka,EAAAg4B,QAAA,GAIAh4B,EAAAi4B,sBACAj4B,EAAAk4B,sBACAl4B,EAAAm4B,cAEA5L,GAAAQ,OAAA/sB,EAAA,aACAA,GAEAoD,MAAA,WAEA,OADA0E,GAAArmB,OAAA2hB,MAAAtlB,MACAA,MAEAs6C,KAAA,WAGA,OADAluB,GAAAW,gBAAA/sB,MACAA,MAEAk6C,OAAA,SAAAK,GACA,IAAAr4B,EAAAliB,KACAshB,EAAAY,EAAAZ,QACA3d,EAAAue,EAAAve,OACAiqC,EAAAtsB,EAAAqqB,qBAAAzpB,EAAA0rB,aAAA,KAIA4M,EAAA12C,KAAA+I,IAAA,EAAA/I,KAAAgK,MAAAkc,GAAAywB,gBAAA92C,KACA+2C,EAAA52C,KAAA+I,IAAA,EAAA/I,KAAAgK,MAAA8/B,EAAA4M,EAAA5M,EAAA5jB,GAAA2wB,iBAAAh3C,KAEA,IAAAue,EAAApb,QAAA0zC,GAAAt4B,EAAAwD,SAAAg1B,KAIA/2C,EAAAmD,MAAAob,EAAApb,MAAA0zC,EACA72C,EAAA+hB,OAAAxD,EAAAwD,OAAAg1B,EACA/2C,EAAAiC,MAAAkB,MAAA0zC,EAAA,KACA72C,EAAAiC,MAAA8f,OAAAg1B,EAAA,KACA1wB,GAAA+vB,YAAA73B,EAAAZ,EAAA04B,mBAEAO,GAAA,CAEA,IAAAK,EAAA,CACA9zC,MAAA0zC,EACA90B,OAAAg1B,GAEAjM,GAAAQ,OAAA/sB,EAAA,UAAA04B,IAEAt5B,EAAAu5B,UACAv5B,EAAAu5B,SAAA34B,EAAA04B,GAGA14B,EAAAo4B,OACAp4B,EAAAoN,OAAA,CACArD,SAAA3K,EAAAm4B,gCAIAU,oBAAA,WACA,IAAA74B,EAAAthB,KAAAshB,QACAw5B,EAAAx5B,EAAAkN,QAAA,GACAusB,EAAAz5B,EAAAjG,MACA2O,GAAAtJ,KAAAo6B,EAAArsB,MAAA,SAAAusB,EAAA57B,GACA47B,EAAAp3C,GAAAo3C,EAAAp3C,IAAA,UAAAwb,IAEA4K,GAAAtJ,KAAAo6B,EAAAnsB,MAAA,SAAAssB,EAAA77B,GACA67B,EAAAr3C,GAAAq3C,EAAAr3C,IAAA,UAAAwb,IAGA27B,IACAA,EAAAn3C,GAAAm3C,EAAAn3C,IAAA,UAOAw2C,oBAAA,WACA,IAAAl4B,EAAAliB,KACAshB,EAAAY,EAAAZ,QACAkN,EAAAtM,EAAAsM,QAAA,GACA2W,EAAA,GACA+V,EAAA/+C,OAAAY,KAAAyxB,GAAAynB,OAAA,SAAAj6C,EAAA4H,GAEA,OADA5H,EAAA4H,IAAA,EACA5H,GACO,IAEPslB,EAAAkN,SACA2W,IAAAloC,QAAAqkB,EAAAkN,OAAAC,OAAA,IAAAppB,IAAA,SAAA21C,GACA,OACA15B,QAAA05B,EACAG,MAAA,WACAC,UAAA,aAES95B,EAAAkN,OAAAG,OAAA,IAAAtpB,IAAA,SAAA41C,GACT,OACA35B,QAAA25B,EACAE,MAAA,SACAC,UAAA,YAKA95B,EAAAjG,OACA8pB,EAAAtY,KAAA,CACAvL,UAAAjG,MACA8/B,MAAA,eACAE,WAAA,EACAD,UAAA,cAIApxB,GAAAtJ,KAAAykB,EAAA,SAAA7/B,GACA,IAAAy1C,EAAAz1C,EAAAgc,QACA1d,EAAAm3C,EAAAn3C,GACA03C,EAAArC,GAAA8B,EAAAt8C,KAAA6G,EAAA61C,OAEA9B,GAAA0B,EAAA50C,YAAAkzC,GAAA/zC,EAAA81C,aACAL,EAAA50C,SAAAb,EAAA81C,WAGAF,EAAAt3C,IAAA,EACA,IAAAyX,EAAA,KAEA,GAAAzX,KAAA4qB,KAAA5qB,GAAAnF,OAAA68C,GACAjgC,EAAAmT,EAAA5qB,IACA0d,QAAAy5B,EACA1/B,EAAAmK,IAAAtD,EAAAsD,IACAnK,EAAAkK,MAAArD,MACS,CACT,IAAAq5B,EAAA9L,GAAAK,oBAAAwL,GAEA,IAAAC,EACA,OAGAlgC,EAAA,IAAAkgC,EAAA,CACA33C,KACAnF,KAAA68C,EACAh6B,QAAAy5B,EACAv1B,IAAAtD,EAAAsD,IACAD,MAAArD,IAEAsM,EAAAnT,EAAAzX,IAAAyX,EAGAA,EAAAmgC,oBAIAl2C,EAAA+1C,YACAn5B,EAAA7G,WAIA2O,GAAAtJ,KAAAw6B,EAAA,SAAAO,EAAA73C,GACA63C,UACAjtB,EAAA5qB,KAGAse,EAAAsM,SACAihB,GAAAS,kBAAAlwC,OAEA07C,yBAAA,WACA,IAAAx5B,EAAAliB,KACA27C,EAAA,GA0BA,OAzBA3xB,GAAAtJ,KAAAwB,EAAA0M,KAAAC,SAAA,SAAAR,EAAAR,GACA,IAAAM,EAAAjM,EAAA4M,eAAAjB,GACApvB,EAAA4vB,EAAA5vB,MAAAyjB,EAAAmrB,OAAA5uC,KASA,GAPA0vB,EAAA1vB,MAAA0vB,EAAA1vB,WACAyjB,EAAA05B,mBAAA/tB,GACAM,EAAAjM,EAAA4M,eAAAjB,IAGAM,EAAA1vB,OAEA0vB,EAAAkN,WACAlN,EAAAkN,WAAAnN,YAAAL,GACAM,EAAAkN,WAAArN,iBACS,CACT,IAAA6tB,EAAArY,GAAArV,EAAA1vB,MAEA,QAAA6D,IAAAu5C,EACA,UAAAC,MAAA,IAAA3tB,EAAA1vB,KAAA,0BAGA0vB,EAAAkN,WAAA,IAAAwgB,EAAA35B,EAAA2L,GACA8tB,EAAA9uB,KAAAsB,EAAAkN,cAEOnZ,GACPy5B,GAOAI,cAAA,WACA,IAAA75B,EAAAliB,KACAgqB,GAAAtJ,KAAAwB,EAAA0M,KAAAC,SAAA,SAAAR,EAAAR,GACA3L,EAAA4M,eAAAjB,GAAAwN,WAAAhM,SACOnN,IAMPmN,MAAA,WACArvB,KAAA+7C,gBACA/7C,KAAAmE,QAAAimB,cAEAkF,OAAA,SAAA+d,GACA,IAAAnrB,EAAAliB,KAeA,GAbAqtC,GAAA,kBAAAA,IAEAA,EAAA,CACAphB,SAAAohB,EACA7gB,KAAA7vB,UAAA,KA1TA,SAAA4oB,GACA,IAAAy2B,EAAAz2B,EAAAjE,QACA0I,GAAAtJ,KAAA6E,EAAAiJ,OAAA,SAAAnT,GACA8qB,GAAAG,UAAA/gB,EAAAlK,KAEA2gC,EAAA5C,GAAAtwB,GAAAO,OAAAP,GAAAvD,EAAA8nB,OAAA5uC,MAAAu9C,GACAz2B,EAAAjE,QAAAiE,EAAA8nB,OAAA/rB,QAAA06B,EACAz2B,EAAA40B,sBACA50B,EAAA60B,sBAEA70B,EAAAphB,QAAA24B,SAAAkf,EAAA7f,SACA5W,EAAAphB,QAAAimB,aAmTA6xB,CAAA/5B,GAGAusB,GAAAe,YAAAttB,IAEA,IAAAusB,GAAAQ,OAAA/sB,EAAA,iBAKAA,EAAA/d,QAAAqrB,MAAAtN,EAAA0M,KAEA,IAAA+sB,EAAAz5B,EAAAw5B,2BAEA1xB,GAAAtJ,KAAAwB,EAAA0M,KAAAC,SAAA,SAAAR,EAAAR,GACA3L,EAAA4M,eAAAjB,GAAAwN,WAAApL,yBACO/N,GACPA,EAAAg6B,eAEAh6B,EAAAZ,QAAA0K,WAAA9J,EAAAZ,QAAA0K,UAAAC,UACAjC,GAAAtJ,KAAAi7B,EAAA,SAAAtgB,GACAA,EAAAhM,UAIAnN,EAAAi6B,iBAGAj6B,EAAA/d,QAAAimB,aAGAlI,EAAAk6B,WAAA,GAEA3N,GAAAQ,OAAA/sB,EAAA,eAEAA,EAAA23B,gBACA33B,EAAAm6B,iBAAA,CACApwB,SAAAohB,EAAAphB,SACAhC,OAAAojB,EAAApjB,OACAuC,KAAA6gB,EAAA7gB,MAGAtK,EAAA3hB,OAAA8sC,KASA6O,aAAA,YAGA,IAAAzN,GAAAQ,OAFAjvC,KAEA,kBAIAmmC,GAAA7W,OAAAtvB,UAAA8G,MAAA9G,KAAA0lB,QASA+oB,GAAAQ,OAfAjvC,KAeA,oBACAyuC,GAAAQ,OAhBAjvC,KAgBA,iBAQAm8C,eAAA,WAGA,QAAA1N,GAAAQ,OAFAjvC,KAEA,yBAIA,QAAAtD,EAAA,EAAAukB,EANAjhB,KAMA4uB,KAAAC,SAAAjyB,OAAqDF,EAAAukB,IAAUvkB,EAN/DsD,KAOAs8C,cAAA5/C,GAGA+xC,GAAAQ,OAVAjvC,KAUA,yBAQAs8C,cAAA,SAAAl9B,GACA,IACA+O,EADAnuB,KACA8uB,eAAA1P,GACAxV,EAAA,CACAukB,OACA/O,UAGA,IAAAqvB,GAAAQ,OAPAjvC,KAOA,uBAAA4J,MAIAukB,EAAAkN,WAAA/L,SACAmf,GAAAQ,OAZAjvC,KAYA,sBAAA4J,MAEArJ,OAAA,SAAA8sC,GACA,IAAAnrB,EAAAliB,KAEAqtC,GAAA,kBAAAA,IAEAA,EAAA,CACAphB,SAAAohB,EACA7gB,KAAA7vB,UAAA,KAIA,IAAA4/C,EAAAr6B,EAAAZ,QAAA0K,UACAC,EAAAgtB,GAAA5L,EAAAphB,SAAAswB,KAAAtwB,UACAO,EAAA6gB,EAAA7gB,KAEA,QAAAiiB,GAAAQ,OAAA/sB,EAAA,iBAIA,IAAAiK,EAAA,SAAAH,GACAyiB,GAAAQ,OAAA/sB,EAAA,eACA8H,GAAAzJ,SAAAg8B,KAAApwB,WAAA,CAAAH,GAAA9J,IAGA,GAAAq6B,GAAAtwB,EAAA,CACA,IAAAD,EAAA,IAAAH,GAAA,CACAH,SAAAO,EAAA,MAEAhC,OAAAojB,EAAApjB,QAAAsyB,EAAAtyB,OACA1pB,OAAA,SAAAglB,EAAAi3B,GACA,IAAAC,EAAAzyB,GAAAC,OAAApH,QAAA25B,EAAAvyB,QACAwB,EAAA+wB,EAAA/wB,YACAixB,EAAAjxB,EAAA+wB,EAAA9wB,SACAnG,EAAAkL,KAAAgsB,EAAAC,KAAAjxB,IAEAE,oBAAA4wB,EAAArwB,WACAN,oBAAAO,IAEAC,GAAAG,aAAArK,EAAA8J,EAAAC,EAAAO,QAEAtK,EAAAuO,OAEAtE,EAAA,IAAAN,GAAA,CACAH,SAAA,EACAnG,MAAArD,KAIA,OAAAA,IAEAuO,KAAA,SAAAF,GACA,IAAArO,EAAAliB,KACAkiB,EAAAoD,QAEA0E,GAAArK,cAAA4Q,KACAA,EAAA,GAGArO,EAAAwI,WAAA6F,GAEArO,EAAApb,OAAA,GAAAob,EAAAwD,QAAA,IAIA,IAAA+oB,GAAAQ,OAAA/sB,EAAA,cAAAqO,MAKAvG,GAAAtJ,KAAAwB,EAAA8jB,MAAA,SAAAC,GACAA,EAAAxV,KAAAvO,EAAA8T,YACO9T,GACPA,EAAAy6B,aAAApsB,GAEArO,EAAA06B,aAAArsB,GAEAke,GAAAQ,OAAA/sB,EAAA,aAAAqO,MAMA7F,WAAA,SAAA6F,GAGA,IAFA,IAEA7zB,EAAA,EAAAukB,GAFAjhB,KAEA4uB,KAAAC,UAAA,IAAAjyB,OAA6DF,EAAAukB,IAAUvkB,EAFvEsD,KAGAm6B,iBAAAz9B,IAHAsD,KAIA8uB,eAAApyB,GAAA2+B,WAAA3Q,WAAA6F,GAJAvwB,KAQAmE,QAAAumB,WAAA6F,IAQAosB,aAAA,SAAApsB,GACA,IAAArO,EAAAliB,KAEA,QAAAyuC,GAAAQ,OAAA/sB,EAAA,sBAAAqO,IAAA,CAKA,QAAA7zB,GAAAwlB,EAAA0M,KAAAC,UAAA,IAAAjyB,OAAA,EAAuDF,GAAA,IAAQA,EAC/DwlB,EAAAiY,iBAAAz9B,IACAwlB,EAAA26B,YAAAngD,EAAA6zB,GAIAke,GAAAQ,OAAA/sB,EAAA,qBAAAqO,MAQAssB,YAAA,SAAAz9B,EAAAmR,GACA,IACApC,EADAnuB,KACA8uB,eAAA1P,GACAxV,EAAA,CACAukB,OACA/O,QACAmR,gBAGA,IAAAke,GAAAQ,OARAjvC,KAQA,qBAAA4J,MAIAukB,EAAAkN,WAAA5K,KAAAF,GACAke,GAAAQ,OAbAjvC,KAaA,oBAAA4J,MAQAgzC,aAAA,SAAArsB,GACA,IACApsB,EADAnE,KACAmE,QACAyF,EAAA,CACAzF,UACAosB,gBAGA,IAAAke,GAAAQ,OAPAjvC,KAOA,qBAAA4J,MAIAzF,EAAAssB,OACAge,GAAAQ,OAZAjvC,KAYA,oBAAA4J,MAOAkzC,kBAAA,SAAA/6C,GACA,OAAAqjC,GAAAC,MAAAC,OAAAtlC,KAAA+B,IAEAg7C,mBAAA,SAAAh7C,GACA,OAAAqjC,GAAAC,MAAAnM,MAAAl5B,KAAA+B,EAAA,CACAuiC,WAAA,KAGA0Y,mBAAA,SAAAj7C,GACA,OAAAqjC,GAAAC,MAAA,UAAArlC,KAAA+B,EAAA,CACAuiC,WAAA,KAGAwU,0BAAA,SAAA/2C,EAAAo2B,EAAA7W,GACA,IAAA6O,EAAAiV,GAAAC,MAAAlN,GAEA,0BAAAhI,EACAA,EAAAnwB,KAAA+B,EAAAuf,GAGA,IAEA27B,kBAAA,SAAAl7C,GACA,OAAAqjC,GAAAC,MAAAhX,QAAAruB,KAAA+B,EAAA,CACAuiC,WAAA,KAGAxV,eAAA,SAAAjB,GACA,IACAQ,EADAruB,KACA4uB,KAAAC,SAAAhB,GAEAQ,EAAA6uB,QACA7uB,EAAA6uB,MAAA,IAGA,IAAA/uB,EAAAE,EAAA6uB,MAPAl9C,KAOA4D,IAeA,OAbAuqB,IACAA,EAAAE,EAAA6uB,MAVAl9C,KAUA4D,IAAA,CACAnF,KAAA,KACAmwB,KAAA,GACAP,QAAA,KACAgN,WAAA,KACAhR,OAAA,KAEAkE,QAAA,KACAG,QAAA,OAIAP,GAEAwU,uBAAA,WAGA,IAFA,IAAApR,EAAA,EAEA70B,EAAA,EAAAukB,EAAAjhB,KAAA4uB,KAAAC,SAAAjyB,OAAuDF,EAAAukB,IAAUvkB,EACjEsD,KAAAm6B,iBAAAz9B,IACA60B,IAIA,OAAAA,GAEA4I,iBAAA,SAAAtM,GACA,IAAAM,EAAAnuB,KAAA8uB,eAAAjB,GAGA,yBAAAM,EAAA9D,QAAA8D,EAAA9D,QAAArqB,KAAA4uB,KAAAC,SAAAhB,GAAAxD,QAEA8yB,eAAA,WACA,OAAAn9C,KAAAshB,QAAA6b,eAAAn9B,OAMA47C,mBAAA,SAAA/tB,GACA,IAAAjqB,EAAA5D,KAAA4D,GACAyqB,EAAAruB,KAAA4uB,KAAAC,SAAAhB,GACAM,EAAAE,EAAA6uB,OAAA7uB,EAAA6uB,MAAAt5C,GAEAuqB,IACAA,EAAAkN,WAAA9L,iBACAlB,EAAA6uB,MAAAt5C,KAGA2rB,QAAA,WACA,IAEA7yB,EAAAukB,EAFAiB,EAAAliB,KACA2D,EAAAue,EAAAve,OAIA,IAFAue,EAAAo4B,OAEA59C,EAAA,EAAAukB,EAAAiB,EAAA0M,KAAAC,SAAAjyB,OAAiDF,EAAAukB,IAAUvkB,EAC3DwlB,EAAA05B,mBAAAl/C,GAGAiH,IACAue,EAAAk7B,eACApzB,GAAArmB,OAAA2hB,MAAApD,GACA2qB,GAAAkB,eAAA7rB,EAAAsD,KACAtD,EAAAve,OAAA,KACAue,EAAAsD,IAAA,MAGAipB,GAAAQ,OAAA/sB,EAAA,kBACAw3B,GAAAI,UAAA53B,EAAAte,KAEAy5C,cAAA,WACA,OAAAr9C,KAAA2D,OAAA25C,UAAAp9B,MAAAlgB,KAAA2D,OAAAhH,YAEA09C,YAAA,WACA,IAAAn4B,EAAAliB,KACAkiB,EAAA/d,QAAA,IAAA60C,GAAA,CACAt1C,OAAAwe,EACAq7B,eAAAr7B,EAEAsN,MAAAtN,EAAA0M,KACAkO,SAAA5a,EAAAZ,QAAA6a,UACOja,IAMP+3B,WAAA,WACA,IAAA/3B,EAAAliB,KACA2tB,EAAAzL,EAAAs7B,WAAA,GAEAhwB,EAAA,WACAtL,EAAAu7B,aAAAv9B,MAAAgC,EAAAvlB,YAGAqtB,GAAAtJ,KAAAwB,EAAAZ,QAAAg4B,OAAA,SAAA76C,GACAouC,GAAAzC,iBAAAloB,EAAAzjB,EAAA+uB,GACAG,EAAAlvB,GAAA+uB,IAIAtL,EAAAZ,QAAAtZ,aACAwlB,EAAA,WACAtL,EAAAg4B,UAGArN,GAAAzC,iBAAAloB,EAAA,SAAAsL,GACAG,EAAAusB,OAAA1sB,IAOA4vB,aAAA,WACA,IAAAl7B,EAAAliB,KACA2tB,EAAAzL,EAAAs7B,WAEA7vB,WAIAzL,EAAAs7B,WACAxzB,GAAAtJ,KAAAiN,EAAA,SAAAH,EAAA/uB,GACAouC,GAAArC,oBAAAtoB,EAAAzjB,EAAA+uB,OAGAkwB,iBAAA,SAAAltB,EAAA2H,EAAAiY,GACA,IACArgB,EAAArzB,EAAAukB,EADAkP,EAAAigB,EAAA,mCAGA,IAAA1zC,EAAA,EAAAukB,EAAAuP,EAAA5zB,OAAyCF,EAAAukB,IAAUvkB,GACnDqzB,EAAAS,EAAA9zB,KAGAsD,KAAA8uB,eAAAiB,EAAAL,eAAA2L,WAAAlL,GAAAJ,IAQA0tB,aAAA,SAAA17C,GACA,IAAAmgB,EAAAliB,KACAmE,EAAA+d,EAAA/d,QAEA,QAAAsqC,GAAAQ,OAAA/sB,EAAA,eAAAngB,IAAA,CAKAmgB,EAAA23B,iBAAA,EACA33B,EAAAm6B,iBAAA,KACA,IAAA/G,EAAApzB,EAAA22B,YAAA92C,GAKAoC,IACAmxC,EAAAnxC,EAAAsmB,OAAAtmB,EAAA00C,YAAA92C,GAAAuzC,EAAAnxC,EAAA00C,YAAA92C,IAGA0sC,GAAAQ,OAAA/sB,EAAA,cAAAngB,IACA,IAAA47C,EAAAz7B,EAAAm6B,iBAkBA,OAhBAsB,EAEAz7B,EAAA3hB,OAAAo9C,GACOrI,IAAApzB,EAAA0K,YAEP1K,EAAAo4B,OAGAp4B,EAAA3hB,OAAA,CACA0rB,SAAA/J,EAAAZ,QAAAvZ,MAAAyxC,kBACAhtB,MAAA,KAIAtK,EAAA23B,iBAAA,EACA33B,EAAAm6B,iBAAA,KACAn6B,IASA22B,YAAA,SAAA92C,GACA,IAAAmgB,EAAAliB,KACAshB,EAAAY,EAAAZ,SAAA,GACAs8B,EAAAt8B,EAAAvZ,MACAutC,GAAA,EAiCA,OAhCApzB,EAAAk6B,WAAAl6B,EAAAk6B,YAAA,GAEA,aAAAr6C,EAAAtD,KACAyjB,EAAA5gB,OAAA,GAEA4gB,EAAA5gB,OAAA4gB,EAAA42B,0BAAA/2C,EAAA67C,EAAAzlB,KAAAylB,GAKA5zB,GAAAzJ,SAAAe,EAAAi4B,SAAAj4B,EAAAvZ,MAAAwxC,QAAA,CAAAx3C,EAAAiiC,OAAA9hB,EAAA5gB,QAAA4gB,GAEA,YAAAngB,EAAAtD,MAAA,UAAAsD,EAAAtD,MACA6iB,EAAA1f,SAEA0f,EAAA1f,QAAA7B,KAAAmiB,EAAAngB,EAAAiiC,OAAA9hB,EAAA5gB,QAKA4gB,EAAAk6B,WAAAx/C,QACAslB,EAAAw7B,iBAAAx7B,EAAAk6B,WAAAwB,EAAAzlB,MAAA,GAIAjW,EAAA5gB,OAAA1E,QAAAghD,EAAAzlB,MACAjW,EAAAw7B,iBAAAx7B,EAAA5gB,OAAAs8C,EAAAzlB,MAAA,GAGAmd,GAAAtrB,GAAAlJ,YAAAoB,EAAA5gB,OAAA4gB,EAAAk6B,YAEAl6B,EAAAk6B,WAAAl6B,EAAA5gB,OACAg0C,KASAoE,GAAAI,UAAA,GACA,IAAA+D,GAAAnE,GAyrBA,SAAAoE,KACA,UAAAhC,MAAA,6GAqBA,SAAAiC,GAAAz8B,GACAthB,KAAAshB,WAAA,GAtsBAo4B,GAAAsE,WAAAtE,GASAA,GAAAuE,MAAA,GASAj0B,GAAAk0B,YAAA9E,GASApvB,GAAAm0B,WAAAjF,GA8qBAlvB,GAAAlI,OAAAi8B,GAAA19C,UAEA,CAMA+9C,QAAAN,GASAO,MAAAP,GASAQ,OAAAR,GAUAl5C,IAAAk5C,GAUAS,KAAAT,GAUAU,QAAAV,GAQAW,MAAAX,GAUAY,QAAA,SAAAxiD,GACA,OAAAA,KAIA6hD,GAAAY,SAAA,SAAAC,GACA50B,GAAAlI,OAAAi8B,GAAA19C,UAAAu+C,IAGA,IACAC,GAAA,CACAC,MAFAf,IASAgB,GAAA,CAKAC,WAAA,CAOA1lC,OAAA,SAAApd,GACA,OAAA8tB,GAAApK,QAAA1jB,KAAA,GAAAA,GAWA4mB,OAAA,SAAAm8B,EAAA7/B,EAAAyb,GAEA,IAAA/tB,EAAA+tB,EAAAj+B,OAAA,EAAAi+B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEA/2B,KAAA0xB,IAAA1oB,GAAA,GACAmyC,IAAAn7C,KAAAgK,MAAAmxC,KAEAnyC,EAAAmyC,EAAAn7C,KAAAgK,MAAAmxC,IAIA,IAAAC,EAAAl1B,GAAAm1B,MAAAr7C,KAAA0xB,IAAA1oB,IACAsyC,EAAA,GAEA,OAAAH,EAAA,CACA,IAAAI,EAAAv7C,KAAA+I,IAAA/I,KAAA0xB,IAAAqF,EAAA,IAAA/2B,KAAA0xB,IAAAqF,IAAAj+B,OAAA,KAEA,GAAAyiD,EAAA,MAEA,IAAAC,EAAAt1B,GAAAm1B,MAAAr7C,KAAA0xB,IAAAypB,IACAG,EAAAH,EAAAM,cAAAz7C,KAAAgK,MAAAwxC,GAAAx7C,KAAAgK,MAAAoxC,QACW,CACX,IAAAM,GAAA,EAAA17C,KAAAgK,MAAAoxC,GACAM,EAAA17C,KAAA+I,IAAA/I,KAAA8I,IAAA4yC,EAAA,OAEAJ,EAAAH,EAAAQ,QAAAD,SAGAJ,EAAA,IAGA,OAAAA,GAEAM,YAAA,SAAAT,EAAA7/B,EAAAyb,GACA,IAAA8kB,EAAAV,EAAAn7C,KAAAsJ,IAAA,GAAAtJ,KAAAgK,MAAAkc,GAAAm1B,MAAAF,KAEA,WAAAA,EACA,IACS,IAAAU,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAvgC,OAAAyb,EAAAj+B,OAAA,EACTqiD,EAAAM,gBAGA,MAIAK,GAAA51B,GAAA5J,eACAE,GAAA0J,GAAA1J,sBAsDA,SAAAu/B,GAAAhlB,GACA,IACAn+B,EAAAukB,EADAkY,EAAA,GAGA,IAAAz8B,EAAA,EAAAukB,EAAA4Z,EAAAj+B,OAAoCF,EAAAukB,IAAUvkB,EAC9Cy8B,EAAAtM,KAAAgO,EAAAn+B,GAAAw8B,OAGA,OAAAC,EAmBA,SAAA2mB,GAAA/1B,EAAAg2B,EAAAx2B,GACA,OAAAS,GAAApK,QAAAmgC,GAAA/1B,GAAAg2B,YAAAj2B,EAAAR,EAAAw2B,GAAAh2B,EAAAusB,YAAAyJ,GAAAj5C,MAhFAgiB,GAAAT,KAAA,SACA0Z,SAAA,EACA57B,SAAA,OACAmyB,QAAA,EAEAC,UAAA,CACAwJ,SAAA,EACAtgC,MAAA,qBACAoyB,UAAA,EACAosB,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,mBAAA,GACAC,yBAAA,EACAhoB,iBAAA,EACArE,WAAA,GACAC,iBAAA,GAGAqsB,WAAA,CAEA1e,SAAA,EAEA2e,YAAA,GAEA3qB,QAAA,CACA/uB,IAAA,EACA8e,OAAA,IAIA+U,MAAA,CACAqH,aAAA,EACAye,YAAA,EACAC,YAAA,GACAC,QAAA,EACA9qB,QAAA,EACAnV,SAAA,EACAmhB,SAAA,EACA+e,UAAA,EACAC,gBAAA,EACAC,YAAA,EAEAzgC,SAAAw+B,GAAAC,WAAA1lC,OACA2nC,MAAA,GACAC,MAAA,MAmCA,IAAAC,GAAA51B,GAAAzJ,OAAA,CAOAimB,WAAA,WAEA,OACAhhC,KAFA/G,KAEAohD,aAAA,EACAp6C,IAHAhH,KAGAqhD,YAAA,EACAx7B,MAJA7lB,KAIAshD,cAAA,EACAx7B,OALA9lB,KAKAuhD,eAAA,IAQAzmB,SAAA,WACA,OAAA96B,KAAAwhD,QAKAhG,kBAAA,WACA,IAAA3gB,EAAA76B,KAAAshB,QAAAuZ,MAcA,QAAA5+B,KAZA,IAAA4+B,EAAAomB,QACApmB,EAAAomB,MAAA,CACAlf,SAAA,KAIA,IAAAlH,EAAAqmB,QACArmB,EAAAqmB,MAAA,CACAnf,SAAA,IAIAlH,EACA,UAAA5+B,GAAA,UAAAA,IACA,qBAAA4+B,EAAAomB,MAAAhlD,KACA4+B,EAAAomB,MAAAhlD,GAAA4+B,EAAA5+B,IAGA,qBAAA4+B,EAAAqmB,MAAAjlD,KACA4+B,EAAAqmB,MAAAjlD,GAAA4+B,EAAA5+B,MAKAwlD,aAAA,WACAz3B,GAAAzJ,SAAAvgB,KAAAshB,QAAAmgC,aAAA,CAAAzhD,QAEAsvB,OAAA,SAAAoyB,EAAAC,EAAAC,GACA,IACAllD,EAAAukB,EAAAkY,EAAAD,EAAA2B,EAAAklB,EADA79B,EAAAliB,KA8CA,IA3CAkiB,EAAAu/B,eAEAv/B,EAAAw/B,WACAx/B,EAAAy/B,YACAz/B,EAAA0/B,QAAA53B,GAAAlI,OAAA,CACA/a,KAAA,EACA8e,MAAA,EACA7e,IAAA,EACA8e,OAAA,GACO87B,GACP1/B,EAAA2/B,eAAA,EACA3/B,EAAA4/B,kBAAA,EACA5/B,EAAA6/B,iBAAA7/B,EAAA6/B,kBAAA,GAEA7/B,EAAA8/B,sBACA9/B,EAAA+/B,gBACA//B,EAAAggC,qBAEAhgC,EAAAigC,mBACAjgC,EAAAkgC,sBACAlgC,EAAAmgC,kBAOAngC,EAAAogC,mBAGAznB,EAAA3Y,EAAAqgC,cAAA,GAEA1nB,EAAA3Y,EAAAsgC,gBAAA3nB,MACA3Y,EAAAugC,8BAIAtpB,EAAAjX,EAAAwgC,qBAAA7nB,IAAA3Y,EAAA2Y,MACA3Y,EAAAygC,6BACAzgC,EAAA2Y,MAAA1B,EAIAz8B,EAAA,EAAAukB,EAAAkY,EAAAv8B,OAAuCF,EAAAukB,IAAUvkB,EACjDw8B,EAAAC,EAAAz8B,IACAqjD,EAAAllB,EAAAn+B,IAQAqjD,EAAA7mB,QALA2B,EAAAhO,KAAAkzB,EAAA,CACA7mB,QACAgoB,OAAA,IAkBA,OAXAh/B,EAAAs/B,OAAA3mB,EAEA3Y,EAAA0gC,8BACA1gC,EAAA2gC,wBACA3gC,EAAA4gC,6BAEA5gC,EAAA6gC,YACA7gC,EAAA8gC,MACA9gC,EAAA+gC,WAEA/gC,EAAAghC,cACAhhC,EAAAqc,SAEA2kB,YAAA,WACAl5B,GAAAzJ,SAAAvgB,KAAAshB,QAAA4hC,YAAA,CAAAljD,QAGAgiD,oBAAA,WACAh4B,GAAAzJ,SAAAvgB,KAAAshB,QAAA0gC,oBAAA,CAAAhiD,QAEAiiD,cAAA,WACA,IAAA//B,EAAAliB,KAEAkiB,EAAAqX,gBAEArX,EAAApb,MAAAob,EAAAw/B,SACAx/B,EAAAnb,KAAA,EACAmb,EAAA2D,MAAA3D,EAAApb,QAEAob,EAAAwD,OAAAxD,EAAAy/B,UAEAz/B,EAAAlb,IAAA,EACAkb,EAAA4D,OAAA5D,EAAAwD,QAIAxD,EAAAk/B,YAAA,EACAl/B,EAAAm/B,WAAA,EACAn/B,EAAAo/B,aAAA,EACAp/B,EAAAq/B,cAAA,GAEAW,mBAAA,WACAl4B,GAAAzJ,SAAAvgB,KAAAshB,QAAA4gC,mBAAA,CAAAliD,QAGAmiD,iBAAA,WACAn4B,GAAAzJ,SAAAvgB,KAAAshB,QAAA6gC,iBAAA,CAAAniD,QAEAoiD,oBAAAp4B,GAAAvK,KACA4iC,gBAAA,WACAr4B,GAAAzJ,SAAAvgB,KAAAshB,QAAA+gC,gBAAA,CAAAriD,QAGAsiD,iBAAA,WACAt4B,GAAAzJ,SAAAvgB,KAAAshB,QAAAghC,iBAAA,CAAAtiD,QAEAuiD,WAAAv4B,GAAAvK,KACA+iC,gBAAA,SAAA3nB,GACA,IAAA3Y,EAAAliB,KAEA,OAAAgqB,GAAApK,QAAAib,MAAAj+B,OACAotB,GAAAzJ,SAAA2B,EAAAZ,QAAAkhC,gBAAA,CAAAtgC,EAAA2Y,KAIA3Y,EAAA2Y,MAAA7Q,GAAAzJ,SAAA2B,EAAAZ,QAAAkhC,gBAAA,CAAAtgC,IAAA2Y,SAAA3Y,EAAA2Y,MACAA,IAEA4nB,4BAAA,WACAz4B,GAAAzJ,SAAAvgB,KAAAshB,QAAAmhC,4BAAA,CAAAziD,QAEA0iD,qBAAA,WACA,IAEAS,EAFAnjD,KAEAshB,QAAAuZ,MAFA76B,KAGA66B,MAHA76B,KAGA66B,MAAAx1B,IAAA89C,EAAAC,cAAAD,EAAA5iC,SAAAvgB,OAEA2iD,2BAAA,WACA34B,GAAAzJ,SAAAvgB,KAAAshB,QAAAqhC,2BAAA,CAAA3iD,QAGA4iD,4BAAA,WACA54B,GAAAzJ,SAAAvgB,KAAAshB,QAAAshC,4BAAA,CAAA5iD,QAEA6iD,sBAAA,WACA,IAAA3gC,EAAAliB,KACA+pB,EAAA7H,EAAAsD,IACA29B,EAAAjhC,EAAAZ,QAAAuZ,MACA1B,EAAA0mB,GAAA39B,EAAAs/B,QAGA6B,EAAAr5B,GAAA1I,QAAA6H,WAAAg6B,GAEAp5B,EAAAR,KAAA85B,EAAA3kD,OACA,IAAA4kD,EAAAH,EAAAxC,aAAA,EAEA,GAAAxnB,EAAAv8B,QAAAslB,EAAAZ,QAAAygB,SAAA7f,EAAAqX,eAOA,IANA,IAEAgqB,EAFAC,EAAAx5B,GAAAg2B,YAAAj2B,EAAAs5B,EAAA3kD,OAAAy6B,EAAAjX,EAAA6/B,kBACA0B,EAAAD,EAGAE,EAAAxhC,EAAA6Y,gBAAA,GAAA7Y,EAAA6Y,gBAAA,KAEA0oB,EAAAC,GAAAJ,EAAAH,EAAAvC,aAAA,CACA,IAAA+C,EAAA35B,GAAA45B,UAAAN,GAIA,GAHAC,EAAAz/C,KAAAmL,IAAA00C,GACA7/C,KAAAoL,IAAAy0C,GAEAH,EAAAthC,EAAAy/B,UAAA,CAEA2B,IACA,MAGAA,IACAG,EAAAF,EAAAC,EAIAthC,EAAAohC,iBAEAR,2BAAA,WACA94B,GAAAzJ,SAAAvgB,KAAAshB,QAAAwhC,2BAAA,CAAA9iD,QAGA+iD,UAAA,WACA/4B,GAAAzJ,SAAAvgB,KAAAshB,QAAAyhC,UAAA,CAAA/iD,QAEAgjD,IAAA,WACA,IAAA9gC,EAAAliB,KAEAu+B,EAAArc,EAAAqc,QAAA,CACAz3B,MAAA,EACA4e,OAAA,GAEAyT,EAAA0mB,GAAA39B,EAAAs/B,QACApjB,EAAAlc,EAAAZ,QACA6hC,EAAA/kB,EAAAvD,MACAgpB,EAAAzlB,EAAAqiB,WACAqD,EAAA1lB,EAAA7F,UAEAwJ,EAAA7f,EAAA6hC,aAEA59C,EAAAi4B,EAAAj4B,SACAozB,EAAArX,EAAAqX,eACAyqB,EAAAh6B,GAAA1I,QAAA6H,WACAk6B,EAAAW,EAAAb,GACA/C,EAAAhiB,EAAA7F,UAAA6nB,eAiBA,GAbA7hB,EAAAz3B,MAFAyyB,EAEArX,EAAA+hC,cAAA/hC,EAAAw/B,SAAAx/B,EAAA0/B,QAAA76C,KAAAmb,EAAA0/B,QAAA/7B,MAAA3D,EAAAw/B,SAEA3f,GAAA+hB,EAAA3D,UAAAC,EAAA,EAKA7hB,EAAA7Y,OADA6T,EACAwI,GAAA+hB,EAAA3D,UAAAC,EAAA,EAEAl+B,EAAAy/B,UAIAkC,EAAA9hB,WAAA,CACA,IAAAmiB,EAAAF,EAAAH,GACAM,EAAAn6B,GAAA1I,QAAA4H,UAAA26B,EAAA9tB,SACAquB,EAAAF,EAAAx6B,WAAAy6B,EAAAz+B,OAEA6T,EACAgF,EAAA7Y,QAAA0+B,EAEA7lB,EAAAz3B,OAAAs9C,EAKA,GAAAjB,EAAAphB,WAAA,CACA,IAAAsiB,EAAAr6B,GAAAg2B,YAAA99B,EAAAsD,IAAA69B,EAAA3kD,OAAAy6B,EAAAjX,EAAA6/B,kBACAuC,EAAAt6B,GAAAu6B,mBAAAprB,GACAqrB,EAAA,GAAAnB,EAAA1kD,KACA8lD,EAAAviC,EAAAZ,QAAAuZ,MAAA9E,QAKA,GAHA7T,EAAA2/B,eAAAyC,EACApiC,EAAA4/B,kBAAAuC,EAEA9qB,EAAA,CACA,IAAAoqB,EAAA35B,GAAA45B,UAAA1hC,EAAAohC,eACAC,EAAAz/C,KAAAmL,IAAA00C,GACAe,EAAA5gD,KAAAoL,IAAAy0C,GAEAgB,EAAAD,EAAAL,EAAAhB,EAAA35B,WAAA46B,EAAAE,EAEAjmB,EAAA7Y,OAAA5hB,KAAA8I,IAAAsV,EAAAy/B,UAAApjB,EAAA7Y,OAAAi/B,EAAAF,GACAviC,EAAAsD,IAAA+D,KAAA85B,EAAA3kD,OACA,IAIA0iD,EAAAE,EAJAsD,EAAA9E,GAAA59B,EAAAsD,IAAA2T,EAAA,GAAAkqB,EAAA3kD,QACAmmD,EAAA/E,GAAA59B,EAAAsD,IAAA2T,IAAAv8B,OAAA,GAAAymD,EAAA3kD,QACA8H,EAAA0b,EAAA6Y,gBAAA,GAAA7Y,EAAAnb,KACA+9C,EAAA5iC,EAAA2D,MAAA3D,EAAA6Y,gBAAA5B,EAAAv8B,OAAA,GAIA,IAAAslB,EAAAohC,eACAlC,EAAA,WAAAj7C,EAAAo9C,EAAAqB,EAAArB,EAAAiB,EACAlD,EAAA,WAAAn7C,EAAAo9C,EAAAiB,EAAAjB,EAAAsB,IAEAzD,EAAAwD,EAAA,EACAtD,EAAAuD,EAAA,GAGA3iC,EAAAk/B,YAAAt9C,KAAA+I,IAAAu0C,EAAA56C,EAAA,KAEA0b,EAAAo/B,aAAAx9C,KAAA+I,IAAAy0C,EAAAwD,EAAA,UAIA3B,EAAAtC,OACAwD,EAAA,EAIAA,GAAAI,EAAAD,EAGAjmB,EAAAz3B,MAAAhD,KAAA8I,IAAAsV,EAAAw/B,SAAAnjB,EAAAz3B,MAAAu9C,GACAniC,EAAAm/B,WAAAgC,EAAA1kD,KAAA,EACAujB,EAAAq/B,cAAA8B,EAAA1kD,KAAA,EAIAujB,EAAA6iC,gBACA7iC,EAAApb,MAAAy3B,EAAAz3B,MACAob,EAAAwD,OAAA6Y,EAAA7Y,QAOAq/B,cAAA,WACA,IAAA7iC,EAAAliB,KAEAkiB,EAAA0/B,UACA1/B,EAAAk/B,YAAAt9C,KAAA+I,IAAAqV,EAAAk/B,YAAAl/B,EAAA0/B,QAAA76C,KAAA,GACAmb,EAAAm/B,WAAAv9C,KAAA+I,IAAAqV,EAAAm/B,WAAAn/B,EAAA0/B,QAAA56C,IAAA,GACAkb,EAAAo/B,aAAAx9C,KAAA+I,IAAAqV,EAAAo/B,aAAAp/B,EAAA0/B,QAAA/7B,MAAA,GACA3D,EAAAq/B,cAAAz9C,KAAA+I,IAAAqV,EAAAq/B,cAAAr/B,EAAA0/B,QAAA97B,OAAA,KAGAm9B,SAAA,WACAj5B,GAAAzJ,SAAAvgB,KAAAshB,QAAA2hC,SAAA,CAAAjjD,QAGAu5B,aAAA,WACA,cAAAv5B,KAAAshB,QAAAnb,UAAA,WAAAnG,KAAAshB,QAAAnb,UAEA89C,YAAA,WACA,OAAAjkD,KAAAshB,QAAA+kB,WAGAlL,cAAA,SAAA6pB,GAEA,GAAAh7B,GAAArK,cAAAqlC,GACA,OAAAnoB,IAIA,sBAAAmoB,gBAAA7kC,UAAAJ,SAAAilC,GACA,OAAAnoB,IAIA,GAAAmoB,EACA,GAAAhlD,KAAAu5B,gBACA,QAAAj3B,IAAA0iD,EAAA33C,EACA,OAAArN,KAAAm7B,cAAA6pB,EAAA33C,QAES,QAAA/K,IAAA0iD,EAAA13C,EACT,OAAAtN,KAAAm7B,cAAA6pB,EAAA13C,GAKA,OAAA03C,GAQA7R,iBAAAnpB,GAAAvK,KASAgb,iBAAAzQ,GAAAvK,KAOAwlC,iBAAAj7B,GAAAvK,KAMAsb,gBAAA,SAAA3b,GACA,IAAA8C,EAAAliB,KACAs4B,EAAApW,EAAAZ,QAAAgX,OAEA,GAAApW,EAAAqX,eAAA,CACA,IAAA2rB,EAAAhjC,EAAApb,OAAAob,EAAAk/B,YAAAl/B,EAAAo/B,cACAoC,EAAAwB,EAAAphD,KAAA+I,IAAAqV,EAAAs/B,OAAA5kD,QAAA07B,EAAA,QACA6sB,EAAAzB,EAAAtkC,EAAA8C,EAAAk/B,YAEA9oB,IACA6sB,GAAAzB,EAAA,GAGA,IAAA0B,EAAAljC,EAAAnb,KAAAo+C,EAEA,OADAC,GAAAljC,EAAA+hC,cAAA/hC,EAAA0/B,QAAA76C,KAAA,EAIA,IAAAs+C,EAAAnjC,EAAAwD,QAAAxD,EAAAm/B,WAAAn/B,EAAAq/B,eACA,OAAAr/B,EAAAlb,IAAAoY,GAAAimC,GAAAnjC,EAAAs/B,OAAA5kD,OAAA,KAOAggC,mBAAA,SAAA0oB,GACA,IAAApjC,EAAAliB,KAEA,GAAAkiB,EAAAqX,eAAA,CACA,IAAA2rB,EAAAhjC,EAAApb,OAAAob,EAAAk/B,YAAAl/B,EAAAo/B,cACAiE,EAAAL,EAAAI,EAAApjC,EAAAk/B,YACAgE,EAAAljC,EAAAnb,KAAAw+C,EAEA,OADAH,GAAAljC,EAAA+hC,cAAA/hC,EAAA0/B,QAAA76C,KAAA,EAIA,OAAAmb,EAAAlb,IAAAs+C,EAAApjC,EAAAwD,QAOA4T,aAAA,WACA,OAAAt5B,KAAAy6B,iBAAAz6B,KAAAwlD,iBAEAA,aAAA,WACA,IACA54C,EADA5M,KACA4M,IACAC,EAFA7M,KAEA6M,IACA,OAHA7M,KAGAkiC,YAAA,EAAAt1B,EAAA,GAAAC,EAAA,EAAAA,EAAAD,EAAA,GAAAC,EAAA,EAAAD,EAAA,GAOA64C,UAAA,SAAA5qB,GACA,IAYAn+B,EAAAqjD,EAZA79B,EAAAliB,KACAu5B,EAAArX,EAAAqX,eACAmsB,EAAAxjC,EAAAZ,QAAAuZ,MAAAomB,MACA0E,EAAA9qB,EAAAj+B,OACAgpD,GAAA,EACAC,EAAAH,EAAAI,cAGAC,EAAA7jC,EAAA8jC,aAAAL,EAAA,GAEAM,EAAA1sB,EAAArX,EAAApb,OAAAob,EAAAk/B,YAAAl/B,EAAAo/B,cAAAp/B,EAAAwD,QAAAxD,EAAAm/B,WAAAn/B,EAAAgkC,eACAxnC,EAAA,GAaA,IAVAqnC,EAAAE,IACAL,EAAA,EAAA9hD,KAAAgK,MAAAi4C,EAAAE,IAKAN,EAAAE,IACAD,EAAA9hD,KAAA+I,IAAA+4C,EAAA,EAAA9hD,KAAAgK,MAAA63C,EAAAE,KAGAnpD,EAAA,EAAiBA,EAAAipD,EAAejpD,IAChCqjD,EAAAllB,EAAAn+B,GAEAkpD,EAAA,GAAAlpD,EAAAkpD,EAAA,UAEA7F,EAAA7mB,MAGAxa,EAAAmO,KAAAkzB,GAGA,OAAArhC,GAMAsnC,UAAA,WACA,IAAA9jC,EAAAliB,KACAu5B,EAAArX,EAAAqX,eACAmsB,EAAAxjC,EAAAZ,QAAAuZ,MAAAomB,MAEAkF,EAAAn8B,GAAA45B,UAAA1hC,EAAAohC,eACAr0C,EAAAnL,KAAA0xB,IAAA1xB,KAAAmL,IAAAk3C,IACAj3C,EAAApL,KAAA0xB,IAAA1xB,KAAAoL,IAAAi3C,IACApwB,EAAA2vB,EAAA3E,iBAAA,EACAh0C,EAAAmV,EAAA4/B,kBAAA/rB,GAAA,EAEAstB,EAAAr5B,GAAA1I,QAAA6H,WAAAu8B,GAEAz7C,EAAAiY,EAAA2/B,eAAAwB,EAAA35B,WAAAqM,GAAA,EAEA,OAAAwD,EAAAtvB,EAAAgF,EAAAlC,EAAAmC,EAAAnC,EAAAkC,EAAAhF,EAAAiF,EAAAjF,EAAAiF,EAAAnC,EAAAkC,EAAAhF,EAAAgF,EAAAlC,EAAAmC,GAMA60C,WAAA,WACA,IAGArnD,EAAAukB,EAAAkN,EAFA5I,EADAvlB,KACAulB,MACAwc,EAFA/hC,KAEAshB,QAAAygB,QAGA,YAAAA,EACA,QAAAA,EAIA,IAAArlC,EAAA,EAAAukB,EAAAsE,EAAAqJ,KAAAC,SAAAjyB,OAAoDF,EAAAukB,IAAUvkB,EAC9D,GAAA6oB,EAAA4U,iBAAAz9B,MACAyxB,EAAA5I,EAAAuJ,eAAApyB,IAEA6xB,UAdAvuB,KAcA4D,IAAAuqB,EAAAO,UAdA1uB,KAcA4D,IACA,SAKA,UAOA6sB,KAAA,SAAAuF,GACA,IAAA9T,EAAAliB,KACAshB,EAAAY,EAAAZ,QAEA,GAAAY,EAAA6hC,aAAA,CAIA,IA6BAqC,EAAAC,EAAAC,EA7BA/gC,EAAArD,EAAAqD,MACAwE,EAAA7H,EAAAsD,IACA4D,EAAAN,GAAAO,OACAb,EAAAY,EAAAZ,iBACAk9B,EAAApkC,EAAAuZ,MAAAomB,MACAsF,EAAAjlC,EAAAuZ,MAAAqmB,OAAAwE,EACAntB,EAAAjX,EAAAiX,UACAkoB,EAAAn/B,EAAAm/B,WACAt6C,EAAAmb,EAAAnb,SACAqgD,EAAA,IAAAtkC,EAAAohC,cACAmD,EAAAf,EAAA7E,OACAtnB,EAAArX,EAAAqX,eACAyqB,EAAAh6B,GAAA1I,QAAA6H,WACA0R,EAAA6qB,EAAA3jB,SAAA2jB,EAAA5E,SAAA5+B,EAAAujC,UAAAvjC,EAAA4Y,YAAA5Y,EAAA4Y,WACA4rB,EAAA9G,GAAA8F,EAAAiB,UAAAn+B,GACA66B,EAAAW,EAAA0B,GACAh8B,EAAA25B,EAAA35B,WACAk9B,EAAAhH,GAAA2G,EAAAI,UAAAn+B,GACAq+B,EAAA7C,EAAAuC,GACA9B,EAAAiB,EAAA3vB,QACAirB,EAAA0E,EAAA1E,YACA8F,EAAAvuB,EAAA4nB,UAAA5nB,EAAA6nB,eAAA,EACA2G,EAAAnH,GAAAa,EAAAkG,UAAAn+B,GACA07B,EAAAF,EAAAvD,GACA0D,EAAAn6B,GAAA1I,QAAA4H,UAAAu3B,EAAA1qB,SACAixB,EAAAh9B,GAAA45B,UAAA1hC,EAAAohC,eACA2D,EAAA,GACAC,EAAA3uB,EAAA0nB,WAAA3/B,GAAAiY,EAAA1E,UAAA,OACAszB,EAAAn9B,GAAAo9B,YAoLA,GAjLA,QAAAjhD,GACAigD,EAAAe,EAAA5hC,EAAArD,EAAA4D,OAAAohC,GACAb,EAAAnkC,EAAA4D,OAAAghC,EACAR,EAAAF,EAAAc,EAAA,GACO,WAAA/gD,GACPigD,EAAAe,EAAA5hC,EAAArD,EAAAlb,IAAAkgD,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAApkC,EAAAlb,IAAA8/C,GACO,SAAA3gD,GACPigD,EAAAe,EAAA5hC,EAAArD,EAAA2D,MAAAqhC,GACAb,EAAAnkC,EAAA2D,MAAAihC,EACAR,EAAAF,EAAAc,EAAA,IAEAd,EAAAe,EAAA5hC,EAAArD,EAAAnb,KAAAmgD,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAApkC,EAAAnb,KAAA+/C,GAKA98B,GAAAtJ,KAAAma,EAAA,SAAAklB,EAAA3gC,GAEA,IAAA4K,GAAArK,cAAAogC,EAAA7mB,OAAA,CAIA,IACArF,EAAAwzB,EAAAlzB,EAAAC,EAgBAkzB,EAAAC,EAAAC,EAAAC,EAAArxB,EAAAE,EAAAD,EAAA1nB,EAAA+4C,EAAAC,EAAAC,EAAA9P,EAjBA5e,EAAA6mB,EAAA7mB,MAGA9Z,IAAA8C,EAAA2lC,eAAAvmC,EAAAgX,SAAAC,EAAAC,iBAEA3E,EAAA0E,EAAA8nB,cACAgH,EAAA9uB,EAAA+nB,cACAnsB,EAAAoE,EAAAgoB,oBAAA,GACAnsB,EAAAmE,EAAAioB,0BAAA,IAEA3sB,EAAAvT,GAAAiY,EAAA1E,UAAAzU,GACAioC,EAAA/mC,GAAAiY,EAAA92B,MAAA2d,GACA+U,EAAAoE,EAAApE,YAAA,GACAC,EAAAmE,EAAAnE,kBAAA,GAKA,IAAAsd,EAAA1nB,GAAApK,QAAAsZ,KAAAt8B,OAAA,EACAkrD,EA5qBA,SAAAzsC,EAAA+D,EAAAoZ,GACA,IAAAsvB,EAAAzsC,EAAA0f,gBAAA3b,GAYA,OAVAoZ,IACA,IAAAnd,EAAAyf,WAAAl+B,OACAkrD,GAAAzsC,EAAAke,eAAAz1B,KAAA+I,IAAAi7C,EAAAzsC,EAAAtU,KAAAsU,EAAAwK,MAAAiiC,GAAAhkD,KAAA+I,IAAAi7C,EAAAzsC,EAAArU,IAAAqU,EAAAyK,OAAAgiC,GAEAA,GADO,IAAA1oC,GACP/D,EAAA0f,gBAAA,GAAA+sB,GAAA,GAEAA,EAAAzsC,EAAA0f,gBAAA3b,EAAA,OAIA0oC,EA+pBAC,CAAA7lC,EAAA9C,EAAAmZ,EAAAC,iBAEA,GAAAe,EAAA,CACA,IAAAyuB,EAAAlB,EAAArC,EAEAqD,EAAA5lC,EAAAnb,KAhCA,OAiCAsgD,EAAA,iBAGAC,EAAAE,EAAApxB,EAAAC,EAAA8wB,EAAA5hC,EAAAuiC,EAAAj0B,GACA0zB,EAAAlB,EACAoB,EAAAnB,EACAoB,EAAAxlC,EAAA6Y,gBAAA3b,GAAA4hC,EAEA,QAAA76C,GACAmwB,EAAA6wB,EAAA5hC,EAAAyQ,EAAAhvB,IAAAkgD,KAAA,EACAv4C,EAAAqnB,EAAAlQ,OACA8hC,IAAApB,EAAA,MAAA9U,GAAAhoB,EACAouB,EAAA0O,EAAA,gBACAmB,EAAAzlC,EAAA4D,OAAAkiC,IAEA1xB,EAAAN,EAAAhvB,IACA2H,EAAAw4C,EAAA5hC,EAAAyQ,EAAAlQ,OAAAohC,KAAA,EACAU,GAAApB,EAAA,MAAA98B,EACAouB,EAAA0O,EAAA,iBACAmB,EAAAzlC,EAAAlb,IAAAghD,OAES,CACT,IAAAC,GAAAxB,EAAA,EAAAK,GAAArC,EAEAqD,EAAA5lC,EAAAlb,IAzDA,OA0DAqgD,EAAA,iBAGAC,EAAAjB,EACAmB,EAAAlB,EACAiB,EAAAE,EAAAnxB,EAAA3nB,EAAAw4C,EAAA5hC,EAAAuiC,EAAAj0B,GACA8zB,EAAAzlC,EAAA6Y,gBAAA3b,GAAA4hC,EACA4G,GAAA,EAAAlW,GAAAhoB,EAAA,EAEA,SAAAvjB,GACAiwB,EAAA+wB,EAAA5hC,EAAAyQ,EAAAjvB,KAAAmgD,KAAA,EACA7wB,EAAAL,EAAAnQ,MACAiyB,EAAA2O,EAAA,eACAiB,EAAAxlC,EAAA2D,MAAAoiC,IAEA7xB,EAAAJ,EAAAjvB,KACAsvB,EAAA8wB,EAAA5hC,EAAAyQ,EAAAnQ,MAAAqhC,KAAA,EACApP,EAAA2O,EAAA,eACAiB,EAAAxlC,EAAAnb,KAAAkhD,GAIAhB,EAAAp6B,KAAA,CACAy6B,MACAC,MACAC,MACAC,MACArxB,KACAE,KACAD,KACA1nB,KACA+4C,SACAC,SACAO,QAAAr0B,EACAs0B,QAAAd,EACAe,aAAAj0B,EACAk0B,mBAAAj0B,EACAhO,UAAA,EAAA4gC,EACA9tB,QACAgoB,MAAAnB,EAAAmB,MACA0G,aACA9P,iBAIA9tB,GAAAtJ,KAAAumC,EAAA,SAAAqB,GACA,IAAAJ,EAAAI,EAAAJ,QACAC,EAAAG,EAAAH,QA4BA,GA1BA5vB,EAAAwJ,SAAAmmB,GAAAC,IACAp+B,EAAA5C,OACA4C,EAAA8J,UAAAq0B,EACAn+B,EAAAgK,YAAAo0B,EAEAp+B,EAAAkL,cACAlL,EAAAkL,YAAAqzB,EAAAF,cACAr+B,EAAAmL,eAAAozB,EAAAD,oBAGAt+B,EAAAtD,YAEA8R,EAAA4nB,YACAp2B,EAAAhE,OAAAuiC,EAAAhB,IAAAgB,EAAAf,KACAx9B,EAAArD,OAAA4hC,EAAAd,IAAAc,EAAAb,MAGAlvB,EAAA2nB,kBACAn2B,EAAAhE,OAAAuiC,EAAAlyB,GAAAkyB,EAAAhyB,IACAvM,EAAArD,OAAA4hC,EAAAjyB,GAAAiyB,EAAA35C,KAGAob,EAAAlD,SACAkD,EAAAzC,WAGAo+B,EAAA3jB,QAAA,CAEAhY,EAAA5C,OACA4C,EAAAw+B,UAAAD,EAAAZ,OAAAY,EAAAX,QACA59B,EAAA9L,OAAAqqC,EAAAliC,UACA2D,EAAAR,KAAA++B,EAAApH,MAAA2F,EAAAnoD,OAAA2kD,EAAA3kD,OACAqrB,EAAA6J,UAAA00B,EAAApH,MAAA0F,EAAAF,EACA38B,EAAAguB,aAAA,SACAhuB,EAAA+tB,UAAAwQ,EAAAxQ,UACA,IAAA5e,EAAAovB,EAAApvB,MACA5rB,EAAAg7C,EAAAV,WAEA,GAAA59B,GAAApK,QAAAsZ,GACA,QAAAx8B,EAAA,EAA2BA,EAAAw8B,EAAAt8B,SAAkBF,EAE7CqtB,EAAAiuB,SAAA,GAAA9e,EAAAx8B,GAAA,EAAA4Q,GACAA,GAAAoc,OAGAK,EAAAiuB,SAAA9e,EAAA,EAAA5rB,GAGAyc,EAAAzC,aAIAm5B,EAAA1e,QAAA,CAEA,IAAAymB,EACAC,EACAriC,EAAA,EACAsiC,EAAAxE,EAAAx6B,WAAA,EAEA,GAAA6P,EACAivB,EAAAtmC,EAAAnb,MAAAmb,EAAA2D,MAAA3D,EAAAnb,MAAA,EAEA0hD,EAAA,WAAAtiD,EAAA+b,EAAA4D,OAAA4iC,EAAAvE,EAAAr+B,OAAA5D,EAAAlb,IAAA0hD,EAAAvE,EAAAn9C,QACS,CACT,IAAA2hD,EAAA,SAAAxiD,EACAqiD,EAAAG,EAAAzmC,EAAAnb,KAAA2hD,EAAAvE,EAAAn9C,IAAAkb,EAAA2D,MAAA6iC,EAAAvE,EAAAn9C,IACAyhD,EAAAvmC,EAAAlb,KAAAkb,EAAA4D,OAAA5D,EAAAlb,KAAA,EACAof,EAAAuiC,GAAA,GAAA7kD,KAAAgL,GAAA,GAAAhL,KAAAgL,GAGAib,EAAA5C,OACA4C,EAAAw+B,UAAAC,EAAAC,GACA1+B,EAAA9L,OAAAmI,GACA2D,EAAA+tB,UAAA,SACA/tB,EAAAguB,aAAA,SACAhuB,EAAA6J,UAAAmzB,EAEAh9B,EAAAR,KAAA26B,EAAAxlD,OACAqrB,EAAAiuB,SAAAyI,EAAAC,YAAA,KACA32B,EAAAzC,UAGA,GAAA4/B,EAAA,CAEA,IAEA9wB,EAAAC,EAAAC,EAAA3nB,EAFAi6C,EAAA1B,EACA2B,EAAAvoC,GAAAiY,EAAA1E,UAAAgH,EAAAj+B,OAAA,KAGA28B,GACAnD,EAAA+wB,EAAA5hC,EAAArD,EAAAnb,KAAA6hD,KAAA,EACAvyB,EAAA8wB,EAAA5hC,EAAArD,EAAA2D,MAAAgjC,KAAA,EACAvyB,EAAA3nB,EAAAy3C,IAEA9vB,EAAA6wB,EAAA5hC,EAAArD,EAAAlb,IAAA4hD,KAAA,EACAj6C,EAAAw4C,EAAA5hC,EAAArD,EAAA4D,OAAA+iC,KAAA,EACAzyB,EAAAC,EAAA+vB,GAGAr8B,EAAA8J,UAAAqzB,EACAn9B,EAAAgK,YAAAzT,GAAAiY,EAAA92B,MAAA,GACAsoB,EAAAtD,YACAsD,EAAAhE,OAAAqQ,EAAAE,GACAvM,EAAArD,OAAA2P,EAAA1nB,GACAob,EAAAlD,cAOAiiC,GAAA3H,GAAAr/B,OAAA,CAMAinC,UAAA,WACA,IAAAn6B,EAAA5uB,KAAAulB,MAAAqJ,KACA,OAAA5uB,KAAAshB,QAAA6X,SAAAn5B,KAAAu5B,eAAA3K,EAAAo6B,QAAAp6B,EAAAq6B,UAAAr6B,EAAAuK,QAEAipB,oBAAA,WACA,IAIAp1B,EAJA9K,EAAAliB,KACAm5B,EAAAjX,EAAA6mC,YACA7mC,EAAAgnC,SAAA,EACAhnC,EAAAinC,SAAAhwB,EAAAv8B,OAAA,OAGA0F,IAAA4f,EAAAZ,QAAAuZ,MAAAjuB,MAEAogB,EAAAmM,EAAAv4B,QAAAshB,EAAAZ,QAAAuZ,MAAAjuB,KACAsV,EAAAgnC,UAAA,IAAAl8B,IAAA9K,EAAAgnC,eAGA5mD,IAAA4f,EAAAZ,QAAAuZ,MAAAhuB,MAEAmgB,EAAAmM,EAAAv4B,QAAAshB,EAAAZ,QAAAuZ,MAAAhuB,KACAqV,EAAAinC,UAAA,IAAAn8B,IAAA9K,EAAAinC,UAGAjnC,EAAAtV,IAAAusB,EAAAjX,EAAAgnC,UACAhnC,EAAArV,IAAAssB,EAAAjX,EAAAinC,WAEA5G,WAAA,WACA,IAAArgC,EAAAliB,KACAm5B,EAAAjX,EAAA6mC,YAEA7mC,EAAA2Y,MAAA,IAAA3Y,EAAAgnC,UAAAhnC,EAAAinC,WAAAhwB,EAAAv8B,OAAA,EAAAu8B,IAAAtgB,MAAAqJ,EAAAgnC,SAAAhnC,EAAAinC,SAAA,IAEAhW,iBAAA,SAAA/zB,EAAAyO,GACA,IAAA3L,EAAAliB,KACAulB,EAAArD,EAAAqD,MAEA,OAAAA,EAAAuJ,eAAAjB,GAAAwN,WAAApM,qBAAA/M,EAAAte,GACAse,EAAAiZ,cAAA5V,EAAAqJ,KAAAC,SAAAhB,GAAAe,KAAAxP,IAGA8C,EAAA2Y,MAAAzb,EAAA8C,EAAAgnC,WAGAzuB,iBAAA,SAAAv+B,EAAAkjB,GACA,IAMAgqC,EANAlnC,EAAAliB,KACAs4B,EAAApW,EAAAZ,QAAAgX,OAEA+wB,EAAAvlD,KAAA+I,IAAAqV,EAAAinC,SAAA,EAAAjnC,EAAAgnC,UAAA5wB,EAAA,QASA,QAJAh2B,IAAApG,GAAA,OAAAA,IACAktD,EAAAlnC,EAAAqX,eAAAr9B,EAAAmR,EAAAnR,EAAAoR,QAGAhL,IAAA8mD,QAAA9mD,IAAApG,GAAAof,MAAA8D,GAAA,CACA,IAAA+Z,EAAAjX,EAAA6mC,YACA7sD,EAAAktD,GAAAltD,EACA,IAAA6yC,EAAA5V,EAAAv4B,QAAA1E,GACAkjB,GAAA,IAAA2vB,IAAA3vB,EAGA,GAAA8C,EAAAqX,eAAA,CACA,IAAA+vB,EAAApnC,EAAApb,MAAAuiD,EACAE,EAAAD,GAAAlqC,EAAA8C,EAAAgnC,UAMA,OAJA5wB,IACAixB,GAAAD,EAAA,GAGApnC,EAAAnb,KAAAwiD,EAGA,IAAAC,EAAAtnC,EAAAwD,OAAA2jC,EACAI,EAAAD,GAAApqC,EAAA8C,EAAAgnC,UAMA,OAJA5wB,IACAmxB,GAAAD,EAAA,GAGAtnC,EAAAlb,IAAAyiD,GAEA1uB,gBAAA,SAAA3b,GACA,OAAApf,KAAAy6B,iBAAAz6B,KAAA66B,MAAAzb,KAAApf,KAAAkpD,SAAA,OAEAjE,iBAAA,SAAAE,GACA,IAAAjjC,EAAAliB,KACAs4B,EAAApW,EAAAZ,QAAAgX,OAEA+wB,EAAAvlD,KAAA+I,IAAAqV,EAAAs/B,OAAA5kD,QAAA07B,EAAA,QACAoxB,EAAAxnC,EAAAqX,eACAowB,GAAAD,EAAAxnC,EAAApb,MAAAob,EAAAwD,QAAA2jC,EAaA,OAZAlE,GAAAuE,EAAAxnC,EAAAnb,KAAAmb,EAAAlb,IAEAsxB,IACA6sB,GAAAwE,EAAA,IAGAxE,GAAA,EACA,EAEArhD,KAAAoV,MAAAisC,EAAAwE,IAGAznC,EAAAgnC,UAEA5vB,aAAA,WACA,OAAAt5B,KAAA8lB,UAIA8jC,GAzHA,CACAzjD,SAAA,UAyHA2iD,GAAAc,aACA,IAAAnqC,GAAAuK,GAAAvK,KACAE,GAAAqK,GAAArK,cAgFAkqC,GAAA1I,GAAAr/B,OAAA,CACAqZ,cAAA,SAAAj/B,GACA,wBAAAA,GACAA,EAGAilD,GAAA9gD,UAAA86B,cAAAp7B,KAAAC,KAAA9D,IAEA4tD,uBAAA,WACA,IAAA5nC,EAAAliB,KACAo+B,EAAAlc,EAAAZ,QACA6hC,EAAA/kB,EAAAvD,MAIA,GAAAsoB,EAAAjhB,YAAA,CACA,IAAA6nB,EAAA//B,GAAAggC,KAAA9nC,EAAAtV,KACAq9C,EAAAjgC,GAAAggC,KAAA9nC,EAAArV,KAEAk9C,EAAA,GAAAE,EAAA,EAEA/nC,EAAArV,IAAA,EACSk9C,EAAA,GAAAE,EAAA,IAET/nC,EAAAtV,IAAA,GAIA,IAAAs9C,OAAA5nD,IAAA6gD,EAAAv2C,UAAAtK,IAAA6gD,EAAAgH,aACAC,OAAA9nD,IAAA6gD,EAAAt2C,UAAAvK,IAAA6gD,EAAAkH,kBAEA/nD,IAAA6gD,EAAAv2C,IACAsV,EAAAtV,IAAAu2C,EAAAv2C,SACOtK,IAAA6gD,EAAAgH,eACP,OAAAjoC,EAAAtV,IACAsV,EAAAtV,IAAAu2C,EAAAgH,aAEAjoC,EAAAtV,IAAA9I,KAAA8I,IAAAsV,EAAAtV,IAAAu2C,EAAAgH,oBAIA7nD,IAAA6gD,EAAAt2C,IACAqV,EAAArV,IAAAs2C,EAAAt2C,SACOvK,IAAA6gD,EAAAkH,eACP,OAAAnoC,EAAArV,IACAqV,EAAArV,IAAAs2C,EAAAkH,aAEAnoC,EAAArV,IAAA/I,KAAA+I,IAAAqV,EAAArV,IAAAs2C,EAAAkH,eAIAH,IAAAE,GAKAloC,EAAAtV,KAAAsV,EAAArV,MACAq9C,EACAhoC,EAAArV,IAAAqV,EAAAtV,IAAA,EAEAsV,EAAAtV,IAAAsV,EAAArV,IAAA,GAKAqV,EAAAtV,MAAAsV,EAAArV,MACAqV,EAAArV,MAEAs2C,EAAAjhB,aACAhgB,EAAAtV,QAIA09C,aAAA,WACA,IAIAzE,EAHA1C,EADAnjD,KACAshB,QAAAuZ,MACA0vB,EAAApH,EAAAoH,SACAzE,EAAA3C,EAAA2C,cAcA,OAXAyE,EACA1E,EAAA/hD,KAAA0mD,KAPAxqD,KAOA6M,IAAA09C,GAAAzmD,KAAAgK,MAPA9N,KAOA4M,IAAA29C,GAAA,GAEA1E,EATA7lD,KASAyqD,oBACA3E,KAAA,IAGAA,IACAD,EAAA/hD,KAAA8I,IAAAk5C,EAAAD,IAGAA,GAEA4E,kBAAA,WACA,OAAAtqC,OAAAskB,mBAEAimB,yBAAAjrC,GACA8iC,WAAA,WACA,IAAArgC,EAAAliB,KACAo+B,EAAAlc,EAAAZ,QACA6hC,EAAA/kB,EAAAvD,MAKAgrB,EAAA3jC,EAAAooC,eAEAK,EAAA,CACA9E,SAFAA,EAAA/hD,KAAA+I,IAAA,EAAAg5C,GAGAj5C,IAAAu2C,EAAAv2C,IACAC,IAAAs2C,EAAAt2C,IACA+9C,UAAAzH,EAAAyH,UACAL,SAAAvgC,GAAA5J,eAAA+iC,EAAA0H,cAAA1H,EAAAoH,WAEA1vB,EAAA3Y,EAAA2Y,MA1LA,SAAAiwB,EAAAC,GACA,IAcAC,EAAAC,EAAAC,EAAAC,EAdAtwB,EAAA,GAKA0vB,EAAAO,EAAAP,SACAa,EAAAb,GAAA,EACAc,EAAAP,EAAAjF,SAAA,EACAj5C,EAAAk+C,EAAAl+C,IACAC,EAAAi+C,EAAAj+C,IACA+9C,EAAAE,EAAAF,UACAU,EAAAP,EAAAn+C,IACA2+C,EAAAR,EAAAl+C,IACA2+C,EAAAxhC,GAAAyhC,SAAAF,EAAAD,GAAAD,EAAAD,KAIA,GAAAI,EAbA,OAaA7rC,GAAA/S,IAAA+S,GAAA9S,GACA,OAAAy+C,EAAAC,IAGAJ,EAAArnD,KAAA0mD,KAAAe,EAAAC,GAAA1nD,KAAAgK,MAAAw9C,EAAAE,IAEAH,IAEAG,EAAAxhC,GAAAyhC,QAAAN,EAAAK,EAAAH,EAAAD,MAGAb,GAAA5qC,GAAAirC,GAEAI,EAAAlnD,KAAAsJ,IAAA,GAAA4c,GAAA0hC,eAAAF,KAGAR,EAAAlnD,KAAAsJ,IAAA,GAAAw9C,GACAY,EAAA1nD,KAAA0mD,KAAAgB,EAAAR,MAGAC,EAAAnnD,KAAAgK,MAAAw9C,EAAAE,KACAN,EAAApnD,KAAA0mD,KAAAe,EAAAC,KAEAjB,KAEA5qC,GAAA/S,IAAAod,GAAA2hC,YAAA/+C,EAAA4+C,IAAA,OACAP,EAAAr+C,IAGA+S,GAAA9S,IAAAmd,GAAA2hC,YAAA9+C,EAAA2+C,IAAA,OACAN,EAAAr+C,IAIAs+C,GAAAD,EAAAD,GAAAO,EAGAL,EADAnhC,GAAA4hC,aAAAT,EAAArnD,KAAAoV,MAAAiyC,GAAAK,EAAA,KACA1nD,KAAAoV,MAAAiyC,GAEArnD,KAAA0mD,KAAAW,GAGAF,EAAAnnD,KAAAoV,MAAA+xC,EAAAD,KACAE,EAAApnD,KAAAoV,MAAAgyC,EAAAF,KACAnwB,EAAAhO,KAAAlN,GAAA/S,GAAAq+C,EAAAr+C,GAEA,QAAAuxB,EAAA,EAAmBA,EAAAgtB,IAAehtB,EAClCtD,EAAAhO,KAAA/oB,KAAAoV,OAAA+xC,EAAA9sB,EAAAqtB,GAAAR,MAIA,OADAnwB,EAAAhO,KAAAlN,GAAA9S,GAAAq+C,EAAAr+C,GACAguB,EAqHAgxB,CAAAlB,EAAAzoC,GACAA,EAAAwoC,2BAGAxoC,EAAArV,IAAAmd,GAAAnd,IAAAguB,GACA3Y,EAAAtV,IAAAod,GAAApd,IAAAiuB,GAEAsoB,EAAAviC,SACAia,EAAAja,UACAsB,EAAA2I,MAAA3I,EAAArV,IACAqV,EAAAqY,IAAArY,EAAAtV,MAEAsV,EAAA2I,MAAA3I,EAAAtV,IACAsV,EAAAqY,IAAArY,EAAArV,MAGA61C,qBAAA,WACA,IAAAxgC,EAAAliB,KACAkiB,EAAA4pC,eAAA5pC,EAAA2Y,MAAAhiB,QACAqJ,EAAA2lC,cAAA3lC,EAAA2Y,MAAAj6B,QAAA,GACAugD,GAAA9gD,UAAAqiD,qBAAA3iD,KAAAmiB,MAGA6pC,GAAA,CACA5lD,SAAA,OACA00B,MAAA,CACAta,SAAAw+B,GAAAC,WAAAl8B,SAGAkpC,GAAAnC,GAAA/nC,OAAA,CACAsgC,oBAAA,WACA,IAAAlgC,EAAAliB,KACAo+B,EAAAlc,EAAAZ,QACAiE,EAAArD,EAAAqD,MACAqJ,EAAArJ,EAAAqJ,KACAC,EAAAD,EAAAC,SACA0K,EAAArX,EAAAqX,eAIA,SAAA0yB,EAAA99B,GACA,OAAAoL,EAAApL,EAAAI,UAAArM,EAAAte,GAAAuqB,EAAAO,UAAAxM,EAAAte,GAIAse,EAAAtV,IAAA,KACAsV,EAAArV,IAAA,KACA,IAAAq/C,EAAA9tB,EAAAnE,QAgBA,QAdA33B,IAAA4pD,GACAliC,GAAAtJ,KAAAmO,EAAA,SAAAR,EAAAR,GACA,IAAAq+B,EAAA,CAIA,IAAA/9B,EAAA5I,EAAAuJ,eAAAjB,GAEAtI,EAAA4U,iBAAAtM,IAAAo+B,EAAA99B,SAAA7rB,IAAA6rB,EAAAuK,QACAwzB,GAAA,MAKA9tB,EAAAnE,SAAAiyB,EAAA,CACA,IAAAC,EAAA,GACAniC,GAAAtJ,KAAAmO,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAA5I,EAAAuJ,eAAAjB,GACA5xB,EAAA,CAAAkyB,EAAA1vB,UACA6D,IAAA87B,EAAAnE,cAAA33B,IAAA6rB,EAAAuK,MAAA7K,EAAA,GAAAM,EAAAuK,OAAA2E,KAAA,UAEA/6B,IAAA6pD,EAAAlwD,KACAkwD,EAAAlwD,GAAA,CACAmwD,eAAA,GACAC,eAAA,KAKA,IAAAD,EAAAD,EAAAlwD,GAAAmwD,eACAC,EAAAF,EAAAlwD,GAAAowD,eAEA9mC,EAAA4U,iBAAAtM,IAAAo+B,EAAA99B,IACAnE,GAAAtJ,KAAA2N,EAAAO,KAAA,SAAAo2B,EAAA5lC,GACA,IAAAljB,GAAAgmB,EAAAiZ,cAAA6pB,GAEA1pC,MAAApf,IAAAiyB,EAAAS,KAAAxP,GAAAiL,SAIA+hC,EAAAhtC,GAAAgtC,EAAAhtC,IAAA,EACAitC,EAAAjtC,GAAAitC,EAAAjtC,IAAA,EAEAgf,EAAAkuB,eACAF,EAAAhtC,GAAA,IACeljB,EAAA,EACfmwD,EAAAjtC,IAAAljB,EAEAkwD,EAAAhtC,IAAAljB,OAKA8tB,GAAAtJ,KAAAyrC,EAAA,SAAAI,GACA,IAAAjzC,EAAAizC,EAAAH,eAAAnvD,OAAAsvD,EAAAF,gBACAG,EAAAxiC,GAAApd,IAAA0M,GACAmzC,EAAAziC,GAAAnd,IAAAyM,GACA4I,EAAAtV,IAAA,OAAAsV,EAAAtV,IAAA4/C,EAAA1oD,KAAA8I,IAAAsV,EAAAtV,IAAA4/C,GACAtqC,EAAArV,IAAA,OAAAqV,EAAArV,IAAA4/C,EAAA3oD,KAAA+I,IAAAqV,EAAArV,IAAA4/C,UAGAziC,GAAAtJ,KAAAmO,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAA5I,EAAAuJ,eAAAjB,GAEAtI,EAAA4U,iBAAAtM,IAAAo+B,EAAA99B,IACAnE,GAAAtJ,KAAA2N,EAAAO,KAAA,SAAAo2B,EAAA5lC,GACA,IAAAljB,GAAAgmB,EAAAiZ,cAAA6pB,GAEA1pC,MAAApf,IAAAiyB,EAAAS,KAAAxP,GAAAiL,SAIA,OAAAnI,EAAAtV,IACAsV,EAAAtV,IAAA1Q,EACeA,EAAAgmB,EAAAtV,MACfsV,EAAAtV,IAAA1Q,GAGA,OAAAgmB,EAAArV,IACAqV,EAAArV,IAAA3Q,EACeA,EAAAgmB,EAAArV,MACfqV,EAAArV,IAAA3Q,QAOAgmB,EAAAtV,IAAAmT,SAAAmC,EAAAtV,OAAA0O,MAAA4G,EAAAtV,KAAAsV,EAAAtV,IApGA,EAqGAsV,EAAArV,IAAAkT,SAAAmC,EAAArV,OAAAyO,MAAA4G,EAAArV,KAAAqV,EAAArV,IApGA,EAsGA7M,KAAA8pD,0BAGAW,kBAAA,WACA,IACApH,EAEA,OAHArjD,KAGAu5B,eACAz1B,KAAA0mD,KAJAxqD,KAIA8G,MAAA,KAGAu8C,EAAAr5B,GAAA1I,QAAA6H,WAPAnpB,KAOAshB,QAAAuZ,OACA/2B,KAAA0mD,KARAxqD,KAQA0lB,OAAA29B,EAAA35B,cAGAghC,yBAAA,WACA1qD,KAAAu5B,gBAEAv5B,KAAA66B,MAAAja,WAGAuyB,iBAAA,SAAA/zB,EAAAyO,GACA,OAAA7tB,KAAAm7B,cAAAn7B,KAAAulB,MAAAqJ,KAAAC,SAAAhB,GAAAe,KAAAxP,KAGAqb,iBAAA,SAAAv+B,GAGA,IAAAgmB,EAAAliB,KACA6qB,EAAA3I,EAAA2I,MACAuW,GAAAlf,EAAAiZ,cAAAj/B,GAEAo/B,EAAApZ,EAAAqY,IAAA1P,EAQA,OANA3I,EAAAqX,eACArX,EAAAnb,KAAAmb,EAAApb,MAAAw0B,GAAA8F,EAAAvW,GAEA3I,EAAA4D,OAAA5D,EAAAwD,OAAA4V,GAAA8F,EAAAvW,IAKAo6B,iBAAA,SAAAE,GACA,IAAAjjC,EAAAliB,KACAu5B,EAAArX,EAAAqX,eACAmzB,EAAAnzB,EAAArX,EAAApb,MAAAob,EAAAwD,OACA4S,GAAAiB,EAAA4rB,EAAAjjC,EAAAnb,KAAAmb,EAAA4D,OAAAq/B,GAAAuH,EACA,OAAAxqC,EAAA2I,OAAA3I,EAAAqY,IAAArY,EAAA2I,OAAAyN,GAEAyC,gBAAA,SAAA3b,GACA,OAAApf,KAAAy6B,iBAAAz6B,KAAA8rD,eAAA1sC,OAIAutC,GAAAZ,GACAC,GAAApC,UAAA+C,GACA,IAAAC,GAAA5iC,GAAA5J,eA6CAysC,GAAA,CACA1mD,SAAA,OAEA00B,MAAA,CACAta,SAAAw+B,GAAAC,WAAAU,cAIA,SAAAoN,GAAA5wD,EAAAmkB,GACA,OAAA2J,GAAAjK,SAAA7jB,OAAA,EAAAA,EAAAmkB,EAGA,IAAA0sC,GAAA5L,GAAAr/B,OAAA,CACAsgC,oBAAA,WACA,IAAAlgC,EAAAliB,KACAo+B,EAAAlc,EAAAZ,QACAiE,EAAArD,EAAAqD,MACAqJ,EAAArJ,EAAAqJ,KACAC,EAAAD,EAAAC,SACA0K,EAAArX,EAAAqX,eAEA,SAAA0yB,EAAA99B,GACA,OAAAoL,EAAApL,EAAAI,UAAArM,EAAAte,GAAAuqB,EAAAO,UAAAxM,EAAAte,GAIAse,EAAAtV,IAAA,KACAsV,EAAArV,IAAA,KACAqV,EAAA8qC,WAAA,KACA,IAAAd,EAAA9tB,EAAAnE,QAgBA,QAdA33B,IAAA4pD,GACAliC,GAAAtJ,KAAAmO,EAAA,SAAAR,EAAAR,GACA,IAAAq+B,EAAA,CAIA,IAAA/9B,EAAA5I,EAAAuJ,eAAAjB,GAEAtI,EAAA4U,iBAAAtM,IAAAo+B,EAAA99B,SAAA7rB,IAAA6rB,EAAAuK,QACAwzB,GAAA,MAKA9tB,EAAAnE,SAAAiyB,EAAA,CACA,IAAAC,EAAA,GACAniC,GAAAtJ,KAAAmO,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAA5I,EAAAuJ,eAAAjB,GACA5xB,EAAA,CAAAkyB,EAAA1vB,UACA6D,IAAA87B,EAAAnE,cAAA33B,IAAA6rB,EAAAuK,MAAA7K,EAAA,GAAAM,EAAAuK,OAAA2E,KAAA,KAEA9X,EAAA4U,iBAAAtM,IAAAo+B,EAAA99B,UACA7rB,IAAA6pD,EAAAlwD,KACAkwD,EAAAlwD,GAAA,IAGA+tB,GAAAtJ,KAAA2N,EAAAO,KAAA,SAAAo2B,EAAA5lC,GACA,IAAA9F,EAAA6yC,EAAAlwD,GACAC,GAAAgmB,EAAAiZ,cAAA6pB,GAEA1pC,MAAApf,IAAAiyB,EAAAS,KAAAxP,GAAAiL,QAAAnuB,EAAA,IAIAod,EAAA8F,GAAA9F,EAAA8F,IAAA,EACA9F,EAAA8F,IAAAljB,QAIA8tB,GAAAtJ,KAAAyrC,EAAA,SAAAI,GACA,GAAAA,EAAA3vD,OAAA,GACA,IAAA4vD,EAAAxiC,GAAApd,IAAA2/C,GACAE,EAAAziC,GAAAnd,IAAA0/C,GACArqC,EAAAtV,IAAA,OAAAsV,EAAAtV,IAAA4/C,EAAA1oD,KAAA8I,IAAAsV,EAAAtV,IAAA4/C,GACAtqC,EAAArV,IAAA,OAAAqV,EAAArV,IAAA4/C,EAAA3oD,KAAA+I,IAAAqV,EAAArV,IAAA4/C,WAIAziC,GAAAtJ,KAAAmO,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAA5I,EAAAuJ,eAAAjB,GAEAtI,EAAA4U,iBAAAtM,IAAAo+B,EAAA99B,IACAnE,GAAAtJ,KAAA2N,EAAAO,KAAA,SAAAo2B,EAAA5lC,GACA,IAAAljB,GAAAgmB,EAAAiZ,cAAA6pB,GAEA1pC,MAAApf,IAAAiyB,EAAAS,KAAAxP,GAAAiL,QAAAnuB,EAAA,IAIA,OAAAgmB,EAAAtV,IACAsV,EAAAtV,IAAA1Q,EACeA,EAAAgmB,EAAAtV,MACfsV,EAAAtV,IAAA1Q,GAGA,OAAAgmB,EAAArV,IACAqV,EAAArV,IAAA3Q,EACeA,EAAAgmB,EAAArV,MACfqV,EAAArV,IAAA3Q,GAGA,IAAAA,IAAA,OAAAgmB,EAAA8qC,YAAA9wD,EAAAgmB,EAAA8qC,cACA9qC,EAAA8qC,WAAA9wD,QAQA8D,KAAA8pD,0BAEAA,uBAAA,WACA,IAAA5nC,EAAAliB,KACAmjD,EAAAjhC,EAAAZ,QAAAuZ,MAGA3Y,EAAAtV,IAAAkgD,GAAA3J,EAAAv2C,IAAAsV,EAAAtV,KACAsV,EAAArV,IAAAigD,GAAA3J,EAAAt2C,IAAAqV,EAAArV,KAEAqV,EAAAtV,MAAAsV,EAAArV,MACA,IAAAqV,EAAAtV,KAAA,OAAAsV,EAAAtV,KACAsV,EAAAtV,IAAA9I,KAAAsJ,IAAA,GAAAtJ,KAAAgK,MAAAkc,GAAAm1B,MAAAj9B,EAAAtV,MAAA,GACAsV,EAAArV,IAAA/I,KAAAsJ,IAAA,GAAAtJ,KAAAgK,MAAAkc,GAAAm1B,MAAAj9B,EAAArV,MAAA,KAEAqV,EAAAtV,IAVA,EAWAsV,EAAArV,IAVA,KAcA,OAAAqV,EAAAtV,MACAsV,EAAAtV,IAAA9I,KAAAsJ,IAAA,GAAAtJ,KAAAgK,MAAAkc,GAAAm1B,MAAAj9B,EAAArV,MAAA,IAGA,OAAAqV,EAAArV,MACAqV,EAAArV,IAAA,IAAAqV,EAAAtV,IAAA9I,KAAAsJ,IAAA,GAAAtJ,KAAAgK,MAAAkc,GAAAm1B,MAAAj9B,EAAAtV,MAAA,GAnBA,IAsBA,OAAAsV,EAAA8qC,aACA9qC,EAAAtV,IAAA,EACAsV,EAAA8qC,WAAA9qC,EAAAtV,IACSsV,EAAArV,IAAA,EACTqV,EAAA8qC,WAAAlpD,KAAAsJ,IAAA,GAAAtJ,KAAAgK,MAAAkc,GAAAm1B,MAAAj9B,EAAArV,OAEAqV,EAAA8qC,WA7BA,IAiCAzK,WAAA,WACA,IAAArgC,EAAAliB,KACAmjD,EAAAjhC,EAAAZ,QAAAuZ,MACAja,GAAAsB,EAAAqX,eACAuxB,EAAA,CACAl+C,IAAAkgD,GAAA3J,EAAAv2C,KACAC,IAAAigD,GAAA3J,EAAAt2C,MAEAguB,EAAA3Y,EAAA2Y,MAlMA,SAAAiwB,EAAAC,GACA,IAIAkC,EAAAC,EAJAryB,EAAA,GACAsyB,EAAAP,GAAA9B,EAAAl+C,IAAA9I,KAAAsJ,IAAA,GAAAtJ,KAAAgK,MAAAkc,GAAAm1B,MAAA4L,EAAAn+C,QACAwgD,EAAAtpD,KAAAgK,MAAAkc,GAAAm1B,MAAA4L,EAAAl+C,MACAwgD,EAAAvpD,KAAA0mD,KAAAO,EAAAl+C,IAAA/I,KAAAsJ,IAAA,GAAAggD,IAGA,IAAAD,GACAF,EAAAnpD,KAAAgK,MAAAkc,GAAAm1B,MAAA4L,EAAAiC,aACAE,EAAAppD,KAAAgK,MAAAi9C,EAAAiC,WAAAlpD,KAAAsJ,IAAA,GAAA6/C,IACApyB,EAAAhO,KAAAsgC,GACAA,EAAAD,EAAAppD,KAAAsJ,IAAA,GAAA6/C,KAEAA,EAAAnpD,KAAAgK,MAAAkc,GAAAm1B,MAAAgO,IACAD,EAAAppD,KAAAgK,MAAAq/C,EAAArpD,KAAAsJ,IAAA,GAAA6/C,KAGA,IAAArC,EAAAqC,EAAA,EAAAnpD,KAAAsJ,IAAA,GAAAtJ,KAAA0xB,IAAAy3B,IAAA,EAEA,GACApyB,EAAAhO,KAAAsgC,GAGA,OAFAD,IAGAA,EAAA,EAEAtC,IADAqC,GACA,IAAArC,GAGAuC,EAAArpD,KAAAoV,MAAAg0C,EAAAppD,KAAAsJ,IAAA,GAAA6/C,GAAArC,WACKqC,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,GAEL,IAAAC,EAAAV,GAAA9B,EAAAj+C,IAAAsgD,GAEA,OADAtyB,EAAAhO,KAAAygC,GACAzyB,EAgKA0yB,CAAAzC,EAAA5oC,GAGAA,EAAArV,IAAAmd,GAAAnd,IAAAguB,GACA3Y,EAAAtV,IAAAod,GAAApd,IAAAiuB,GAEAsoB,EAAAviC,SACAA,KACAsB,EAAA2I,MAAA3I,EAAArV,IACAqV,EAAAqY,IAAArY,EAAAtV,MAEAsV,EAAA2I,MAAA3I,EAAAtV,IACAsV,EAAAqY,IAAArY,EAAArV,KAGA+T,GACAia,EAAAja,WAGA8hC,qBAAA,WACA1iD,KAAAwtD,WAAAxtD,KAAA66B,MAAAhiB,QACAsoC,GAAA9gD,UAAAqiD,qBAAA3iD,KAAAC,OAGAmzC,iBAAA,SAAA/zB,EAAAyO,GACA,OAAA7tB,KAAAm7B,cAAAn7B,KAAAulB,MAAAqJ,KAAAC,SAAAhB,GAAAe,KAAAxP,KAEA2b,gBAAA,SAAA3b,GACA,OAAApf,KAAAy6B,iBAAAz6B,KAAAwtD,WAAApuC,KASAquC,mBAAA,SAAAvxD,GACA,IAAA+wD,EAAAnpD,KAAAgK,MAAAkc,GAAAm1B,MAAAjjD,IACAgxD,EAAAppD,KAAAgK,MAAA5R,EAAA4H,KAAAsJ,IAAA,GAAA6/C,IACA,OAAAC,EAAAppD,KAAAsJ,IAAA,GAAA6/C,IAEAxyB,iBAAA,SAAAv+B,GACA,IAQAwwD,EAAAvH,EAAAt6B,EAAA0P,EAAAyvB,EARA9nC,EAAAliB,KACAmjD,EAAAjhC,EAAAZ,QAAAuZ,MACAja,EAAAuiC,EAAAviC,QACAu+B,EAAAn1B,GAAAm1B,MAEAuO,EAAAxrC,EAAAurC,mBAAAvrC,EAAA8qC,YAEA10B,EAAA,EAuCA,OArCAp8B,GAAAgmB,EAAAiZ,cAAAj/B,GAEA0kB,GACAiK,EAAA3I,EAAAqY,IACAA,EAAArY,EAAA2I,MACAm/B,GAAA,IAEAn/B,EAAA3I,EAAA2I,MACA0P,EAAArY,EAAAqY,IACAyvB,EAAA,GAGA9nC,EAAAqX,gBACAmzB,EAAAxqC,EAAApb,MACAq+C,EAAAvkC,EAAAsB,EAAA2D,MAAA3D,EAAAnb,OAEA2lD,EAAAxqC,EAAAwD,OACAskC,IAAA,EAEA7E,EAAAvkC,EAAAsB,EAAAlb,IAAAkb,EAAA4D,QAGA5pB,IAAA2uB,IACA,IAAAA,IAEAyN,EAAAs0B,GAAAzJ,EAAA75B,SAAAR,GAAAO,OAAAX,iBACAgkC,GAAAp0B,EACAzN,EAAA6iC,GAGA,IAAAxxD,IACAo8B,GAAAo0B,GAAAvN,EAAA5kB,GAAA4kB,EAAAt0B,KAAAs0B,EAAAjjD,GAAAijD,EAAAt0B,KAGAs6B,GAAA6E,EAAA1xB,GAGA6sB,GAEAF,iBAAA,SAAAE,GACA,IAOAuH,EAAA7hC,EAAA0P,EAAAr+B,EAPAgmB,EAAAliB,KACAmjD,EAAAjhC,EAAAZ,QAAAuZ,MACAja,EAAAuiC,EAAAviC,QACAu+B,EAAAn1B,GAAAm1B,MAEAuO,EAAAxrC,EAAAurC,mBAAAvrC,EAAA8qC,YAoBA,GAhBApsC,GACAiK,EAAA3I,EAAAqY,IACAA,EAAArY,EAAA2I,QAEAA,EAAA3I,EAAA2I,MACA0P,EAAArY,EAAAqY,KAGArY,EAAAqX,gBACAmzB,EAAAxqC,EAAApb,MACA5K,EAAA0kB,EAAAsB,EAAA2D,MAAAs/B,IAAAjjC,EAAAnb,OAEA2lD,EAAAxqC,EAAAwD,OACAxpB,EAAA0kB,EAAAukC,EAAAjjC,EAAAlb,IAAAkb,EAAA4D,OAAAq/B,GAGAjpD,IAAA2uB,EAAA,CACA,OAAAA,EAAA,CAEA,IAAAyN,EAAAs0B,GAAAzJ,EAAA75B,SAAAR,GAAAO,OAAAX,iBACAxsB,GAAAo8B,EACAo0B,GAAAp0B,EACAzN,EAAA6iC,EAGAxxD,GAAAijD,EAAA5kB,GAAA4kB,EAAAt0B,GACA3uB,GAAAwwD,EACAxwD,EAAA4H,KAAAsJ,IAAA,GAAA+xC,EAAAt0B,GAAA3uB,GAGA,OAAAA,KAIAyxD,GAAAd,GACAE,GAAAnD,UAAA+D,GACA,IAAAC,GAAA5jC,GAAA5J,eACAytC,GAAA7jC,GAAA1J,sBACAwtC,GAAA9jC,GAAA1I,QAAAuI,QACAkkC,GAAA,CACAhsB,SAAA,EAEAisB,SAAA,EACA7nD,SAAA,YACA27B,WAAA,CACAC,SAAA,EACAtgC,MAAA,qBACAoyB,UAAA,EACAM,WAAA,GACAC,iBAAA,GAEAmE,UAAA,CACAyJ,UAAA,GAGAnH,MAAA,CAEAozB,mBAAA,EAEAC,cAAA,yBAEAC,iBAAA,EAEAC,iBAAA,EACA7tC,SAAAw+B,GAAAC,WAAAl8B,QAEAmf,YAAA,CAEAF,SAAA,EAEAzY,SAAA,GAEA/I,SAAA,SAAA2Y,GACA,OAAAA,KAKA,SAAAm1B,GAAAhzC,GACA,IAAA+iB,EAAA/iB,EAAAiG,QACA,OAAA8c,EAAA0D,WAAAC,SAAA3D,EAAA6D,YAAAF,QAAA1mB,EAAAkK,MAAAqJ,KAAAuK,OAAAv8B,OAAA,EAGA,SAAA0xD,GAAAlwB,GACA,IAAA+kB,EAAA/kB,EAAAvD,MAEA,OAAAsoB,EAAAphB,SAAA3D,EAAA2D,QACA6rB,GAAAzK,EAAA75B,SAAAR,GAAAO,OAAAX,iBAAA,EAAAy6B,EAAAgL,iBAGA,EAiBA,SAAAI,GAAA77B,EAAAyb,EAAAxvC,EAAAiO,EAAAC,GACA,OAAA6lB,IAAA9lB,GAAA8lB,IAAA7lB,EACA,CACAge,MAAAsjB,EAAAxvC,EAAA,EACA47B,IAAA4T,EAAAxvC,EAAA,GAEK+zB,EAAA9lB,GAAA8lB,EAAA7lB,EACL,CACAge,MAAAsjB,EAAAxvC,EACA47B,IAAA4T,GAIA,CACAtjB,MAAAsjB,EACA5T,IAAA4T,EAAAxvC,GAoFA,SAAA6vD,GAAA97B,GACA,WAAAA,GAAA,MAAAA,EACA,SACKA,EAAA,IACL,OAGA,QAGA,SAAAslB,GAAAxyB,EAAA4X,EAAAj3B,EAAAujB,GACA,IACAhtB,EAAAukB,EADA3T,EAAAnH,EAAAmH,EAAAoc,EAAA,EAGA,GAAAM,GAAApK,QAAAwd,GACA,IAAA1gC,EAAA,EAAAukB,EAAAmc,EAAAxgC,OAAqCF,EAAAukB,IAAUvkB,EAC/C8oB,EAAAwyB,SAAA5a,EAAA1gC,GAAAyJ,EAAAkH,EAAAC,GACAA,GAAAoc,OAGAlE,EAAAwyB,SAAA5a,EAAAj3B,EAAAkH,EAAAC,GAIA,SAAAmhD,GAAA/7B,EAAAg8B,EAAAvoD,GACA,KAAAusB,GAAA,MAAAA,EACAvsB,EAAAmH,GAAAohD,EAAAzkD,EAAA,GACKyoB,EAAA,KAAAA,EAAA,MACLvsB,EAAAmH,GAAAohD,EAAAzkD,GAkGA,SAAA0kD,GAAAC,GACA,OAAA5kC,GAAAsB,SAAAsjC,KAAA,EAGA,IAAAC,GAAAhF,GAAA/nC,OAAA,CACAmgC,cAAA,WACA,IAAA//B,EAAAliB,KAEAkiB,EAAApb,MAAAob,EAAAw/B,SACAx/B,EAAAwD,OAAAxD,EAAAy/B,UACAz/B,EAAAm/B,WAAAiN,GAAApsC,EAAAZ,SAAA,EACAY,EAAA0gB,QAAA9+B,KAAAgK,MAAAoU,EAAApb,MAAA,GACAob,EAAA2gB,QAAA/+B,KAAAgK,OAAAoU,EAAAwD,OAAAxD,EAAAm/B,YAAA,GACAn/B,EAAA4sC,YAAAhrD,KAAA8I,IAAAsV,EAAAwD,OAAAxD,EAAAm/B,WAAAn/B,EAAApb,OAAA,GAEAs7C,oBAAA,WACA,IAAAlgC,EAAAliB,KACAulB,EAAArD,EAAAqD,MACA3Y,EAAAuT,OAAAskB,kBACA53B,EAAAsT,OAAA4uC,kBACA/kC,GAAAtJ,KAAA6E,EAAAqJ,KAAAC,SAAA,SAAAR,EAAAR,GACA,GAAAtI,EAAA4U,iBAAAtM,GAAA,CACA,IAAAM,EAAA5I,EAAAuJ,eAAAjB,GACA7D,GAAAtJ,KAAA2N,EAAAO,KAAA,SAAAo2B,EAAA5lC,GACA,IAAAljB,GAAAgmB,EAAAiZ,cAAA6pB,GAEA1pC,MAAApf,IAAAiyB,EAAAS,KAAAxP,GAAAiL,SAIAzd,EAAA9I,KAAA8I,IAAA1Q,EAAA0Q,GACAC,EAAA/I,KAAA+I,IAAA3Q,EAAA2Q,SAIAqV,EAAAtV,QAAAuT,OAAAskB,kBAAA,EAAA73B,EACAsV,EAAArV,QAAAsT,OAAA4uC,kBAAA,EAAAliD,EAEAqV,EAAA4nC,0BAGAW,kBAAA,WACA,OAAA3mD,KAAA0mD,KAAAxqD,KAAA8uD,YAAAR,GAAAtuD,KAAAshB,WAEAohC,qBAAA,WACA,IAAAxgC,EAAAliB,KACA6pD,GAAAxpD,UAAAqiD,qBAAA3iD,KAAAmiB,GAEAA,EAAA+f,YAAA/f,EAAAqD,MAAAqJ,KAAAuK,OAAA9zB,IAAA6c,EAAAZ,QAAA2gB,YAAA1hB,SAAA2B,IAEAixB,iBAAA,SAAA/zB,EAAAyO,GACA,OAAA7tB,KAAAm7B,cAAAn7B,KAAAulB,MAAAqJ,KAAAC,SAAAhB,GAAAe,KAAAxP,KAEA4jC,IAAA,WACA,IACA5kB,EADAp+B,KACAshB,QAEA8c,EAAA2D,SAAA3D,EAAA6D,YAAAF,QAnQA,SAAA1mB,GA0BA,IAWA3e,EAAAgyD,EAAAprB,EAXA0rB,EAAAhlC,GAAA1I,QAAA6H,WAAA9N,EAAAiG,QAAA2gB,aAIAgtB,EAAA,CACA9kD,EAAA,EACAsC,EAAA4O,EAAAvU,MACAoH,EAAA,EACAvB,EAAA0O,EAAAqK,OAAArK,EAAAgmC,YAEA6N,EAAA,GAEA7zC,EAAAmK,IAAA+D,KAAAylC,EAAAtwD,OACA2c,EAAA8zC,iBAAA,GACA,IA7EA3pC,EAAAkE,EAAAwP,EA6EAk2B,EAAAf,GAAAhzC,GAEA,IAAA3e,EAAA,EAAeA,EAAA0yD,EAAgB1yD,IAAA,CAC/B4mC,EAAAjoB,EAAAg0C,iBAAA3yD,EAAA2e,EAAAyzC,YAAA,GAhFAtpC,EAiFAnK,EAAAmK,IAjFAkE,EAiFAslC,EAAAtlC,WAjFAwP,EAiFA7d,EAAA4mB,YAAAvlC,IAAA,GAAAgyD,EAhFA1kC,GAAApK,QAAAsZ,GACA,CACAnsB,EAAAid,GAAAg2B,YAAAx6B,IAAA+D,KAAA2P,GACAjvB,EAAAivB,EAAAt8B,OAAA8sB,GAIA,CACA3c,EAAAyY,EAAA8wB,YAAApd,GAAApyB,MACAmD,EAAAyf,GAwEArO,EAAA8zC,iBAAAzyD,GAAAgyD,EAEA,IAAA/K,EAAAtoC,EAAAi0C,cAAA5yD,GACAg2B,EAAA1I,GAAAulC,UAAA5L,GAAA,IACA6L,EAAAjB,GAAA77B,EAAA4Q,EAAAj2B,EAAAqhD,EAAA3hD,EAAA,OACA0iD,EAAAlB,GAAA77B,EAAA4Q,EAAAh2B,EAAAohD,EAAAzkD,EAAA,QAEAulD,EAAA3kC,MAAAokC,EAAA9kD,IACA8kD,EAAA9kD,EAAAqlD,EAAA3kC,MACAqkC,EAAA/kD,EAAAw5C,GAGA6L,EAAAj1B,IAAA00B,EAAAxiD,IACAwiD,EAAAxiD,EAAA+iD,EAAAj1B,IACA20B,EAAAziD,EAAAk3C,GAGA8L,EAAA5kC,MAAAokC,EAAA/gD,IACA+gD,EAAA/gD,EAAAuhD,EAAA5kC,MACAqkC,EAAAhhD,EAAAy1C,GAGA8L,EAAAl1B,IAAA00B,EAAAtiD,IACAsiD,EAAAtiD,EAAA8iD,EAAAl1B,IACA20B,EAAAviD,EAAAg3C,GAIAtoC,EAAAq0C,cAAAr0C,EAAAyzC,YAAAG,EAAAC,GA2LAS,CAJA3vD,WAMA4vD,eAAA,UAQAF,cAAA,SAAAG,EAAAZ,EAAAC,GACA,IAAAhtC,EAAAliB,KACA8vD,EAAAb,EAAA9kD,EAAArG,KAAAoL,IAAAggD,EAAA/kD,GACA4lD,EAAAjsD,KAAA+I,IAAAoiD,EAAAxiD,EAAAyV,EAAApb,MAAA,GAAAhD,KAAAoL,IAAAggD,EAAAziD,GACAujD,GAAAf,EAAA/gD,EAAApK,KAAAmL,IAAAigD,EAAAhhD,GACA+hD,GAAAnsD,KAAA+I,IAAAoiD,EAAAtiD,GAAAuV,EAAAwD,OAAAxD,EAAAm/B,YAAA,GAAAv9C,KAAAmL,IAAAigD,EAAAviD,GACAmjD,EAAAnB,GAAAmB,GACAC,EAAApB,GAAAoB,GACAC,EAAArB,GAAAqB,GACAC,EAAAtB,GAAAsB,GACA/tC,EAAA4sC,YAAAhrD,KAAA8I,IAAA9I,KAAAgK,MAAA+hD,GAAAC,EAAAC,GAAA,GAAAjsD,KAAAgK,MAAA+hD,GAAAG,EAAAC,GAAA,IACA/tC,EAAA0tC,eAAAE,EAAAC,EAAAC,EAAAC,IAEAL,eAAA,SAAAM,EAAAC,EAAAC,EAAAC,GACA,IAAAnuC,EAAAliB,KACAswD,EAAApuC,EAAApb,MAAAqpD,EAAAjuC,EAAA4sC,YACAyB,EAAAL,EAAAhuC,EAAA4sC,YACA0B,EAAAJ,EAAAluC,EAAA4sC,YACA2B,EAAAvuC,EAAAwD,OAAAxD,EAAAm/B,WAAAgP,EAAAnuC,EAAA4sC,YACA5sC,EAAA0gB,QAAA9+B,KAAAgK,OAAAyiD,EAAAD,GAAA,EAAApuC,EAAAnb,MACAmb,EAAA2gB,QAAA/+B,KAAAgK,OAAA0iD,EAAAC,GAAA,EAAAvuC,EAAAlb,IAAAkb,EAAAm/B,aAEAiO,cAAA,SAAAlwC,GACA,IAAAsxC,EAAA,EAAA5sD,KAAAgL,GAAAu/C,GAAAruD,MACA4yB,EAAA5yB,KAAAulB,MAAAjE,SAAAthB,KAAAulB,MAAAjE,QAAAsR,WAAA5yB,KAAAulB,MAAAjE,QAAAsR,WAAA,EACA+9B,EAAA/9B,EAAA9uB,KAAAgL,GAAA,MAEA,OAAAsQ,EAAAsxC,EAAAC,GAEA5tB,8BAAA,SAAA7mC,GACA,IAAAgmB,EAAAliB,KAEA,UAAA9D,EACA,SAIA,IAAA00D,EAAA1uC,EAAA4sC,aAAA5sC,EAAArV,IAAAqV,EAAAtV,KAEA,OAAAsV,EAAAZ,QAAAuZ,MAAAja,SACAsB,EAAArV,IAAA3Q,GAAA00D,GAGA10D,EAAAgmB,EAAAtV,KAAAgkD,GAEAvB,iBAAA,SAAAjwC,EAAAyxC,GACA,IACAC,EADA9wD,KACAsvD,cAAAlwC,GAAAtb,KAAAgL,GAAA,EACA,OACAzB,EAAAvJ,KAAAmL,IAAA6hD,GAAAD,EAHA7wD,KAGA4iC,QACAt1B,EAAAxJ,KAAAoL,IAAA4hD,GAAAD,EAJA7wD,KAIA6iC,UAGAU,yBAAA,SAAAnkB,EAAAljB,GACA,OAAA8D,KAAAqvD,iBAAAjwC,EAAApf,KAAA+iC,8BAAA7mC,KAEA60D,gBAAA,WACA,IACAnkD,EADA5M,KACA4M,IACAC,EAFA7M,KAEA6M,IACA,OAHA7M,KAGAujC,yBAAA,EAHAvjC,KAGAkiC,YAAA,EAAAt1B,EAAA,GAAAC,EAAA,EAAAA,EAAAD,EAAA,GAAAC,EAAA,EAAAD,EAAA,IAEA6jB,KAAA,WACA,IAAAvO,EAAAliB,KACAo+B,EAAAlc,EAAAZ,QACAwiC,EAAA1lB,EAAA7F,UACA4qB,EAAA/kB,EAAAvD,MAEA,GAAAuD,EAAA2D,QAAA,CACA,IAAAvc,EAAAtD,EAAAsD,IACAoN,EAAA5yB,KAAAsvD,cAAA,GAEAjM,EAAAr5B,GAAA1I,QAAA6H,WAAAg6B,IAEA/kB,EAAA0D,WAAAC,SAAA3D,EAAA6D,YAAAF,UA5OA,SAAA1mB,GACA,IAAAmK,EAAAnK,EAAAmK,IACA4Y,EAAA/iB,EAAAiG,QACA0vC,EAAA5yB,EAAA0D,WACAgiB,EAAA1lB,EAAA7F,UACA04B,EAAA7yB,EAAA6D,YACApO,EAAA+5B,GAAAoD,EAAAn9B,UAAAiwB,EAAAjwB,WACAwzB,EAAAuG,GAAAoD,EAAAvvD,MAAAqiD,EAAAriD,OACAyvD,EAAA5C,GAAAlwB,GACA5Y,EAAA2B,OACA3B,EAAAqO,YACArO,EAAAuO,YAAAszB,EAEA7hC,EAAAyP,cACAzP,EAAAyP,YAAA64B,GAAA,CAAAkD,EAAA78B,WAAA2vB,EAAA3vB,WAAA,MACA3O,EAAA0P,eAAA44B,GAAA,CAAAkD,EAAA58B,iBAAA0vB,EAAA1vB,iBAAA,KAGA,IAAA+8B,EAAA91C,EAAA0nB,8BAAA3E,EAAAvD,MAAAja,QAAAvF,EAAAzO,IAAAyO,EAAAxO,KAEAmiD,EAAAhlC,GAAA1I,QAAA6H,WAAA8nC,GAEAzrC,EAAA+D,KAAAylC,EAAAtwD,OACA8mB,EAAAuyB,aAAA,SAEA,QAAAr7C,EAAA2xD,GAAAhzC,GAAA,EAA0C3e,GAAA,EAAQA,IAAA,CAClD,GAAAs0D,EAAAjvB,SAAAlO,GAAAwzB,EAAA,CACA,IAAA+J,EAAA/1C,EAAAg0C,iBAAA3yD,EAAAy0D,GACA3rC,EAAAiB,YACAjB,EAAAO,OAAA1K,EAAAunB,QAAAvnB,EAAAwnB,SACArd,EAAAkB,OAAA0qC,EAAA/jD,EAAA+jD,EAAA9jD,GACAkY,EAAAqB,SAGA,GAAAoqC,EAAAlvB,QAAA,CAEA,IAAAsvB,EAAA,IAAA30D,EAAAw0D,EAAA,IACAI,EAAAj2C,EAAAg0C,iBAAA3yD,EAAAy0D,EAAAE,EAAA,GAEAE,EAAA1D,GAAAoD,EAAAtK,UAAAjqD,EAAAosB,GAAAO,OAAAb,kBACAhD,EAAAoO,UAAA29B,EACA,IAAA5N,EAAAtoC,EAAAi0C,cAAA5yD,GACAg2B,EAAA1I,GAAAulC,UAAA5L,GACAn+B,EAAAsyB,UAAA0W,GAAA97B,GACA+7B,GAAA/7B,EAAArX,EAAA8zC,iBAAAzyD,GAAA40D,GACAtZ,GAAAxyB,EAAAnK,EAAA4mB,YAAAvlC,IAAA,GAAA40D,EAAAtC,EAAAtlC,aAIAlE,EAAA8B,UA4LAkqC,CAAAtvC,GAGA8H,GAAAtJ,KAAAwB,EAAA2Y,MAAA,SAAA3B,EAAA9Z,GAEA,GAAAA,EAAA,GAAA+jC,EAAAviC,QAAA,CACA,IAAA6wC,EAAAvvC,EAAA6gB,8BAAA7gB,EAAA4pC,eAAA1sC,IAMA,GAJA0kC,EAAA/hB,SAAA,IAAA3iB,GAjMA,SAAA/D,EAAAyoC,EAAAl+B,EAAAxG,GACA,IAKAkkB,EALA9d,EAAAnK,EAAAmK,IACAwc,EAAA8hB,EAAA9hB,SACAotB,EAAAf,GAAAhzC,GACAgsC,EAAAwG,GAAA/J,EAAAriD,MAAA2d,EAAA,GACAyU,EAAAg6B,GAAA/J,EAAAjwB,UAAAzU,EAAA,GAGA,IAAA4iB,GAAAotB,IAAA/H,GAAAxzB,EAAA,CAeA,GAXArO,EAAA2B,OACA3B,EAAAuO,YAAAszB,EACA7hC,EAAAqO,YAEArO,EAAAyP,cACAzP,EAAAyP,YAAA6uB,EAAA3vB,YAAA,IACA3O,EAAA0P,eAAA4uB,EAAA1vB,kBAAA,GAGA5O,EAAAiB,YAEAub,EAEAxc,EAAAQ,IAAA3K,EAAAunB,QAAAvnB,EAAAwnB,QAAAjd,EAAA,IAAA9hB,KAAAgL,QACK,CAELw0B,EAAAjoB,EAAAg0C,iBAAA,EAAAzpC,GACAJ,EAAAO,OAAAud,EAAAj2B,EAAAi2B,EAAAh2B,GAEA,QAAA5Q,EAAA,EAAqBA,EAAA0yD,EAAgB1yD,IACrC4mC,EAAAjoB,EAAAg0C,iBAAA3yD,EAAAkpB,GACAJ,EAAAkB,OAAA4c,EAAAj2B,EAAAi2B,EAAAh2B,GAIAkY,EAAAS,YACAT,EAAAqB,SACArB,EAAA8B,WA2JAoqC,CAAAxvC,EAAA4hC,EAAA2N,EAAAryC,GAGA+jC,EAAAphB,QAAA,CACA,IAAA2kB,EAAAkH,GAAAzK,EAAAwD,UAAA79B,GAAAO,OAAAb,kBAMA,GALAhD,EAAA+D,KAAA85B,EAAA3kD,OACA8mB,EAAA2B,OACA3B,EAAA+iC,UAAArmC,EAAA0gB,QAAA1gB,EAAA2gB,SACArd,EAAAvH,OAAA2U,GAEAuwB,EAAA8K,kBAAA,CACA,IAAAxK,EAAAj+B,EAAA8wB,YAAApd,GAAApyB,MACA0e,EAAAoO,UAAAuvB,EAAA+K,cACA1oC,EAAAqS,UAAA4rB,EAAA,EAAAN,EAAAiL,kBAAAqD,EAAApO,EAAA1kD,KAAA,EAAAwkD,EAAAgL,iBAAA1K,EAAA,EAAAN,EAAAiL,iBAAA/K,EAAA1kD,KAAA,EAAAwkD,EAAAgL,kBAGA3oC,EAAAsyB,UAAA,SACAtyB,EAAAuyB,aAAA,SACAvyB,EAAAoO,UAAA8yB,EACAlhC,EAAAwyB,SAAA9e,EAAA,GAAAu4B,GACAjsC,EAAA8B,kBAQAqqC,GAAA5D,GACAc,GAAAjF,UAAA+H,GACA,IAAAC,GAAA5nC,GAAA5J,eAEAyxC,GAAA1xC,OAAA2xC,mBAAA,iBACAC,GAAA5xC,OAAA6xC,kBAAA,iBACAC,GAAA,CACAC,YAAA,CACAC,QAAA,EACAxzD,KAAA,EACAyzD,MAAA,8BAEAC,OAAA,CACAF,QAAA,EACAxzD,KAAA,IACAyzD,MAAA,kBAEAE,OAAA,CACAH,QAAA,EACAxzD,KAAA,IACAyzD,MAAA,kBAEAG,KAAA,CACAJ,QAAA,EACAxzD,KAAA,KACAyzD,MAAA,cAEAI,IAAA,CACAL,QAAA,EACAxzD,KAAA,MACAyzD,MAAA,SAEAK,KAAA,CACAN,QAAA,EACAxzD,KAAA,OACAyzD,MAAA,WAEAM,MAAA,CACAP,QAAA,EACAxzD,KAAA,OACAyzD,MAAA,SAEAO,QAAA,CACAR,QAAA,EACAxzD,KAAA,OACAyzD,MAAA,WAEAQ,KAAA,CACAT,QAAA,EACAxzD,KAAA,SAGAk0D,GAAA12D,OAAAY,KAAAk1D,IAEA,SAAAa,GAAAv0D,EAAAoO,GACA,OAAApO,EAAAoO,EAGA,SAAAomD,GAAA5tB,GACA,IAEAzoC,EAAAukB,EAAA3b,EAFA0tD,EAAA,GACAC,EAAA,GAGA,IAAAv2D,EAAA,EAAAukB,EAAAkkB,EAAAvoC,OAAoCF,EAAAukB,IAAUvkB,EAC9C4I,EAAA6/B,EAAAzoC,GAEAs2D,EAAA1tD,KACA0tD,EAAA1tD,IAAA,EACA2tD,EAAApmC,KAAAvnB,IAIA,OAAA2tD,EAuGA,SAAAC,GAAA9qD,EAAA+qD,EAAA3xC,EAAA4xC,GACA,IAAA93B,EA3CA,SAAAlzB,EAAAnM,EAAAC,GAKA,IAJA,IAEAm3D,EAAAC,EAAAC,EAFAC,EAAA,EACA3lD,EAAAzF,EAAAxL,OAAA,EAGA42D,GAAA,GAAAA,GAAA3lD,GAAA,CAKA,GAHAylD,EAAAlrD,GADAirD,EAAAG,EAAA3lD,GAAA,GACA,SACA0lD,EAAAnrD,EAAAirD,IAEAC,EAEA,OACAE,GAAA,KACA3lD,GAAA0lD,GAEO,GAAAA,EAAAt3D,GAAAC,EACPs3D,EAAAH,EAAA,MACO,MAAAC,EAAAr3D,GAAAC,GAGP,OACAs3D,GAAAF,EACAzlD,GAAA0lD,GAJA1lD,EAAAwlD,EAAA,GAUA,OACAG,GAAAD,EACA1lD,GAAA,MAYA4lD,CAAArrD,EAAA+qD,EAAA3xC,GAEAmZ,EAAAW,EAAAk4B,GAAAl4B,EAAAztB,GAAAytB,EAAAk4B,GAAAprD,IAAAxL,OAAA,GAAAwL,EAAA,GACAmzB,EAAAD,EAAAk4B,GAAAl4B,EAAAztB,GAAAytB,EAAAztB,GAAAzF,IAAAxL,OAAA,GAAAwL,EAAA,GACAsrD,EAAAn4B,EAAA43B,GAAAx4B,EAAAw4B,GACA7kD,EAAAolD,GAAAlyC,EAAAmZ,EAAAw4B,IAAAO,EAAA,EACAp7B,GAAAiD,EAAA63B,GAAAz4B,EAAAy4B,IAAA9kD,EACA,OAAAqsB,EAAAy4B,GAAA96B,EAGA,SAAAq7B,GAAAt4C,EAAAu4C,GACA,IAAAC,EAAAx4C,EAAAy4C,SACAxyC,EAAAjG,EAAAiG,QAAAyyC,KACAC,EAAA1yC,EAAA0yC,OACA1V,EAAA0V,GAAA1yC,EAAAg9B,OACApiD,EAAA03D,EAWA,MATA,oBAAAI,IACA93D,EAAA83D,EAAA93D,IAIA8tB,GAAAjK,SAAA7jB,KACAA,EAAA,kBAAAoiD,EAAAuV,EAAAxV,MAAAniD,EAAAoiD,GAAAuV,EAAAxV,MAAAniD,IAGA,OAAAA,GACAA,GAKA83D,GAAA,oBAAA1V,IACApiD,EAAAoiD,EAAAsV,GAEA5pC,GAAAjK,SAAA7jB,KACAA,EAAA23D,EAAAxV,MAAAniD,KAIAA,GAGA,SAAAmiD,GAAAhjC,EAAAu4C,GACA,GAAA5pC,GAAArK,cAAAi0C,GACA,YAGA,IAAAtyC,EAAAjG,EAAAiG,QAAAyyC,KACA73D,EAAAy3D,GAAAt4C,IAAA8f,cAAAy4B,IAEA,cAAA13D,EACAA,GAGAolB,EAAApI,QACAhd,GAAAmf,EAAAy4C,SAAAtV,QAAAtiD,EAAAolB,EAAApI,QAGAhd,GAqEA,SAAA+3D,GAAA7I,GACA,QAAA1uD,EAAAm2D,GAAAjyD,QAAAwqD,GAAA,EAAAnqC,EAAA4xC,GAAAj2D,OAA8DF,EAAAukB,IAAUvkB,EACxE,GAAAu1D,GAAAY,GAAAn2D,IAAAy1D,OACA,OAAAU,GAAAn2D,GAYA,SAAAw3D,GAAA74C,EAAAzO,EAAAC,EAAAsnD,GACA,IAYAJ,EAZAF,EAAAx4C,EAAAy4C,SACAxyC,EAAAjG,EAAAiG,QACA8yC,EAAA9yC,EAAAyyC,KACA9S,EAAAmT,EAAAhJ,MAtDA,SAAAiJ,EAAAznD,EAAAC,EAAAsnD,GACA,IACAz3D,EAAA43D,EAAAtJ,EADA/pC,EAAA4xC,GAAAj2D,OAGA,IAAAF,EAAAm2D,GAAAjyD,QAAAyzD,GAAoC33D,EAAAukB,EAAA,IAAcvkB,EAIlD,GAHA43D,EAAArC,GAAAY,GAAAn2D,IACAsuD,EAAAsJ,EAAAlC,MAAAkC,EAAAlC,MAAAkC,EAAAlC,MAAAx1D,OAAA,GAAAm1D,GAEAuC,EAAAnC,QAAAruD,KAAA0mD,MAAA39C,EAAAD,IAAAo+C,EAAAsJ,EAAA31D,QAAAw1D,EACA,OAAAtB,GAAAn2D,GAIA,OAAAm2D,GAAA5xC,EAAA,GAyCAszC,CAAAH,EAAAC,QAAAznD,EAAAC,EAAAsnD,GACAjT,EAAA+S,GAAAhT,GACAsJ,EAAAqH,GAAAwC,EAAA7J,SAAA6J,EAAAI,cACAC,EAAA,SAAAxT,GAAAmT,EAAAM,WACAC,EAAArzC,EAAAuZ,MAAAqmB,MAAA9Q,QACAkkB,EAAArC,GAAAhR,GACA2T,EAAAhoD,EACAotB,EAAAntB,EACAguB,EAAA,GA+BA,IA5BA0vB,IACAA,EA5FA,SAAA39C,EAAAC,EAAAu+C,EAAA+I,GACA,IAIAz3D,EAAAukB,EAAA+pC,EAJA1vB,EAAAzuB,EAAAD,EACA0nD,EAAArC,GAAA7G,GACAyJ,EAAAP,EAAA31D,KACAyzD,EAAAkC,EAAAlC,MAGA,IAAAA,EACA,OAAAtuD,KAAA0mD,KAAAlvB,GAAA64B,EAAAU,IAGA,IAAAn4D,EAAA,EAAAukB,EAAAmxC,EAAAx1D,OAAoCF,EAAAukB,IACpC+pC,EAAAoH,EAAA11D,KAEAoH,KAAA0mD,KAAAlvB,GAAAu5B,EAAA7J,KAAAmJ,MAH8Cz3D,GAQ9C,OAAAsuD,EAyEA8J,CAAAloD,EAAAC,EAAAo0C,EAAAkT,IAIAM,IACAG,GAAAf,EAAArV,QAAAoW,EAAA,UAAAH,GACAz6B,GAAA65B,EAAArV,QAAAxkB,EAAA,UAAAy6B,IAIAG,GAAAf,EAAArV,QAAAoW,EAAAH,EAAA,MAAAxT,IACAjnB,GAAA65B,EAAArV,QAAAxkB,EAAAy6B,EAAA,MAAAxT,IAEAp0C,IACAmtB,GAAA65B,EAAAjvD,IAAAo1B,EAAA,EAAAinB,IAGA8S,EAAAa,EAEAD,GAAAzT,IAAAuT,IAAAL,EAAAl7C,QAIA66C,GAAAF,EAAArV,QAAAuV,EAAA7S,GACA6S,GAAAF,EAAAjvD,IAAAmvD,MAAAa,EAAAb,IAAAO,EAAA31D,KAAA4rD,MAAAtJ,IAGU8S,EAAA/5B,EAAa+5B,GAAAF,EAAAjvD,IAAAmvD,EAAAxJ,EAAAtJ,GACvBpmB,EAAAhO,MAAAknC,GAIA,OADAl5B,EAAAhO,MAAAknC,GACAl5B,EA2DA,IAsDAk6B,GAAA5T,GAAAr/B,OAAA,CACAsI,WAAA,WACApqB,KAAAw7C,oBACA2F,GAAA9gD,UAAA+pB,WAAArqB,KAAAC,OAEAsvB,OAAA,WACA,IACAhO,EADAthB,KACAshB,QACAyyC,EAAAzyC,EAAAyyC,OAAAzyC,EAAAyyC,KAAA,IACAF,EAHA7zD,KAGA8zD,SAAA,IAAAjV,GAAAC,MAAAx9B,EAAA0zC,SAAAC,MAWA,OATAlB,EAAAzV,QACA1/B,QAAAs2C,KAAA,0EAOAlrC,GAAArI,QAAAoyC,EAAAoB,eAAAtB,EAAAzV,WACA+C,GAAA9gD,UAAAivB,OAAApP,MAdAlgB,KAcArD,YAMAw+B,cAAA,SAAA6pB,GAKA,OAJAA,QAAA1iD,IAAA0iD,EAAA92C,IACA82C,IAAA92C,GAGAizC,GAAA9gD,UAAA86B,cAAAp7B,KAAAC,KAAAglD,IAEA5C,oBAAA,WACA,IAUA1lD,EAAAyhC,EAAAld,EAAAkjB,EAAAvV,EAAAwmC,EAVAlzC,EAAAliB,KACAulB,EAAArD,EAAAqD,MACAsuC,EAAA3xC,EAAA4xC,SACAM,EAAAlyC,EAAAZ,QAAAyyC,KACA3I,EAAAgJ,EAAAhJ,MAAA,MACAx+C,EAAAmlD,GACAllD,EAAAglD,GACAwD,EAAA,GACAxmC,EAAA,GACAsK,EAAA,GAEAm8B,EAAA/vC,EAAAqJ,KAAAuK,QAAA,GAEA,IAAAz8B,EAAA,EAAAukB,EAAAq0C,EAAA14D,OAA2CF,EAAAukB,IAAUvkB,EACrDy8B,EAAAtM,KAAAwxB,GAAAn8B,EAAAozC,EAAA54D,KAIA,IAAAA,EAAA,EAAAukB,GAAAsE,EAAAqJ,KAAAC,UAAA,IAAAjyB,OAA4DF,EAAAukB,IAAUvkB,EACtE,GAAA6oB,EAAA4U,iBAAAz9B,GAGA,GAFAkyB,EAAArJ,EAAAqJ,KAAAC,SAAAnyB,GAAAkyB,KAEA5E,GAAAlK,SAAA8O,EAAA,IAGA,IAFAC,EAAAnyB,GAAA,GAEAyhC,EAAA,EAAAgG,EAAAvV,EAAAhyB,OAA2CuhC,EAAAgG,IAAUhG,EACrDi3B,EAAA/W,GAAAn8B,EAAA0M,EAAAuP,IACAk3B,EAAAxoC,KAAAuoC,GACAvmC,EAAAnyB,GAAAyhC,GAAAi3B,MAEW,CACX,IAAAj3B,EAAA,EAAAgG,EAAAhL,EAAAv8B,OAA6CuhC,EAAAgG,IAAUhG,EACvDk3B,EAAAxoC,KAAAsM,EAAAgF,IAGAtP,EAAAnyB,GAAAy8B,EAAAtgB,MAAA,QAGAgW,EAAAnyB,GAAA,GAIAy8B,EAAAv8B,SAEAu8B,EAAA45B,GAAA55B,GAAA2M,KAAAgtB,IACAlmD,EAAA9I,KAAA8I,MAAAusB,EAAA,IACAtsB,EAAA/I,KAAA+I,MAAAssB,IAAAv8B,OAAA,KAGAy4D,EAAAz4D,SACAy4D,EAAAtC,GAAAsC,GAAAvvB,KAAAgtB,IACAlmD,EAAA9I,KAAA8I,MAAAyoD,EAAA,IACAxoD,EAAA/I,KAAA+I,MAAAwoD,IAAAz4D,OAAA,KAGAgQ,EAAAyxC,GAAAn8B,EAAAkyC,EAAAxnD,QACAC,EAAAwxC,GAAAn8B,EAAAkyC,EAAAvnD,QAEAD,MAAAmlD,IAAA8B,EAAArV,QAAA9xB,KAAAC,MAAAy+B,GAAAx+C,EACAC,MAAAglD,IAAAgC,EAAApV,MAAA/xB,KAAAC,MAAAy+B,GAAA,EAAAv+C,EAEAqV,EAAAtV,IAAA9I,KAAA8I,MAAAC,GACAqV,EAAArV,IAAA/I,KAAA+I,IAAAD,EAAA,EAAAC,GAEAqV,EAAAqzC,YAAArzC,EAAAqX,eACArX,EAAAszC,OAAA,GACAtzC,EAAAuzC,YAAA,CACA7mC,KAAAymC,EACAxmC,WACAsK,WAGAopB,WAAA,WACA,IAOA7lD,EAAAukB,EAAAm0C,EAPAlzC,EAAAliB,KACA4M,EAAAsV,EAAAtV,IACAC,EAAAqV,EAAArV,IACAyU,EAAAY,EAAAZ,QACA8yC,EAAA9yC,EAAAyyC,KACAsB,EAAA,GACAx6B,EAAA,GAGA,OAAAvZ,EAAAuZ,MAAAh+B,QACA,WACAw4D,EAAAnzC,EAAAuzC,YAAA7mC,KACA,MAEA,aACAymC,EAAAnzC,EAAAuzC,YAAAt8B,OACA,MAEA,WACA,QACAk8B,EAAAnB,GAAAhyC,EAAAtV,EAAAC,EAAAqV,EAAAwzC,iBAAA9oD,IAYA,IATA,UAAA0U,EAAA+V,QAAAg+B,EAAAz4D,SACAgQ,EAAAyoD,EAAA,GACAxoD,EAAAwoD,IAAAz4D,OAAA,IAIAgQ,EAAAyxC,GAAAn8B,EAAAkyC,EAAAxnD,QACAC,EAAAwxC,GAAAn8B,EAAAkyC,EAAAvnD,QAEAnQ,EAAA,EAAAukB,EAAAo0C,EAAAz4D,OAA2CF,EAAAukB,IAAUvkB,GACrD04D,EAAAC,EAAA34D,KAEAkQ,GAAAwoD,GAAAvoD,GACAguB,EAAAhO,KAAAuoC,GAgBA,OAZAlzC,EAAAtV,MACAsV,EAAArV,MAEAqV,EAAAyzC,MAAAvB,EAAAhJ,MArVA,SAAA/vC,EAAAwf,EAAAw5B,EAAAznD,EAAAC,GACA,IACAnQ,EAAA0uD,EADAnqC,EAAA4xC,GAAAj2D,OAGA,IAAAF,EAAAukB,EAAA,EAAsBvkB,GAAAm2D,GAAAjyD,QAAAyzD,GAA6B33D,IAGnD,GAFA0uD,EAAAyH,GAAAn2D,GAEAu1D,GAAA7G,GAAA+G,QAAA92C,EAAAy4C,SAAAvV,KAAA1xC,EAAAD,EAAAw+C,IAAAvwB,EAAAj+B,OACA,OAAAwuD,EAIA,OAAAyH,GAAAwB,EAAAxB,GAAAjyD,QAAAyzD,GAAA,GAyUAuB,CAAA1zC,EAAA2Y,EAAAu5B,EAAAC,QAAAnyC,EAAAtV,IAAAsV,EAAArV,KACAqV,EAAA2zC,WAAA5B,GAAA/xC,EAAAyzC,OACAzzC,EAAAszC,OA7hBA,SAAAH,EAAAzoD,EAAAC,EAAAipD,GACA,cAAAA,IAAAT,EAAAz4D,OACA,QACAm3D,KAAAnnD,EACAuhC,IAAA,GACO,CACP4lB,KAAAlnD,EACAshC,IAAA,IAIA,IAEAzxC,EAAAukB,EAAA0Z,EAAAC,EAAAW,EAFAnzB,EAAA,GACA+8B,EAAA,CAAAv4B,GAGA,IAAAlQ,EAAA,EAAAukB,EAAAo0C,EAAAz4D,OAAyCF,EAAAukB,IAAUvkB,GACnDk+B,EAAAy6B,EAAA34D,IAEAkQ,GAAAguB,EAAA/tB,GACAs4B,EAAAtY,KAAA+N,GAMA,IAFAuK,EAAAtY,KAAAhgB,GAEAnQ,EAAA,EAAAukB,EAAAkkB,EAAAvoC,OAAoCF,EAAAukB,IAAUvkB,EAC9C6+B,EAAA4J,EAAAzoC,EAAA,GACAi+B,EAAAwK,EAAAzoC,EAAA,GACAk+B,EAAAuK,EAAAzoC,QAEA4F,IAAAq4B,QAAAr4B,IAAAi5B,GAAAz3B,KAAAoV,OAAAqiB,EAAAZ,GAAA,KAAAC,GACAxyB,EAAAykB,KAAA,CACAknC,KAAAn5B,EACAuT,IAAAzxC,GAAAukB,EAAA,KAKA,OAAA7Y,EAufA2tD,CAAA7zC,EAAAuzC,YAAA7mC,KAAAhiB,EAAAC,EAAAyU,EAAAw0C,cACA5zC,EAAA8zC,SAhQA,SAAA5tD,EAAAyyB,EAAAjuB,EAAAC,EAAAyU,GACA,IAEAszC,EAAA56B,EAFAnP,EAAA,EACA0P,EAAA,EAyBA,OAtBAjZ,EAAAgX,QAAAuC,EAAAj+B,SACA0kB,EAAAyyC,KAAAnnD,MACAgoD,EAAA1B,GAAA9qD,EAAA,OAAAyyB,EAAA,UAGAhQ,EADA,IAAAgQ,EAAAj+B,OACA,EAAAg4D,GAEA1B,GAAA9qD,EAAA,OAAAyyB,EAAA,UAAA+5B,GAAA,GAIAtzC,EAAAyyC,KAAAlnD,MACAmtB,EAAAk5B,GAAA9qD,EAAA,OAAAyyB,IAAAj+B,OAAA,UAGA29B,EADA,IAAAM,EAAAj+B,OACAo9B,GAEAA,EAAAk5B,GAAA9qD,EAAA,OAAAyyB,IAAAj+B,OAAA,eAKA,CACAiuB,QACA0P,OAmOA07B,CAAA/zC,EAAAszC,OAAA36B,EAAAjuB,EAAAC,EAAAyU,GAEAA,EAAAuZ,MAAAja,SACAia,EAAAja,UAlOA,SAAAvF,EAAA/B,EAAA48C,GACA,IACAx5D,EAAAukB,EAAA/kB,EAAAglD,EADArmB,EAAA,GAGA,IAAAn+B,EAAA,EAAAukB,EAAA3H,EAAA1c,OAAqCF,EAAAukB,IAAUvkB,EAC/CR,EAAAod,EAAA5c,GACAwkD,IAAAgV,GAAAh6D,KAAAmf,EAAAy4C,SAAAtV,QAAAtiD,EAAAg6D,GACAr7B,EAAAhO,KAAA,CACA3wB,QACAglD,UAIA,OAAArmB,EAwNAs7B,CAAAj0C,EAAA2Y,EAAA3Y,EAAA2zC,aAEA1iB,iBAAA,SAAA/zB,EAAAyO,GACA,IAAA3L,EAAAliB,KACA6zD,EAAA3xC,EAAA4xC,SACAllC,EAAA1M,EAAAqD,MAAAqJ,KACAwlC,EAAAlyC,EAAAZ,QAAAyyC,KACA76B,EAAAtK,EAAAuK,QAAA/Z,EAAAwP,EAAAuK,OAAAv8B,OAAAgyB,EAAAuK,OAAA/Z,GAAA,GACAljB,EAAA0yB,EAAAC,SAAAhB,GAAAe,KAAAxP,GAMA,OAJA4K,GAAAlK,SAAA5jB,KACAg9B,EAAAhX,EAAAiZ,cAAAj/B,IAGAk4D,EAAAgC,cACAvC,EAAAvV,OAAAqV,GAAAzxC,EAAAgX,GAAAk7B,EAAAgC,eAGA,kBAAAl9B,EACAA,EAGA26B,EAAAvV,OAAAqV,GAAAzxC,EAAAgX,GAAAk7B,EAAAe,eAAAkB,WAOAC,mBAAA,SAAAvC,EAAA30C,EAAAyb,EAAAyjB,GACA,IACAuV,EADA7zD,KACA8zD,SACAxyC,EAFAthB,KAEAshB,QACA88B,EAAA98B,EAAAyyC,KAAAoB,eACAoB,EAAAnY,EAJAp+C,KAIA21D,OACAO,EALAl2D,KAKA61D,WACAW,EAAApY,EAAA8X,GACAO,GAAA5C,EAAArV,QAAAuV,EAAAmC,GACAQ,EAAAp1C,EAAAuZ,MAAAqmB,MACAA,EAAAwV,EAAAtmB,SAAA8lB,GAAAM,GAAAzC,IAAA0C,EACAv9B,EAAA26B,EAAAvV,OAAAyV,EAAAzV,IAAA4C,EAAAsV,EAAAD,IACApT,EAAAjC,EAAAwV,EAAAp1C,EAAAuZ,MAAAomB,MACA0V,EAAA/E,GAAAzO,EAAA5iC,SAAA4iC,EAAAC,cACA,OAAAuT,IAAAz9B,EAAA9Z,EAAAyb,GAAA3B,GAEAwpB,qBAAA,SAAA7nB,GACA,IACAn+B,EAAAukB,EADAkY,EAAA,GAGA,IAAAz8B,EAAA,EAAAukB,EAAA4Z,EAAAj+B,OAAsCF,EAAAukB,IAAUvkB,EAChDy8B,EAAAtM,KAAA7sB,KAAAs2D,mBAAAz7B,EAAAn+B,GAAAR,MAAAQ,EAAAm+B,IAGA,OAAA1B,GAMAy9B,kBAAA,SAAA7C,GACA,IAAA7xC,EAAAliB,KACA62D,EAAA30C,EAAAZ,QAAAuZ,MAAAja,QACAjiB,EAAAujB,EAAAqzC,YAAArzC,EAAApb,MAAAob,EAAAwD,OACAmF,EAAA3I,EAAAqzC,YAAAsB,EAAA30C,EAAA2D,MAAA3D,EAAAnb,KAAA8vD,EAAA30C,EAAA4D,OAAA5D,EAAAlb,IACAmnC,EAAA+kB,GAAAhxC,EAAAszC,OAAA,OAAAzB,EAAA,OACAz7B,EAAA35B,GAAAujB,EAAA8zC,SAAAnrC,MAAAsjB,IAAAjsB,EAAA8zC,SAAAnrC,MAAA,EAAA3I,EAAA8zC,SAAAz7B,KACA,OAAAs8B,EAAAhsC,EAAAyN,EAAAzN,EAAAyN,GAEAmC,iBAAA,SAAAv+B,EAAAkjB,EAAAyO,GACA,IACAkmC,EAAA,KAUA,QARAzxD,IAAA8c,QAAA9c,IAAAurB,IACAkmC,EAJA/zD,KAIAy1D,YAAA5mC,SAAAhB,GAAAzO,IAGA,OAAA20C,IACAA,EAAA1V,GARAr+C,KAQA9D,IAGA,OAAA63D,EACA,OAZA/zD,KAYA42D,kBAAA7C,IAGAh5B,gBAAA,SAAA3b,GACA,IAAAyb,EAAA76B,KAAA86B,WACA,OAAA1b,GAAA,GAAAA,EAAAyb,EAAAj+B,OAAAoD,KAAA42D,kBAAA/7B,EAAAzb,GAAAljB,OAAA,MAEA+oD,iBAAA,SAAAE,GACA,IAAAjjC,EAAAliB,KACArB,EAAAujB,EAAAqzC,YAAArzC,EAAApb,MAAAob,EAAAwD,OACAmF,EAAA3I,EAAAqzC,YAAArzC,EAAAnb,KAAAmb,EAAAlb,IACAmnC,GAAAxvC,GAAAwmD,EAAAt6B,GAAAlsB,EAAA,IAAAujB,EAAA8zC,SAAAnrC,MAAA,EAAA3I,EAAA8zC,SAAAnrC,OAAA3I,EAAA8zC,SAAAz7B,IACAw5B,EAAAb,GAAAhxC,EAAAszC,OAAA,MAAArnB,EAAA,QAEA,OAAAjsB,EAAA4xC,SAAApV,QAAAqV,IAOA+C,cAAA,SAAA59B,GACA,IACA69B,EADA/2D,KACAshB,QAAAuZ,MACAm8B,EAFAh3D,KAEAwlB,IAAA8wB,YAAApd,GAAApyB,MACA4rB,EAAA1I,GAAA45B,UAAAmT,EAAAnW,aACA2C,EAAAz/C,KAAAmL,IAAAyjB,GACAgyB,EAAA5gD,KAAAoL,IAAAwjB,GACAukC,EAAArF,GAAAmF,EAAAztC,SAAAR,GAAAO,OAAAX,iBACA,OAAAsuC,EAAAzT,EAAA0T,EAAAvS,GAMAgR,iBAAA,SAAAwB,GACA,IAAAh1C,EAAAliB,KAEAs+C,EAAAp8B,EAAAZ,QAAAyyC,KAAAoB,eAAAjD,YACAiF,EAAAj1C,EAAAo0C,mBAAAY,EAAA,KAAA5Y,GACA0Y,EAAA90C,EAAA40C,cAAAK,GACAjS,EAAAhjC,EAAAqX,eAAArX,EAAApb,MAAAob,EAAAwD,OACAyuC,EAAArwD,KAAAgK,MAAAo3C,EAAA8R,GACA,OAAA7C,EAAA,EAAAA,EAAA,KAIAiD,GArVA,CACAjxD,SAAA,SASA2vD,aAAA,SASAz+B,OAAA,OACA29B,SAAA,GACAjB,KAAA,CACAC,QAAA,EAEA1V,QAAA,EAEA8M,MAAA,EAEAlyC,OAAA,EAEAm+C,eAAA,EAEA3C,YAAA,EAEAL,QAAA,cACAc,eAAA,IAEAt6B,MAAA,CACAimB,UAAA,EAUAjkD,OAAA,OACAqkD,MAAA,CACA9Q,SAAA,KAoSA2kB,GAAAnL,UAAAwN,GACA,IAAA5oC,GAAA,CACA8oC,SAAAxO,GACAhmC,OAAAkpC,GACAtM,YAAAqN,GACAwK,aAAA1I,GACAkF,KAAAgB,IAEAyC,GAAA,CACAnB,SAAA,yBACAnE,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,QAGA/T,GAAAC,MAAAH,SAAA,oBAAA11C,EAAA,CACAwuD,IAAA,SAEArZ,QAAA,WACA,OAAAoZ,IAEAnZ,MAAA,SAAAniD,EAAAoiD,GAOA,MANA,kBAAApiD,GAAA,kBAAAoiD,EACApiD,EAAA+M,EAAA/M,EAAAoiD,GACOpiD,aAAA+M,IACP/M,EAAA+M,EAAA/M,IAGAA,EAAA4f,UAAA5f,EAAAw7D,UAAA,MAEApZ,OAAA,SAAAyV,EAAA4D,GACA,OAAA1uD,EAAA8qD,GAAAzV,OAAAqZ,IAEA/yD,IAAA,SAAAmvD,EAAA6D,EAAAxM,GACA,OAAAniD,EAAA8qD,GAAAnvD,IAAAgzD,EAAAxM,GAAAsM,WAEAnZ,KAAA,SAAA1xC,EAAAD,EAAAw+C,GACA,OAAAniD,EAAAgjB,SAAAhjB,EAAA4D,GAAA0xC,KAAAt1C,EAAA2D,KAAAirD,GAAAzM,IAEA5M,QAAA,SAAAuV,EAAA3I,EAAAqJ,GAGA,OAFAV,EAAA9qD,EAAA8qD,GAEA,YAAA3I,EACA2I,EAAAW,WAAAD,GAAAiD,UAGA3D,EAAAvV,QAAA4M,GAAAsM,WAEAjZ,MAAA,SAAAsV,EAAA3I,GACA,OAAAniD,EAAA8qD,GAAAtV,MAAA2M,GAAAsM,WAUAhZ,QAAA,SAAAqV,GACA,OAAA9qD,EAAA8qD,KAEG,IAEHjrC,GAAAT,KAAA,UACAmmB,QAAA,CACAspB,OAAA,CACAC,WAAA,MAKA,IAAAC,GAAA,CACA3pC,QAAA,SAAAxxB,GACA,IAAAuiB,EAAAviB,EAAA+pB,KACArB,EAAA1oB,EAAA0oB,MACA4I,EAAA5I,EAAAuJ,eAAA1P,GACA64C,EAAA9pC,GAAA5I,EAAA4U,iBAAA/a,GACAuV,EAAAsjC,GAAA9pC,EAAAE,QAAAuG,WAAA,GACAh4B,EAAA+3B,EAAA/3B,QAAA,EACA,OAAAA,EAAA,SAAAoqB,EAAAtqB,GACA,OAAAA,EAAAE,GAAA+3B,EAAAj4B,GAAA6tB,OAAA,MADA,MAIA2tC,SAAA,SAAAr7D,GACA,IAAAq7D,EAAAr7D,EAAAq7D,SACA7qD,EAAA6qD,IAAA7qD,EAAA,KACAC,EAAA4qD,IAAA5qD,EAAA,KACA,gBAAA0Z,GACA,OACA3Z,EAAA,OAAAA,EAAA2Z,EAAA3Z,IACAC,EAAA,OAAAA,EAAA0Z,EAAA1Z,QAMA,SAAA6qD,GAAAttB,EAAAzrB,EAAAmS,GACA,IAEA90B,EAFAmuB,EAAAigB,EAAArgB,QAAA,GACA5D,EAAAgE,EAAAhE,KAOA,QAJAtkB,IAAAskB,IACAA,IAAAgE,EAAA/kB,kBAGA,IAAA+gB,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAKA,GAFAnqB,EAAA2e,WAAAwL,EAAA,IAEA7G,SAAAtjB,IAAAqH,KAAAgK,MAAArR,OAKA,MAJA,MAAAmqB,EAAA,UAAAA,EAAA,KACAnqB,EAAA2iB,EAAA3iB,KAGAA,IAAA2iB,GAAA3iB,EAAA,GAAAA,GAAA80B,IAIA90B,EAGA,OAAAmqB,GAEA,aACA,cAEA,UACA,YAEA,WACA,eAGA,aACA,YACA,UACA,OAAAA,EAGA,QACA,UAIA,SAAAwxC,GAAAv7D,GACA,IAIAm6B,EAJApM,EAAA/tB,EAAAguC,GAAArgB,QAAA,GACAnP,EAAAxe,EAAAguC,GAAArK,QAAA,GACA5Z,EAAA/pB,EAAA+pB,KACAnqB,EAAA,KAGA,GAAAsjB,SAAA6G,GACA,YAkBA,GAZA,UAAAA,EACAnqB,OAAA6F,IAAAsoB,EAAAytC,YAAAh9C,EAAAyK,OAAA8E,EAAAytC,YACK,QAAAzxC,EACLnqB,OAAA6F,IAAAsoB,EAAA0tC,SAAAj9C,EAAArU,IAAA4jB,EAAA0tC,cACKh2D,IAAAsoB,EAAA2tC,UACL97D,EAAAmuB,EAAA2tC,UACKl9C,EAAA01C,gBACLt0D,EAAA4e,EAAA01C,kBACK11C,EAAAie,eACL78B,EAAA4e,EAAAie,qBAGAh3B,IAAA7F,GAAA,OAAAA,EAAA,CACA,QAAA6F,IAAA7F,EAAA4Q,QAAA/K,IAAA7F,EAAA6Q,EACA,OAAA7Q,EAGA,GAAAutB,GAAAjK,SAAAtjB,GAEA,OACA4Q,GAFA2pB,EAAA3b,EAAAke,gBAEA98B,EAAA,KACA6Q,EAAA0pB,EAAA,KAAAv6B,GAKA,YAGA,SAAA+7D,GAAA52C,EAAAxC,EAAA24C,GACA,IAGAt7D,EAHAI,EAAA+kB,EAAAxC,GACAwH,EAAA/pB,EAAA+pB,KACA6xC,EAAA,CAAAr5C,GAGA,IAAA24C,EACA,OAAAnxC,EAGA,UAAAA,IAAA,IAAA6xC,EAAA73D,QAAAgmB,IAAA,CACA,IAAA7G,SAAA6G,GACA,OAAAA,EAKA,KAFAnqB,EAAAmlB,EAAAgF,IAGA,SAGA,GAAAnqB,EAAAw7D,QACA,OAAArxC,EAGA6xC,EAAA5rC,KAAAjG,GACAA,EAAAnqB,EAAAmqB,KAGA,SAGA,SAAA8xC,GAAA77D,GACA,IAAA+pB,EAAA/pB,EAAA+pB,KACAnoB,EAAA,UAEA,WAAAmoB,EACA,MAGA7G,SAAA6G,KACAnoB,EAAA,YAGAu5D,GAAAv5D,GAAA5B,IAGA,SAAA87D,GAAA3xC,GACA,OAAAA,MAAAoO,KAGA,SAAAwjC,GAAApzC,EAAAqzC,EAAAC,EAAAC,EAAAC,GACA,IAAAt8D,EAEA,GAAAq8D,GAAAC,EAAA,CAOA,IAFAxzC,EAAAO,OAAA8yC,EAAA,GAAAxrD,EAAAwrD,EAAA,GAAAvrD,GAEA5Q,EAAA,EAAeA,EAAAq8D,IAAUr8D,EACzBstB,GAAArmB,OAAA+iB,OAAAlB,EAAAqzC,EAAAn8D,EAAA,GAAAm8D,EAAAn8D,IAMA,IAFA8oB,EAAAkB,OAAAoyC,EAAAE,EAAA,GAAA3rD,EAAAyrD,EAAAE,EAAA,GAAA1rD,GAEA5Q,EAAAs8D,EAAA,EAAsBt8D,EAAA,IAAOA,EAC7BstB,GAAArmB,OAAA+iB,OAAAlB,EAAAszC,EAAAp8D,GAAAo8D,EAAAp8D,EAAA,QAgDA,IAAAu8D,GAAA,CACAr1D,GAAA,SACAs1D,oBAAA,SAAA3zC,EAAAjE,GACA,IAGA6M,EAAAzxB,EAAAmuC,EAAAhuC,EAHA00B,GAAAhM,EAAAqJ,KAAAC,UAAA,IAAAjyB,OACAm7D,EAAAz2C,EAAAy2C,UACAn2C,EAAA,GAGA,IAAAllB,EAAA,EAAiBA,EAAA60B,IAAW70B,EAC5ByxB,EAAA5I,EAAAuJ,eAAApyB,GACAmuC,EAAA1c,EAAAE,QACAxxB,EAAA,KAEAguC,KAAArgB,QAAAqgB,aAAAra,GAAAuH,OACAl7B,EAAA,CACAo7D,QAAA1yC,EAAA4U,iBAAAz9B,GACAkqB,KAAAuxC,GAAAttB,EAAAnuC,EAAA60B,GACAhM,QACAslB,OAIA1c,EAAAgrC,QAAAt8D,EACA+kB,EAAAiL,KAAAhwB,GAGA,IAAAH,EAAA,EAAiBA,EAAA60B,IAAW70B,GAC5BG,EAAA+kB,EAAAllB,MAMAG,EAAA+pB,KAAA4xC,GAAA52C,EAAAllB,EAAAq7D,GACAl7D,EAAAq7D,SAAAE,GAAAv7D,GACAA,EAAAu8D,OAAAV,GAAA77D,KAGAw8D,kBAAA,SAAA9zC,EAAA3b,GACA,IAAAukB,EAAAvkB,EAAAukB,KAAAgrC,QAEA,GAAAhrC,EAAA,CAIA,IAAA3I,EAAAD,EAAAC,IACAqlB,EAAA1c,EAAA0c,GACA/f,EAAA+f,EAAAtgB,MACAoK,EAAAkW,EAAAjW,WAAA,GACAwkC,EAAAjrC,EAAAirC,OACA33D,EAAAqpB,EAAAjlB,iBAAAijB,GAAAO,OAAAd,aAEA6wC,GAAA33D,GAAAkzB,EAAA/3B,SACAotB,GAAArmB,OAAAujB,SAAA1B,EAAAD,EAAAyQ,WAjGA,SAAAxQ,EAAAmP,EAAAykC,EAAAtuC,EAAArpB,EAAA63D,GACA,IAMA58D,EAAAukB,EAAA7B,EAAAm6C,EAAAC,EAAAC,EAAAC,EANAnoC,EAAAoD,EAAA/3B,OACA82D,EAAA5oC,EAAA4J,SACAmkC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EAIA,IAFAxzC,EAAAiB,YAEA/pB,EAAA,EAAAukB,EAAAsQ,IAAA+nC,EAAsC58D,EAAAukB,IAAUvkB,EAEhD68D,EAAA5kC,EADAvV,EAAA1iB,EAAA60B,GACAhH,MACAivC,EAAAJ,EAAAG,EAAAn6C,EAAA0L,GACA2uC,EAAAd,GAAAY,GACAG,EAAAf,GAAAa,GAEAC,GAAAC,GACAX,EAAAF,EAAAhsC,KAAA0sC,GACAP,EAAAF,EAAAjsC,KAAA2sC,IACOT,GAAAC,IACPtF,GAMA+F,GACAZ,EAAAhsC,KAAA0sC,GAGAG,GACAZ,EAAAjsC,KAAA2sC,KAVAZ,GAAApzC,EAAAqzC,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,EAAA,GACAC,EAAA,KAaAF,GAAApzC,EAAAqzC,EAAAC,EAAAC,EAAAC,GACAxzC,EAAAS,YACAT,EAAAoO,UAAAnyB,EACA+jB,EAAAoB,OAyDA+yC,CAAAn0C,EAAAmP,EAAAykC,EAAAtuC,EAAArpB,EAAAopC,EAAA9V,OACA/K,GAAArmB,OAAA0jB,WAAA7B,OAIAo0C,GAAA5vC,GAAAvK,KACAo6C,GAAA7vC,GAAA5J,eAkFA,SAAA05C,GAAAC,EAAAzwC,GACA,OAAAywC,EAAAC,eAAAD,EAAAE,SAAA3wC,IAAAywC,EAAAE,SAjFAnxC,GAAAT,KAAA,UACAiV,OAAA,CACAyE,SAAA,EACA57B,SAAA,MACAkgC,WAAA,EACAzlB,SAAA,EACAvC,OAAA,IAEAzc,QAAA,SAAAG,EAAA47B,GACA,IAAAve,EAAAue,EAAA9P,aACAqsC,EAAAl6D,KAAAulB,MACA4I,EAAA+rC,EAAAprC,eAAA1P,GAEA+O,EAAA9D,OAAA,OAAA8D,EAAA9D,QAAA6vC,EAAAtrC,KAAAC,SAAAzP,GAAAiL,OAAA,KAEA6vC,EAAA5qC,UAEAiqB,QAAA,KACA4gB,QAAA,KACAhhC,OAAA,CACA8gC,SAAA,GACAlkC,QAAA,GAYAwH,eAAA,SAAAhY,GACA,IAAAqJ,EAAArJ,EAAAqJ,KACA,OAAA5E,GAAApK,QAAAgP,EAAAC,UAAAD,EAAAC,SAAAxpB,IAAA,SAAAgpB,EAAA3xB,GACA,OACA0gC,KAAA/O,EAAA6K,MACAtF,UAAA5J,GAAApK,QAAAyO,EAAAxoB,iBAAAwoB,EAAAxoB,gBAAA,GAAAwoB,EAAAxoB,gBACAwkB,QAAA9E,EAAA4U,iBAAAz9B,GACAs4B,QAAA3G,EAAA6F,eACAkmC,SAAA/rC,EAAA8F,WACAe,eAAA7G,EAAA+F,iBACAN,SAAAzF,EAAAgG,gBACAR,UAAAxF,EAAA2C,YACA+C,YAAA1F,EAAA0C,YACA2E,WAAArH,EAAAqH,WAEA7H,aAAAnxB,IAEWsD,MAAA,MAIXm9B,eAAA,SAAA5X,GACA,IAAA6X,EAAA,GACAA,EAAAvQ,KAAA,cAAAtH,EAAA3hB,GAAA,aAEA,QAAAlH,EAAA,EAAqBA,EAAA6oB,EAAAqJ,KAAAC,SAAAjyB,OAAgCF,IACrD0gC,EAAAvQ,KAAA,qCAAAtH,EAAAqJ,KAAAC,SAAAnyB,GAAAmJ,gBAAA,aAEA0f,EAAAqJ,KAAAC,SAAAnyB,GAAAw8B,OACAkE,EAAAvQ,KAAAtH,EAAAqJ,KAAAC,SAAAnyB,GAAAw8B,OAGAkE,EAAAvQ,KAAA,SAIA,OADAuQ,EAAAvQ,KAAA,SACAuQ,EAAAC,KAAA,OAmBA,IAAAg9B,GAAA9uC,GAAAzJ,OAAA,CACAsI,WAAA,SAAAijB,GACArjB,GAAAlI,OAAA9hB,KAAAqtC,GAEArtC,KAAAs6D,eAAA,GAKAt6D,KAAAu6D,aAAA,KAEAv6D,KAAAw6D,cAAA,GAKA/Y,aAAAmY,GACAtqC,OAAA,SAAAoyB,EAAAC,EAAAC,GACA,IAAA1/B,EAAAliB,KAqBA,OAnBAkiB,EAAAu/B,eAEAv/B,EAAAw/B,WACAx/B,EAAAy/B,YACAz/B,EAAA0/B,UAEA1/B,EAAA8/B,sBACA9/B,EAAA+/B,gBACA//B,EAAAggC,qBAEAhgC,EAAAu4C,oBACAv4C,EAAAw4C,cACAx4C,EAAAy4C,mBAEAz4C,EAAA6gC,YACA7gC,EAAA8gC,MACA9gC,EAAA+gC,WAEA/gC,EAAAghC,cACAhhC,EAAAqc,SAEA2kB,YAAA0W,GAEA5X,oBAAA4X,GACA3X,cAAA,WACA,IAAA//B,EAAAliB,KAEAkiB,EAAAqX,gBAEArX,EAAApb,MAAAob,EAAAw/B,SACAx/B,EAAAnb,KAAA,EACAmb,EAAA2D,MAAA3D,EAAApb,QAEAob,EAAAwD,OAAAxD,EAAAy/B,UAEAz/B,EAAAlb,IAAA,EACAkb,EAAA4D,OAAA5D,EAAAwD,QAIAxD,EAAAk/B,YAAA,EACAl/B,EAAAm/B,WAAA,EACAn/B,EAAAo/B,aAAA,EACAp/B,EAAAq/B,cAAA,EAEAr/B,EAAAqc,QAAA,CACAz3B,MAAA,EACA4e,OAAA,IAGAw8B,mBAAA0X,GAEAa,kBAAAb,GACAc,YAAA,WACA,IAAAx4C,EAAAliB,KACA+5D,EAAA73C,EAAAZ,QAAA6X,QAAA,GACAyhC,EAAA5wC,GAAAzJ,SAAAw5C,EAAAx8B,eAAA,CAAArb,EAAAqD,OAAArD,IAAA,GAEA63C,EAAA78D,SACA09D,IAAA19D,OAAA,SAAAoI,GACA,OAAAy0D,EAAA78D,OAAAoI,EAAA4c,EAAAqD,MAAAqJ,SAIA1M,EAAAZ,QAAAV,SACAg6C,EAAAh6C,UAGAsB,EAAA04C,eAEAD,iBAAAf,GAEA7W,UAAA6W,GACA5W,IAAA,WACA,IAAA9gC,EAAAliB,KACAo+B,EAAAlc,EAAAZ,QACAy4C,EAAA37B,EAAAjF,OACA4I,EAAA3D,EAAA2D,QACAvc,EAAAtD,EAAAsD,IAEAq1C,EAAA7wC,GAAA1I,QAAA6H,WAAA4wC,GAEAzwC,EAAAuxC,EAAAl8D,KAEAm8D,EAAA54C,EAAAo4C,eAAA,GACA/7B,EAAArc,EAAAqc,QACAhF,EAAArX,EAAAqX,eAYA,GAVAA,GACAgF,EAAAz3B,MAAAob,EAAAw/B,SAEAnjB,EAAA7Y,OAAAqc,EAAA,OAEAxD,EAAAz3B,MAAAi7B,EAAA,KACAxD,EAAA7Y,OAAAxD,EAAAy/B,WAIA5f,EAGA,GAFAvc,EAAA+D,KAAAsxC,EAAAn8D,OAEA66B,EAAA,CAGA,IAAAwhC,EAAA74C,EAAA64C,WAAA,IACAC,EAAA,EACAx1C,EAAAsyB,UAAA,OACAtyB,EAAAuyB,aAAA,MACA/tB,GAAAtJ,KAAAwB,EAAA04C,YAAA,SAAAj9B,EAAAjhC,GACA,IAAAu9D,EAAAH,GAAAC,EAAAzwC,GACAxiB,EAAAmzD,EAAA3wC,EAAA,EAAA9D,EAAA8wB,YAAA3Y,EAAAP,MAAAt2B,OAEA,IAAApK,GAAAq+D,IAAAn+D,OAAA,GAAAkK,EAAAizD,EAAAhkC,QAAAwI,EAAAz3B,SACAk0D,GAAA1xC,EAAAywC,EAAAhkC,QACAglC,IAAAn+D,QAAAF,EAAA,QAAAq9D,EAAAhkC,SAIA+kC,EAAAp+D,GAAA,CACAqK,KAAA,EACAC,IAAA,EACAF,QACA4e,OAAA4D,GAEAyxC,IAAAn+D,OAAA,IAAAkK,EAAAizD,EAAAhkC,UAEAwI,EAAA7Y,QAAAs1C,MACS,CACT,IAAAC,EAAAlB,EAAAhkC,QACAmlC,EAAAh5C,EAAAg5C,aAAA,GACAC,EAAApB,EAAAhkC,QACAqlC,EAAA,EACAC,EAAA,EACAC,EAAAhyC,EAAA2xC,EACAjxC,GAAAtJ,KAAAwB,EAAA04C,YAAA,SAAAj9B,EAAAjhC,GACA,IAAAu9D,EAAAH,GAAAC,EAAAzwC,GACAiyC,EAAAtB,EAAA3wC,EAAA,EAAA9D,EAAA8wB,YAAA3Y,EAAAP,MAAAt2B,MAEApK,EAAA,GAAA2+D,EAAAC,EAAA/8B,EAAA7Y,OAAAu1C,IACAE,GAAAC,EAAArB,EAAAhkC,QACAmlC,EAAAruC,KAAAuuC,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAAt3D,KAAA+I,IAAAuuD,EAAAG,GACAF,GAAAC,EAEAR,EAAAp+D,GAAA,CACAqK,KAAA,EACAC,IAAA,EACAF,MAAAy0D,EACA71C,OAAA4D,KAGA6xC,GAAAC,EACAF,EAAAruC,KAAAuuC,GACA78B,EAAAz3B,OAAAq0D,EAIAj5C,EAAApb,MAAAy3B,EAAAz3B,MACAob,EAAAwD,OAAA6Y,EAAA7Y,QAEAu9B,SAAA2W,GAEArgC,aAAA,WACA,cAAAv5B,KAAAshB,QAAAnb,UAAA,WAAAnG,KAAAshB,QAAAnb,UAGAsqB,KAAA,WACA,IAAAvO,EAAAliB,KACAo+B,EAAAlc,EAAAZ,QACAy4C,EAAA37B,EAAAjF,OACA/P,EAAAN,GAAAO,OACAd,EAAAa,EAAAb,aACAizC,EAAApyC,EAAAoH,SAAAyD,KACAwnC,EAAAv5C,EAAApb,MACAi0D,EAAA74C,EAAA64C,WAEA,GAAA38B,EAAA2D,QAAA,CACA,IAMA25B,EANAl2C,EAAAtD,EAAAsD,IACAmhC,EAAAkT,GAAAE,EAAApT,UAAAv9B,EAAAZ,kBAEAqyC,EAAA7wC,GAAA1I,QAAA6H,WAAA4wC,GAEAzwC,EAAAuxC,EAAAl8D,KAGA6mB,EAAAsyB,UAAA,OACAtyB,EAAAuyB,aAAA,SACAvyB,EAAAqO,UAAA,GACArO,EAAAuO,YAAA4yB,EAEAnhC,EAAAoO,UAAA+yB,EAEAnhC,EAAA+D,KAAAsxC,EAAAn8D,OACA,IAAAu7D,EAAAH,GAAAC,EAAAzwC,GACAwxC,EAAA54C,EAAAo4C,eA2DA/gC,EAAArX,EAAAqX,eAGAmiC,EADAniC,EACA,CACAlsB,EAAA6U,EAAAnb,MAAA00D,EAAAV,EAAA,MAAAhB,EAAAhkC,QACAzoB,EAAA4U,EAAAlb,IAAA+yD,EAAAhkC,QACA9B,KAAA,GAGA,CACA5mB,EAAA6U,EAAAnb,KAAAgzD,EAAAhkC,QACAzoB,EAAA4U,EAAAlb,IAAA+yD,EAAAhkC,QACA9B,KAAA,GAIA,IAAAqnC,EAAAhyC,EAAAywC,EAAAhkC,QACA/L,GAAAtJ,KAAAwB,EAAA04C,YAAA,SAAAj9B,EAAAjhC,GACA,IAAAi/D,EAAAn2C,EAAA8wB,YAAA3Y,EAAAP,MAAAt2B,MACAA,EAAAmzD,EAAA3wC,EAAA,EAAAqyC,EACAtuD,EAAAquD,EAAAruD,EACAC,EAAAouD,EAAApuD,EAIAisB,EACA78B,EAAA,GAAA2Q,EAAAvG,EAAAizD,EAAAhkC,QAAA7T,EAAAnb,KAAAmb,EAAAqc,QAAAz3B,QACAwG,EAAAouD,EAAApuD,GAAAguD,EACAI,EAAAznC,OACA5mB,EAAAquD,EAAAruD,EAAA6U,EAAAnb,MAAA00D,EAAAV,EAAAW,EAAAznC,OAAA,EAAA8lC,EAAAhkC,SAEWr5B,EAAA,GAAA4Q,EAAAguD,EAAAp5C,EAAAlb,IAAAkb,EAAAqc,QAAA7Y,SACXrY,EAAAquD,EAAAruD,IAAA6U,EAAAg5C,aAAAQ,EAAAznC,MAAA8lC,EAAAhkC,QACAzoB,EAAAouD,EAAApuD,EAAA4U,EAAAlb,IAAA+yD,EAAAhkC,QACA2lC,EAAAznC,QA3FA,SAAA5mB,EAAAC,EAAAqwB,GACA,KAAAriB,MAAA2+C,OAAA,IAKAz0C,EAAA2B,OACA,IAAA0M,EAAAgmC,GAAAl8B,EAAA9J,UAAA2nC,EAAAxqC,aAaA,GAZAxL,EAAAoO,UAAAimC,GAAAl8B,EAAA/J,UAAArL,GACA/C,EAAAwP,QAAA6kC,GAAAl8B,EAAA3I,QAAAwmC,EAAAtnC,gBACA1O,EAAA0P,eAAA2kC,GAAAl8B,EAAAzI,eAAAsmC,EAAApnC,kBACA5O,EAAAsO,SAAA+lC,GAAAl8B,EAAA7J,SAAA0nC,EAAAnnC,iBACA7O,EAAAqO,YACArO,EAAAuO,YAAA8lC,GAAAl8B,EAAA5J,YAAAxL,GAEA/C,EAAAyP,aAEAzP,EAAAyP,YAAA4kC,GAAAl8B,EAAAy8B,SAAAoB,EAAArnC,aAGAiK,EAAAjF,QAAAiF,EAAAjF,OAAA6gC,cAAA,CAGA,IAAAp0C,EAAAq0C,EAAAn2D,KAAA83D,MAAA,EACAn8B,EAAApyB,EAAA4sD,EAAA,EACAv6B,EAAApyB,EAAAgc,EAAA,EAEAU,GAAArmB,OAAAwiB,UAAAX,EAAAmY,EAAAjI,WAAA9P,EAAA6Z,EAAAC,QAGA,IAAA7L,GACArO,EAAA+yB,WAAAlrC,EAAAC,EAAA2sD,EAAA3wC,GAGA9D,EAAAqS,SAAAxqB,EAAAC,EAAA2sD,EAAA3wC,GAGA9D,EAAA8B,WAyDAu0C,CAAAxuD,EAAAC,EAAAqwB,GACAm9B,EAAAp+D,GAAAqK,KAAAsG,EACAytD,EAAAp+D,GAAAsK,IAAAsG,EAxDA,SAAAD,EAAAC,EAAAqwB,EAAAg+B,GACA,IAAAG,EAAAxyC,EAAA,EACAyyC,EAAA9B,EAAA6B,EAAAzuD,EACA2uD,EAAA1uD,EAAAwuD,EACAt2C,EAAAwyB,SAAAra,EAAAP,KAAA2+B,EAAAC,GAEAr+B,EAAAtT,SAEA7E,EAAAiB,YACAjB,EAAAqO,UAAA,EACArO,EAAAO,OAAAg2C,EAAAC,GACAx2C,EAAAkB,OAAAq1C,EAAAJ,EAAAK,GACAx2C,EAAAqB,UA8CAmxB,CAAA3qC,EAAAC,EAAAqwB,EAAAg+B,GAEApiC,EACAmiC,EAAAruD,GAAAvG,EAAAizD,EAAAhkC,QAEA2lC,EAAApuD,GAAAguD,MASAW,iBAAA,SAAA5uD,EAAAC,GACA,IACA5Q,EAAAw/D,EAAAC,EADAj6C,EAAAliB,KAGA,GAAAqN,GAAA6U,EAAAnb,MAAAsG,GAAA6U,EAAA2D,OAAAvY,GAAA4U,EAAAlb,KAAAsG,GAAA4U,EAAA4D,OAIA,IAFAq2C,EAAAj6C,EAAAo4C,eAEA59D,EAAA,EAAmBA,EAAAy/D,EAAAv/D,SAAeF,EAGlC,GAFAw/D,EAAAC,EAAAz/D,GAEA2Q,GAAA6uD,EAAAn1D,MAAAsG,GAAA6uD,EAAAn1D,KAAAm1D,EAAAp1D,OAAAwG,GAAA4uD,EAAAl1D,KAAAsG,GAAA4uD,EAAAl1D,IAAAk1D,EAAAx2C,OAEA,OAAAxD,EAAA04C,YAAAl+D,GAKA,aAQAm8C,YAAA,SAAA92C,GACA,IAGAq6D,EAHAl6C,EAAAliB,KACAo+B,EAAAlc,EAAAZ,QACA7iB,EAAA,YAAAsD,EAAAtD,KAAA,QAAAsD,EAAAtD,KAGA,iBAAAA,GACA,IAAA2/B,EAAAmb,UAAAnb,EAAA+7B,QACA,WAEO,cAAA17D,EAKP,OAJA,IAAA2/B,EAAAx8B,QACA,OAOAw6D,EAAAl6C,EAAA+5C,iBAAAl6D,EAAAsL,EAAAtL,EAAAuL,GAEA,UAAA7O,EACA29D,GAAAh+B,EAAAx8B,SAEAw8B,EAAAx8B,QAAA7B,KAAAmiB,EAAAngB,EAAAiiC,OAAAo4B,IAGAh+B,EAAA+7B,SAAAiC,IAAAl6C,EAAAq4C,eACAr4C,EAAAq4C,cACAn8B,EAAA+7B,QAAAp6D,KAAAmiB,EAAAngB,EAAAiiC,OAAA9hB,EAAAq4C,cAGAr4C,EAAAq4C,aAAA6B,GAGAh+B,EAAAmb,SAAA6iB,GAEAh+B,EAAAmb,QAAAx5C,KAAAmiB,EAAAngB,EAAAiiC,OAAAo4B,OAMA,SAAAC,GAAA92C,EAAA+2C,GACA,IAAAh/B,EAAA,IAAA+8B,GAAA,CACA70C,IAAAD,EAAAC,IACAlE,QAAAg7C,EACA/2C,UAEA4gB,GAAAK,UAAAjhB,EAAA+X,EAAAg/B,GACAn2B,GAAAC,OAAA7gB,EAAA+X,GACA/X,EAAA+X,SAGA,IAAAi/B,GAAA,CACA34D,GAAA,SASA44D,SAAAnC,GACAoC,WAAA,SAAAl3C,GACA,IAAA+2C,EAAA/2C,EAAAjE,QAAAgc,OAEAg/B,GACAD,GAAA92C,EAAA+2C,IAGA7a,aAAA,SAAAl8B,GACA,IAAA+2C,EAAA/2C,EAAAjE,QAAAgc,OACAA,EAAA/X,EAAA+X,OAEAg/B,GACAtyC,GAAArI,QAAA26C,EAAAxzC,GAAAO,OAAAiU,QAEAA,GACA6I,GAAAK,UAAAjhB,EAAA+X,EAAAg/B,GACAh/B,EAAAhc,QAAAg7C,GAEAD,GAAA92C,EAAA+2C,IAEOh/B,IACP6I,GAAAG,UAAA/gB,EAAA+X,UACA/X,EAAA+X,SAGAo/B,WAAA,SAAAn3C,EAAAxjB,GACA,IAAAu7B,EAAA/X,EAAA+X,OAEAA,GACAA,EAAAub,YAAA92C,KAIA46D,GAAA3yC,GAAAvK,KAEAqJ,GAAAT,KAAA,UACAtjB,MAAA,CACAg9B,SAAA,EACApY,UAAA,OACA0c,WAAA,EACAtQ,QAAA,GACA5vB,SAAA,MACAi3B,KAAA,GACA/e,OAAA,OASA,IAAAu+C,GAAArxC,GAAAzJ,OAAA,CACAsI,WAAA,SAAAijB,GAEArjB,GAAAlI,OADA9hB,KACAqtC,GADArtC,KAGAs6D,eAAA,IAGA7Y,aAAAkb,GACArtC,OAAA,SAAAoyB,EAAAC,EAAAC,GACA,IAAA1/B,EAAAliB,KAqBA,OAnBAkiB,EAAAu/B,eAEAv/B,EAAAw/B,WACAx/B,EAAAy/B,YACAz/B,EAAA0/B,UAEA1/B,EAAA8/B,sBACA9/B,EAAA+/B,gBACA//B,EAAAggC,qBAEAhgC,EAAAu4C,oBACAv4C,EAAAw4C,cACAx4C,EAAAy4C,mBAEAz4C,EAAA6gC,YACA7gC,EAAA8gC,MACA9gC,EAAA+gC,WAEA/gC,EAAAghC,cACAhhC,EAAAqc,SAEA2kB,YAAAyZ,GAEA3a,oBAAA2a,GACA1a,cAAA,WACA,IAAA//B,EAAAliB,KAEAkiB,EAAAqX,gBAEArX,EAAApb,MAAAob,EAAAw/B,SACAx/B,EAAAnb,KAAA,EACAmb,EAAA2D,MAAA3D,EAAApb,QAEAob,EAAAwD,OAAAxD,EAAAy/B,UAEAz/B,EAAAlb,IAAA,EACAkb,EAAA4D,OAAA5D,EAAAwD,QAIAxD,EAAAk/B,YAAA,EACAl/B,EAAAm/B,WAAA,EACAn/B,EAAAo/B,aAAA,EACAp/B,EAAAq/B,cAAA,EAEAr/B,EAAAqc,QAAA,CACAz3B,MAAA,EACA4e,OAAA,IAGAw8B,mBAAAya,GAEAlC,kBAAAkC,GACAjC,YAAAiC,GACAhC,iBAAAgC,GAEA5Z,UAAA4Z,GACA3Z,IAAA,WACA,IAAA9gC,EAAAliB,KACAo+B,EAAAlc,EAAAZ,QACAygB,EAAA3D,EAAA2D,QACAxD,EAAArc,EAAAqc,QACAs+B,EAAA7yC,GAAApK,QAAAwe,EAAAhB,MAAAgB,EAAAhB,KAAAxgC,OAAA,EAEAkgE,EAAA9yC,GAAA1I,QAAA6H,WAAAiV,GAEAswB,EAAA3sB,EAAA86B,EAAAC,EAAApzC,WAAA,EAAA0U,EAAArI,QAAA,EAEA7T,EAAAqX,gBACAgF,EAAAz3B,MAAAob,EAAAw/B,SAEAnjB,EAAA7Y,OAAAgpC,IAEAnwB,EAAAz3B,MAAA4nD,EACAnwB,EAAA7Y,OAAAxD,EAAAy/B,WAGAz/B,EAAApb,MAAAy3B,EAAAz3B,MACAob,EAAAwD,OAAA6Y,EAAA7Y,QAEAu9B,SAAA0Z,GAEApjC,aAAA,WACA,IAAA4U,EAAAnuC,KAAAshB,QAAAnb,SACA,cAAAgoC,GAAA,WAAAA,GAGA1d,KAAA,WACA,IAAAvO,EAAAliB,KACAwlB,EAAAtD,EAAAsD,IACA4Y,EAAAlc,EAAAZ,QAEA,GAAA8c,EAAA2D,QAAA,CACA,IASA2f,EAAAqb,EAAAC,EATAF,EAAA9yC,GAAA1I,QAAA6H,WAAAiV,GAEA1U,EAAAozC,EAAApzC,WACA4O,EAAA5O,EAAA,EAAA0U,EAAArI,QACA3P,EAAA,EACApf,EAAAkb,EAAAlb,IACAD,EAAAmb,EAAAnb,KACA+e,EAAA5D,EAAA4D,OACAD,EAAA3D,EAAA2D,MAEAL,EAAAoO,UAAA5J,GAAA5J,eAAAge,EAAAuoB,UAAA79B,GAAAO,OAAAb,kBAEAhD,EAAA+D,KAAAuzC,EAAAp+D,OAEAwjB,EAAAqX,gBACAwjC,EAAAh2D,GAAA8e,EAAA9e,GAAA,EAEAi2D,EAAAh2D,EAAAsxB,EACAopB,EAAA77B,EAAA9e,IAEAg2D,EAAA,SAAA3+B,EAAAj4B,SAAAY,EAAAuxB,EAAAzS,EAAAyS,EACA0kC,EAAAh2D,GAAA8e,EAAA9e,GAAA,EACA06C,EAAA57B,EAAA9e,EACAof,EAAAtiB,KAAAgL,IAAA,SAAAsvB,EAAAj4B,UAAA,QAGAqf,EAAA2B,OACA3B,EAAA+iC,UAAAwU,EAAAC,GACAx3C,EAAAvH,OAAAmI,GACAZ,EAAAsyB,UAAA,SACAtyB,EAAAuyB,aAAA,SACA,IAAA3a,EAAAgB,EAAAhB,KAEA,GAAApT,GAAApK,QAAAwd,GAGA,IAFA,IAAA9vB,EAAA,EAEA5Q,EAAA,EAAyBA,EAAA0gC,EAAAxgC,SAAiBF,EAC1C8oB,EAAAwyB,SAAA5a,EAAA1gC,GAAA,EAAA4Q,EAAAo0C,GACAp0C,GAAAoc,OAGAlE,EAAAwyB,SAAA5a,EAAA,IAAAskB,GAGAl8B,EAAA8B,cAKA,SAAA21C,GAAA13C,EAAA23C,GACA,IAAAn4D,EAAA,IAAA63D,GAAA,CACAp3C,IAAAD,EAAAC,IACAlE,QAAA47C,EACA33C,UAEA4gB,GAAAK,UAAAjhB,EAAAxgB,EAAAm4D,GACA/2B,GAAAC,OAAA7gB,EAAAxgB,GACAwgB,EAAA43C,WAAAp4D,EAGA,IAqCAypC,GAAA,GACAspB,GAAAmB,GACA37B,GAAAi/B,GACAx3D,GAxCA,CACAnB,GAAA,QASA44D,SAAAI,GACAH,WAAA,SAAAl3C,GACA,IAAA23C,EAAA33C,EAAAjE,QAAAvc,MAEAm4D,GACAD,GAAA13C,EAAA23C,IAGAzb,aAAA,SAAAl8B,GACA,IAAA23C,EAAA33C,EAAAjE,QAAAvc,MACAo4D,EAAA53C,EAAA43C,WAEAD,GACAlzC,GAAArI,QAAAu7C,EAAAp0C,GAAAO,OAAAtkB,OAEAo4D,GACAh3B,GAAAK,UAAAjhB,EAAA43C,EAAAD,GACAC,EAAA77C,QAAA47C,GAEAD,GAAA13C,EAAA23C,IAEOC,IACPh3B,GAAAG,UAAA/gB,EAAA43C,UACA53C,EAAA43C,cAwCA,QAAAnwD,MAhCAwhC,GAAAspB,UACAtpB,GAAAlR,UACAkR,GAAAzpC,SAKA84C,GAAAr+B,QAAAwK,GA76JA,WAoaA,SAAAozC,EAAAC,EAAA7+D,EAAA8+D,GACA,IAAAC,EAaA,MAXA,kBAAAF,GACAE,EAAApiD,SAAAkiD,EAAA,KAEA,IAAAA,EAAAz8D,QAAA,OAEA28D,IAAA,IAAA/+D,EAAA8F,WAAAg5D,KAGAC,EAAAF,EAGAE,EAQA,SAAAC,EAAAthE,GACA,YAAAoG,IAAApG,GAAA,OAAAA,GAAA,SAAAA,EAWA,SAAAuhE,EAAAC,EAAAC,EAAAC,GACA,IAAA9yC,EAAA1mB,SAAAy5D,YAEAv5D,EAAA0lB,GAAA8zC,eAAAJ,GAEAK,EAAAjzC,EAAAkzC,iBAAAN,GAAAC,GACAM,EAAAnzC,EAAAkzC,iBAAA15D,GAAAq5D,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAAj+C,OAAAskB,kBAEA,OAAAy5B,GAAAC,EACAr6D,KAAA8I,IAAAsxD,EAAAd,EAAAW,EAAAL,EAAAE,GAAAQ,EAAAD,EAAAf,EAAAa,EAAA35D,EAAAs5D,GAAAQ,GAGA,OAndAp0C,GAAA2b,MAAA,SAAA04B,EAAAC,GACA,GAAAt0C,GAAApK,QAAAy+C,IAAAzlD,MAAAvY,UAAAnD,OACA,OAAAmhE,EAAAnhE,OAAAohE,GAGA,IAAAC,EAAA,GAMA,OALAv0C,GAAAtJ,KAAA29C,EAAA,SAAA/4D,GACAg5D,EAAAh5D,IACAi5D,EAAA1xC,KAAAvnB,KAGAi5D,GAGAv0C,GAAAgD,UAAApU,MAAAvY,UAAA2sB,UAAA,SAAAvK,EAAAlC,EAAA+H,GACA,OAAA7F,EAAAuK,UAAAzM,EAAA+H,IACK,SAAA7F,EAAAlC,EAAA+H,GACLA,OAAAhmB,IAAAgmB,EAAA7F,EAAA6F,EAEA,QAAA5rB,EAAA,EAAAukB,EAAAwB,EAAA7lB,OAA0CF,EAAAukB,IAAUvkB,EACpD,GAAA6jB,EAAAxgB,KAAAuoB,EAAA7F,EAAA/lB,KAAA+lB,GACA,OAAA/lB,EAIA,UAGAstB,GAAAoe,cAAA,SAAAo2B,EAAAF,EAAAG,GAEAz0C,GAAArK,cAAA8+C,KACAA,GAAA,GAGA,QAAA/hE,EAAA+hE,EAAA,EAAkC/hE,EAAA8hE,EAAA5hE,OAA0BF,IAAA,CAC5D,IAAAgiE,EAAAF,EAAA9hE,GAEA,GAAA4hE,EAAAI,GACA,OAAAA,IAKA10C,GAAA20C,kBAAA,SAAAH,EAAAF,EAAAG,GAEAz0C,GAAArK,cAAA8+C,KACAA,EAAAD,EAAA5hE,QAGA,QAAAF,EAAA+hE,EAAA,EAAkC/hE,GAAA,EAAQA,IAAA,CAC1C,IAAAgiE,EAAAF,EAAA9hE,GAEA,GAAA4hE,EAAAI,GACA,OAAAA,IAMA10C,GAAAsB,SAAA,SAAAvtB,GACA,OAAAud,MAAAF,WAAArd,KAAAgiB,SAAAhiB,IAGAisB,GAAA4hC,aAAA,SAAAv+C,EAAAC,EAAAsxD,GACA,OAAA96D,KAAA0xB,IAAAnoB,EAAAC,GAAAsxD,GAGA50C,GAAA2hC,YAAA,SAAAt+C,EAAAuxD,GACA,IAAAC,EAAA/6D,KAAAoV,MAAA7L,GACA,OAAAwxD,EAAAD,EAAAvxD,GAAAwxD,EAAAD,EAAAvxD,GAGA2c,GAAAnd,IAAA,SAAA4V,GACA,OAAAA,EAAAwzB,OAAA,SAAAppC,EAAA3Q,GACA,OAAAof,MAAApf,GAIA2Q,EAHA/I,KAAA+I,MAAA3Q,IAIOikB,OAAA4uC,oBAGP/kC,GAAApd,IAAA,SAAA6V,GACA,OAAAA,EAAAwzB,OAAA,SAAArpC,EAAA1Q,GACA,OAAAof,MAAApf,GAIA0Q,EAHA9I,KAAA8I,MAAA1Q,IAIOikB,OAAAskB,oBAGPza,GAAAggC,KAAAlmD,KAAAkmD,KAAA,SAAA38C,GACA,OAAAvJ,KAAAkmD,KAAA38C,IACK,SAAAA,GAGL,YAFAA,OAEAiO,MAAAjO,GACAA,EAGAA,EAAA,QAEA2c,GAAAm1B,MAAAr7C,KAAAq7C,MAAA,SAAA9xC,GACA,OAAAvJ,KAAAq7C,MAAA9xC,IACK,SAAAA,GACL,IAAAyxD,EAAAh7D,KAAAi7D,IAAA1xD,GAAAvJ,KAAAk7D,OAIAC,EAAAn7D,KAAAoV,MAAA4lD,GACAI,EAAA7xD,IAAAvJ,KAAAsJ,IAAA,GAAA6xD,GACA,OAAAC,EAAAD,EAAAH,GAGA90C,GAAA45B,UAAA,SAAA1lC,GACA,OAAAA,GAAApa,KAAAgL,GAAA,MAGAkb,GAAAulC,UAAA,SAAA4P,GACA,OAAAA,GAAA,IAAAr7D,KAAAgL,KAWAkb,GAAA0hC,eAAA,SAAAr+C,GACA,GAAA2c,GAAAjK,SAAA1S,GAAA,CAOA,IAHA,IAAAtL,EAAA,EACAiM,EAAA,EAEAlK,KAAAoV,MAAA7L,EAAAtL,OAAAsL,GACAtL,GAAA,GACAiM,IAGA,OAAAA,IAIAgc,GAAAyI,kBAAA,SAAA2sC,EAAAC,GACA,IAAAC,EAAAD,EAAAhyD,EAAA+xD,EAAA/xD,EACAkyD,EAAAF,EAAA/xD,EAAA8xD,EAAA9xD,EACAkyD,EAAA17D,KAAAiL,KAAAuwD,IAAAC,KACA7sC,EAAA5uB,KAAA+K,MAAA0wD,EAAAD,GAMA,OAJA5sC,GAAA,GAAA5uB,KAAAgL,KACA4jB,GAAA,EAAA5uB,KAAAgL,IAGA,CACA4jB,QACAC,SAAA6sC,IAIAx1C,GAAA0oB,sBAAA,SAAA5N,EAAAC,GACA,OAAAjhC,KAAAiL,KAAAjL,KAAAsJ,IAAA23B,EAAA13B,EAAAy3B,EAAAz3B,EAAA,GAAAvJ,KAAAsJ,IAAA23B,EAAAz3B,EAAAw3B,EAAAx3B,EAAA,KAUA0c,GAAAy1C,WAAA,SAAAC,GACA,OAAAA,EAAA,YAYA11C,GAAAo9B,YAAA,SAAA7hC,EAAA4/B,EAAAr+C,GACA,IAAAkzC,EAAAz0B,EAAAo6C,wBACA94D,EAAAC,EAAA,EACA,OAAAhD,KAAAoV,OAAAisC,EAAAt+C,GAAAmzC,KAAAnzC,GAGAmjB,GAAA0X,YAAA,SAAAk+B,EAAAC,EAAAC,EAAA5xD,GAIA,IAAAqZ,EAAAq4C,EAAAxqC,KAAAyqC,EAAAD,EACAprC,EAAAqrC,EACAtkC,EAAAukC,EAAA1qC,KAAAyqC,EAAAC,EACAC,EAAAj8D,KAAAiL,KAAAjL,KAAAsJ,IAAAonB,EAAAnnB,EAAAka,EAAAla,EAAA,GAAAvJ,KAAAsJ,IAAAonB,EAAAlnB,EAAAia,EAAAja,EAAA,IACA0yD,EAAAl8D,KAAAiL,KAAAjL,KAAAsJ,IAAAmuB,EAAAluB,EAAAmnB,EAAAnnB,EAAA,GAAAvJ,KAAAsJ,IAAAmuB,EAAAjuB,EAAAknB,EAAAlnB,EAAA,IACA2yD,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAEAC,EAAA3kD,MAAA2kD,GAAA,EAAAA,EACAC,EAAA5kD,MAAA4kD,GAAA,EAAAA,EACA,IAAAC,EAAAjyD,EAAA+xD,EAEAG,EAAAlyD,EAAAgyD,EACA,OACA34C,SAAA,CACAla,EAAAmnB,EAAAnnB,EAAA8yD,GAAA5kC,EAAAluB,EAAAka,EAAAla,GACAC,EAAAknB,EAAAlnB,EAAA6yD,GAAA5kC,EAAAjuB,EAAAia,EAAAja,IAEAiuB,KAAA,CACAluB,EAAAmnB,EAAAnnB,EAAA+yD,GAAA7kC,EAAAluB,EAAAka,EAAAla,GACAC,EAAAknB,EAAAlnB,EAAA8yD,GAAA7kC,EAAAjuB,EAAAia,EAAAja,MAKA0c,GAAAq2C,QAAAlgD,OAAAkgD,SAAA,MAEAr2C,GAAAyX,oBAAA,SAAA9M,GAKA,IASAj4B,EAAA4jE,EAAAC,EAAAC,EA8BAC,EAAAC,EAAAC,EAAAC,EA6BA57B,EApEA67B,GAAAlsC,GAAA,IAAAtvB,IAAA,SAAA2hB,GACA,OACA4D,MAAA5D,EAAAwD,OACAs2C,OAAA,EACAC,GAAA,KAIAC,EAAAH,EAAAjkE,OAGA,IAAAF,EAAA,EAAiBA,EAAAskE,IAAetkE,EAGhC,KAFA6jE,EAAAM,EAAAnkE,IAEAkuB,MAAAwK,KAAA,CAOA,GAHAkrC,EAAA5jE,EAAA,EAAAmkE,EAAAnkE,EAAA,SACA8jE,EAAA9jE,EAAAskE,EAAA,EAAAH,EAAAnkE,EAAA,WAEA8jE,EAAA51C,MAAAwK,KAAA,CACA,IAAA6rC,EAAAT,EAAA51C,MAAAvd,EAAAkzD,EAAA31C,MAAAvd,EAEAkzD,EAAAO,OAAA,IAAAG,GAAAT,EAAA51C,MAAAtd,EAAAizD,EAAA31C,MAAAtd,GAAA2zD,EAAA,GAGAX,KAAA11C,MAAAwK,KACAmrC,EAAAQ,GAAAR,EAAAO,QACSN,KAAA51C,MAAAwK,KACTmrC,EAAAQ,GAAAT,EAAAQ,OACS9gE,KAAAgqD,KAAAsW,EAAAQ,UAAA9gE,KAAAgqD,KAAAuW,EAAAO,QACTP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAOA,IAAApkE,EAAA,EAAiBA,EAAAskE,EAAA,IAAmBtkE,EACpC6jE,EAAAM,EAAAnkE,GACA8jE,EAAAK,EAAAnkE,EAAA,GAEA6jE,EAAA31C,MAAAwK,MAAAorC,EAAA51C,MAAAwK,OAIApL,GAAA4hC,aAAA2U,EAAAO,OAAA,EAAA9gE,KAAAqgE,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,QACAF,EAAA98D,KAAAsJ,IAAAqzD,EAAA,GAAA38D,KAAAsJ,IAAAszD,EAAA,KAEA,IAIAC,EAAA,EAAA78D,KAAAiL,KAAA6xD,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAMA,IAAApkE,EAAA,EAAiBA,EAAAskE,IAAetkE,GAChC6jE,EAAAM,EAAAnkE,IAEAkuB,MAAAwK,OAIAkrC,EAAA5jE,EAAA,EAAAmkE,EAAAnkE,EAAA,QACA8jE,EAAA9jE,EAAAskE,EAAA,EAAAH,EAAAnkE,EAAA,QAEA4jE,MAAA11C,MAAAwK,OACA4P,GAAAu7B,EAAA31C,MAAAvd,EAAAizD,EAAA11C,MAAAvd,GAAA,EACAkzD,EAAA31C,MAAA9C,sBAAAy4C,EAAA31C,MAAAvd,EAAA23B,EACAu7B,EAAA31C,MAAA5C,sBAAAu4C,EAAA31C,MAAAtd,EAAA03B,EAAAu7B,EAAAQ,IAGAP,MAAA51C,MAAAwK,OACA4P,GAAAw7B,EAAA51C,MAAAvd,EAAAkzD,EAAA31C,MAAAvd,GAAA,EACAkzD,EAAA31C,MAAA7C,kBAAAw4C,EAAA31C,MAAAvd,EAAA23B,EACAu7B,EAAA31C,MAAA3C,kBAAAs4C,EAAA31C,MAAAtd,EAAA03B,EAAAu7B,EAAAQ,MAKA/2C,GAAA2X,SAAA,SAAA08B,EAAAj/C,EAAAk6C,GACA,OAAAA,EACAl6C,GAAAi/C,EAAAzhE,OAAA,EAAAyhE,EAAA,GAAAA,EAAAj/C,EAAA,GAGAA,GAAAi/C,EAAAzhE,OAAA,EAAAyhE,IAAAzhE,OAAA,GAAAyhE,EAAAj/C,EAAA,IAGA4K,GAAAmL,aAAA,SAAAkpC,EAAAj/C,EAAAk6C,GACA,OAAAA,EACAl6C,GAAA,EAAAi/C,IAAAzhE,OAAA,GAAAyhE,EAAAj/C,EAAA,GAGAA,GAAA,EAAAi/C,EAAA,GAAAA,EAAAj/C,EAAA,IAIA4K,GAAAyhC,QAAA,SAAAnwB,EAAApiB,GACA,IAAA4lD,EAAAh7D,KAAAgK,MAAAkc,GAAAm1B,MAAA7jB,IACA4lC,EAAA5lC,EAAAx3B,KAAAsJ,IAAA,GAAA0xD,GAuBA,OApBA5lD,EACAgoD,EAAA,IACA,EACSA,EAAA,EACT,EACSA,EAAA,EACT,EAEA,GAEOA,GAAA,EACP,EACOA,GAAA,EACP,EACOA,GAAA,EACP,EAEA,IAGAp9D,KAAAsJ,IAAA,GAAA0xD,IAIA90C,GAAAkD,iBACA,qBAAA5N,OACA,SAAAiB,GACAA,KAIAjB,OAAAwN,uBAAAxN,OAAA6hD,6BAAA7hD,OAAA8hD,0BAAA9hD,OAAA+hD,wBAAA/hD,OAAAgiD,yBAAA,SAAA/gD,GACA,OAAAjB,OAAAiiD,WAAAhhD,EAAA,SAKAyJ,GAAA+Z,oBAAA,SAAAy9B,EAAAj8C,GACA,IAAA2M,EAAA0D,EACA7zB,EAAAy/D,EAAAC,eAAAD,EACA79D,EAAA69D,EAAA/kE,QAAA+kE,EAAAE,WACAC,EAAAh+D,EAAAyC,wBACAw7D,EAAA7/D,EAAA6/D,QAEAA,KAAAhlE,OAAA,GACAs1B,EAAA0vC,EAAA,GAAAC,QACAjsC,EAAAgsC,EAAA,GAAAE,UAEA5vC,EAAAnwB,EAAA8/D,QACAjsC,EAAA7zB,EAAA+/D,SAMA,IAAA1gB,EAAAhmC,WAAA4O,GAAAigB,SAAAtmC,EAAA,iBACA09C,EAAAjmC,WAAA4O,GAAAigB,SAAAtmC,EAAA,gBACA29C,EAAAlmC,WAAA4O,GAAAigB,SAAAtmC,EAAA,kBACA49C,EAAAnmC,WAAA4O,GAAAigB,SAAAtmC,EAAA,mBACAmD,EAAA66D,EAAA97C,MAAA87C,EAAA56D,KAAAq6C,EAAAE,EACA57B,EAAAi8C,EAAA77C,OAAA67C,EAAA36D,IAAAq6C,EAAAE,EAKA,OAFArvB,EAAApuB,KAAAoV,OAAAgZ,EAAAyvC,EAAA56D,KAAAq6C,GAAAt6C,EAAAnD,EAAAmD,MAAAye,EAAAo6C,yBACA/pC,EAAA9xB,KAAAoV,OAAA0c,EAAA+rC,EAAA36D,IAAAq6C,GAAA37B,EAAA/hB,EAAA+hB,OAAAH,EAAAo6C,yBACA,CACAtyD,EAAA6kB,EACA5kB,EAAAsoB,IA0DA5L,GAAA+3C,mBAAA,SAAArE,GACA,OAAAD,EAAAC,EAAA,4BAIA1zC,GAAAg4C,oBAAA,SAAAtE,GACA,OAAAD,EAAAC,EAAA,8BAOA1zC,GAAAi4C,kBAAA,SAAAv2B,EAAA3V,EAAAmsC,GAEA,OADAnsC,EAAA/L,GAAAigB,SAAAyB,EAAA3V,IACAn1B,QAAA,QAAAshE,EAAA/mD,SAAA4a,EAAA,QAAA5a,SAAA4a,EAAA,KAOA/L,GAAA8zC,eAAA,SAAAJ,GACA,IAAAyE,EAAAzE,EAAAp5D,WAMA,OAJA69D,GAAA,wBAAAA,EAAAn+D,aACAm+D,IAAAC,MAGAD,GAGAn4C,GAAAywB,gBAAA,SAAAijB,GACA,IAAAhyB,EAAA1hB,GAAA8zC,eAAAJ,GAEA,IAAAhyB,EACA,OAAAgyB,EAAA9xB,YAGA,IAAAA,EAAAF,EAAAE,YAEAwV,EAAAp3B,GAAAi4C,kBAAAv2B,EAAA,eAAAE,GAEA0V,EAAAt3B,GAAAi4C,kBAAAv2B,EAAA,gBAAAE,GAEA7+B,EAAA6+B,EAAAwV,EAAAE,EACA+gB,EAAAr4C,GAAA+3C,mBAAArE,GACA,OAAApiD,MAAA+mD,GAAAt1D,EAAAjJ,KAAA8I,IAAAG,EAAAs1D,IAGAr4C,GAAA2wB,iBAAA,SAAA+iB,GACA,IAAAhyB,EAAA1hB,GAAA8zC,eAAAJ,GAEA,IAAAhyB,EACA,OAAAgyB,EAAA4E,aAGA,IAAAA,EAAA52B,EAAA42B,aAEAjhB,EAAAr3B,GAAAi4C,kBAAAv2B,EAAA,cAAA42B,GAEA/gB,EAAAv3B,GAAAi4C,kBAAAv2B,EAAA,iBAAA42B,GAEAr4D,EAAAq4D,EAAAjhB,EAAAE,EACAghB,EAAAv4C,GAAAg4C,oBAAAtE,GACA,OAAApiD,MAAAinD,GAAAt4D,EAAAnG,KAAA8I,IAAA3C,EAAAs4D,IAGAv4C,GAAAigB,SAAA,SAAAY,EAAAb,GACA,OAAAa,EAAA23B,aAAA33B,EAAA23B,aAAAx4B,GAAA5lC,SAAAy5D,YAAAG,iBAAAnzB,EAAA,MAAA43B,iBAAAz4B,IAGAhgB,GAAA+vB,YAAA,SAAAx0B,EAAAm9C,GACA,IAAAC,EAAAp9C,EAAAo6C,wBAAA+C,GAAA,qBAAApjD,eAAA06B,kBAAA,EAEA,OAAA2oB,EAAA,CAIA,IAAAh/D,EAAA4hB,EAAA5hB,OACA+hB,EAAAH,EAAAG,OACA5e,EAAAye,EAAAze,MACAnD,EAAA+hB,SAAAi9C,EACAh/D,EAAAmD,QAAA67D,EACAp9C,EAAAC,IAAAnK,MAAAsnD,KAIAh/D,EAAAiC,MAAA8f,QAAA/hB,EAAAiC,MAAAkB,QACAnD,EAAAiC,MAAA8f,SAAA,KACA/hB,EAAAiC,MAAAkB,QAAA,QAKAkjB,GAAAusB,WAAA,SAAAqsB,EAAAj5C,EAAAF,GACA,OAAAE,EAAA,IAAAi5C,EAAA,MAAAn5C,GAGAO,GAAAg2B,YAAA,SAAAx6B,EAAA+D,EAAAs5C,EAAAvzB,GAEA,IAAA1gB,GADA0gB,KAAA,IACA1gB,KAAA0gB,EAAA1gB,MAAA,GACAk0C,EAAAxzB,EAAAyzB,eAAAzzB,EAAAyzB,gBAAA,GAEAzzB,EAAA/lB,WACAqF,EAAA0gB,EAAA1gB,KAAA,GACAk0C,EAAAxzB,EAAAyzB,eAAA,GACAzzB,EAAA/lB,QAGA/D,EAAA+D,OACA,IAAAy5C,EAAA,EACAh5C,GAAAtJ,KAAAmiD,EAAA,SAAAI,QAEA3gE,IAAA2gE,GAAA,OAAAA,IAAA,IAAAj5C,GAAApK,QAAAqjD,GACAD,EAAAh5C,GAAAssB,YAAA9wB,EAAAoJ,EAAAk0C,EAAAE,EAAAC,GACSj5C,GAAApK,QAAAqjD,IAGTj5C,GAAAtJ,KAAAuiD,EAAA,SAAAC,QAEA5gE,IAAA4gE,GAAA,OAAAA,GAAAl5C,GAAApK,QAAAsjD,KACAF,EAAAh5C,GAAAssB,YAAA9wB,EAAAoJ,EAAAk0C,EAAAE,EAAAE,QAKA,IAAAC,EAAAL,EAAAlmE,OAAA,EAEA,GAAAumE,EAAAN,EAAAjmE,OAAA,CACA,QAAAF,EAAA,EAAuBA,EAAAymE,EAAWzmE,WAClCkyB,EAAAk0C,EAAApmE,IAGAomE,EAAA71C,OAAA,EAAAk2C,GAGA,OAAAH,GAGAh5C,GAAAssB,YAAA,SAAA9wB,EAAAoJ,EAAAk0C,EAAAE,EAAAtkE,GACA,IAAAi9D,EAAA/sC,EAAAlwB,GAWA,OATAi9D,IACAA,EAAA/sC,EAAAlwB,GAAA8mB,EAAA8wB,YAAA53C,GAAAoI,MACAg8D,EAAAj2C,KAAAnuB,IAGAi9D,EAAAqH,IACAA,EAAArH,GAGAqH,GAGAh5C,GAAAu6B,mBAAA,SAAAse,GACA,IAAAO,EAAA,EAQA,OAPAp5C,GAAAtJ,KAAAmiD,EAAA,SAAAI,GACAj5C,GAAApK,QAAAqjD,IACAA,EAAArmE,OAAAwmE,IACAA,EAAAH,EAAArmE,UAIAwmE,GAGAp5C,GAAAvoB,MAAA8d,EAGK,SAAArjB,GAML,OAJAA,aAAAmnE,iBACAnnE,EAAA4sB,GAAAO,OAAAd,cAGAhJ,EAAArjB,IATA,SAAAA,GAEA,OADA0iB,QAAAC,MAAA,uBACA3iB,GAUA8tB,GAAA8G,cAAA,SAAAwyC,GAEA,OAAAA,aAAAC,eAAAD,aAAAD,eAAAC,EAAAt5C,GAAAvoB,MAAA6hE,GAAA5lD,SAAA,IAAAD,OAAA,IAAAjD,aAiyIAgpD,GACA3lB,GAAA4lB,UAAA5kB,GACAhB,GAAA6lB,UAAA73C,GACAgyB,GAAA8lB,iBAAAv3C,GACAyxB,GAAAra,eACAqa,GAAAjwB,kBAAAkE,GACA+rB,GAAAz1B,SAAAU,GACA+0B,GAAA3zB,QAAAqB,GACAsyB,GAAArtB,YACAqtB,GAAA+lB,YAAAx+B,GACAyY,GAAAgmB,QAAA19B,GACA0X,GAAAhR,YACAgR,GAAArP,QAAAC,GACAoP,GAAAimB,MAAA3iB,GACAtD,GAAAkmB,aAAAt0B,GACAoO,GAAAmmB,MAAAjlB,GACAlB,GAAAomB,QAAAjrB,GAEA6E,GAAAr+B,QAAAkB,KAAA8N,GAAA,SAAAnT,EAAA5c,GACAo/C,GAAAkmB,aAAAp0B,kBAAAlxC,EAAA4c,IAAAuuC,aAIApb,GACAA,GAAAtlC,eAAA8D,KACA6wC,GAAArP,QAAAI,SAAAJ,GAAAxhC,KAIA6wC,GAAAhR,SAAAziB,aACA,IAAA85C,GAAArmB,GA8FA,MA5FA,qBAAAv+B,SACAA,OAAAo6B,MAAAmE,IAYAA,GAAAnE,MAAAmE,GASAA,GAAAwc,OAAA7rB,GAAAlR,OAAAk/B,SASA3e,GAAA+e,MAAApuB,GAAAzpC,MAAAy3D,SASA3e,GAAAsmB,cAAAtmB,GAAArP,QAUAqP,GAAAumB,WAAAvmB,GAAA3zB,QAAApI,OAAA,IASA+7B,GAAAwmB,cAAAxmB,GAAAr+B,QAAA7b,OASAk6C,GAAAymB,cAAAzmB,GAAAgmB,QASAhmB,GAAA0mB,gBAAA1a,GAQAhM,GAAAr+B,QAAAkB,KAAA,0EAAA8jD,GACA3mB,GAAA2mB,GAAA,SAAAh/C,EAAAi/C,GACA,WAAA5mB,GAAAr4B,EAAAq4B,GAAAr+B,QAAAiC,MAAAgjD,GAAA,GAA6E,CAC7EhmE,KAAA+lE,EAAAxlD,OAAA,GAAA0lD,cAAAF,EAAA3rD,MAAA,SAIAqrD,GAlxb8Dh9D,CAAA,WAC9D,IACA,OAAa5J,EAAQ,KAChB,MAAAyE,KAHyD,0BCD7D,SAAAQ,GACD,aAgBA,SAAAoiE,EAAAnkD,EAAAxX,GACA,OAEKwX,EAFLxX,EAAA,CACAzG,QAAA,IACKyG,EAAAzG,SAAAyG,EAAAzG,QAGL,IAAAqiE,EAAAD,EAAA,SAAA37D,GACA,IAAA67D,EAAA77D,EAAAzG,QAAA,CACAuiE,QAAA,SAEA,iBAAAC,UAAAF,KAKAG,GAFAJ,EAAAE,QAEAH,EAAA,SAAA37D,GAEA,IAAAqgB,EAAArgB,EAAAzG,QAAA,oBAAA+c,eAAAxb,WAAAwb,OAAA,oBAAA2lD,WAAAnhE,WAAAmhE,KACAC,SAAA,cAAAA,GACA,iBAAAC,UAAA97C,MAKA+7C,EAAAT,EAAA,SAAA37D,GACA,IACAq8D,EAAAL,EADA,wBACAA,EADA,sBACA,KACAh8D,EAAAzG,QAAA,SAAAtG,EAAAC,GACA,OAAAmpE,EAAAppE,KAAAopE,EAAAppE,QAAAqG,IAAApG,IAAA,MACK,eAAA2wB,KAAA,CACLi4C,QAAAF,EAAAE,QACA3sC,KAAA,SACAmtC,UAAA,8CAIA1hE,EAAA,EACA2hE,EAAAzhE,KAAAC,SAEAyhE,EAAA,SAAAvpE,GACA,gBAAAgB,YAAAqF,IAAArG,EAAA,GAAAA,EAAA,QAAA2H,EAAA2hE,GAAAvhE,SAAA,MAGAyhE,EAAAd,EAAA,SAAA37D,GACA,IAAAq8D,EAAAD,EAAA,OAEAM,EAAAV,EAAAU,OACAC,EAAA,mBAAAD,EAEAE,EAAA58D,EAAAzG,QAAA,SAAAmZ,GACA,OAAA2pD,EAAA3pD,KAAA2pD,EAAA3pD,GAAAiqD,GAAAD,EAAAhqD,KAAAiqD,EAAAD,EAAAF,GAAA,UAAA9pD,KAGAkqD,EAAAP,UAGAQ,EAAA,SAAAC,GACA,wBAAAA,EAAA,OAAAA,EAAA,oBAAAA,GAGAC,EAAA,SAAAD,GACA,IAAAD,EAAAC,GAAA,MAAAE,UAAAF,EAAA,sBACA,OAAAA,GAGAG,EAAA,SAAAltD,GACA,IACA,QAAAA,IACK,MAAAhX,GACL,WAKAmkE,GAAAD,EAAA,WACA,OAIK,GAJL9pE,OAAAC,eAAA,GAAmC,KACnC0vB,IAAA,WACA,YAEKvtB,IAGL4nE,EAAAnB,EAAA5gE,SAEAgiE,EAAAP,EAAAM,IAAAN,EAAAM,EAAAhlE,eAEAklE,EAAA,SAAAP,GACA,OAAAM,EAAAD,EAAAhlE,cAAA2kE,GAAA,IAGAQ,GAAAJ,IAAAD,EAAA,WACA,OAIK,GAJL9pE,OAAAC,eAAAiqE,EAAA,YACAv6C,IAAA,WACA,YAEKvtB,IAeLgoE,EAAApqE,OAAAC,eAiBAoqE,EAAA,CACAz4D,EAjBAm4D,EAAA/pE,OAAAC,eAAA,SAAAqqE,EAAAC,EAAAC,GAOA,GANAZ,EAAAU,GAEAC,EAbA,SAAAZ,EAAAc,GACA,IAAAf,EAAAC,GAAA,OAAAA,EACA,IAAAtlD,EAAA5S,EACA,GAAAg5D,GAAA,mBAAApmD,EAAAslD,EAAA9hE,YAAA6hE,EAAAj4D,EAAA4S,EAAAzgB,KAAA+lE,IAAA,OAAAl4D,EACA,sBAAA4S,EAAAslD,EAAApO,WAAAmO,EAAAj4D,EAAA4S,EAAAzgB,KAAA+lE,IAAA,OAAAl4D,EACA,IAAAg5D,GAAA,mBAAApmD,EAAAslD,EAAA9hE,YAAA6hE,EAAAj4D,EAAA4S,EAAAzgB,KAAA+lE,IAAA,OAAAl4D,EACA,MAAAo4D,UAAA,2CAOAa,CAAAH,GAAA,GAEAX,EAAAY,GAEAL,EAAA,IACA,OAAAC,EAAAE,EAAAC,EAAAC,GACK,MAAA5kE,IAGL,WAAA4kE,GAAA,QAAAA,EAAA,MAAAX,UAAA,4BAEA,MADA,UAAAW,IAAAF,EAAAC,GAAAC,EAAAzqE,OACAuqE,IAMAK,EAAA,SAAAC,EAAA7qE,GACA,OACAG,aAAA,EAAA0qE,GACAzqE,eAAA,EAAAyqE,GACAxqE,WAAA,EAAAwqE,GACA7qE,UAIA8qE,EAAAd,EAAA,SAAA9mE,EAAAnD,EAAAC,GACA,OAAAsqE,EAAAz4D,EAAA3O,EAAAnD,EAAA6qE,EAAA,EAAA5qE,KACG,SAAAkD,EAAAnD,EAAAC,GAEH,OADAkD,EAAAnD,GAAAC,EACAkD,GAIA6nE,EAAAxB,EAAA,eAEAyB,EAAAtuD,MAAAvY,eACAiC,GAAA4kE,EAAAD,IAAAD,EAAAE,EAAAD,EAAA,IAEA,IAAAE,EAAA,SAAAlrE,GACAirE,EAAAD,GAAAhrE,IAAA,GAGAmrE,EAAA,SAAAC,EAAAnrE,GACA,OACAA,QACAmrE,WAIAC,EAAA,GACAtjE,EAAA,GAAmBA,SAEnBujE,EAAA,SAAAzB,GACA,OAAA9hE,EAAAjE,KAAA+lE,GAAAjtD,MAAA,OAKA2uD,EAAArrE,OAAA,KAAAsrE,qBAAA,GAAAtrE,OAAA,SAAA2pE,GACA,gBAAAyB,EAAAzB,KAAAhgE,MAAA,IAAA3J,OAAA2pE,IAIA4B,EAAA,SAAA5B,GACA,QAAAxjE,GAAAwjE,EAAA,MAAAE,UAAA,yBAAAF,GACA,OAAAA,GAIA6B,EAAA,SAAA7B,GACA,OAAA0B,EAAAE,EAAA5B,KAGA58D,EAAA,GAAyBA,eAEzB0+D,EAAA,SAAA9B,EAAA7pE,GACA,OAAAiN,EAAAnJ,KAAA+lE,EAAA7pE,IAGA4rE,EAAAlD,EAAA,SAAA37D,GACA,IAAA8+D,EAAAtC,EAAA,OAGAuC,EAAA7C,SAAA,SACA8C,GAAA,GAAAD,GAAAjiE,MAFA,YAIA8+D,EAAAqD,cAAA,SAAAnC,GACA,OAAAiC,EAAAhoE,KAAA+lE,KAGA98D,EAAAzG,QAAA,SAAAkkE,EAAAxqE,EAAA2R,EAAAs6D,GACA,IAAAC,EAAA,mBAAAv6D,EACAu6D,IAAAP,EAAAh6D,EAAA,SAAAo5D,EAAAp5D,EAAA,OAAA3R,IACAwqE,EAAAxqE,KAAA2R,IACAu6D,IAAAP,EAAAh6D,EAAAk6D,IAAAd,EAAAp5D,EAAAk6D,EAAArB,EAAAxqE,GAAA,GAAAwqE,EAAAxqE,GAAA+rE,EAAA3qC,KAAA0V,OAAA92C,MAEAwqE,IAAAzB,EACAyB,EAAAxqE,GAAA2R,EACOs6D,EAIAzB,EAAAxqE,GACPwqE,EAAAxqE,GAAA2R,EAEAo5D,EAAAP,EAAAxqE,EAAA2R,WANA64D,EAAAxqE,GAEA+qE,EAAAP,EAAAxqE,EAAA2R,OAOKs3D,SAAA7kE,UA1BL,WA0BK,WACL,yBAAAL,WAAA8nE,IAAAC,EAAAhoE,KAAAC,UAIAooE,EAAA,SAAAtC,GACA,sBAAAA,EAAA,MAAAE,UAAAF,EAAA,uBACA,OAAAA,GAIAuC,EAAA,SAAA7nD,EAAA8nD,EAAA1rE,GAGA,GAFAwrE,EAAA5nD,QAEAle,IAAAgmE,EAAA,OAAA9nD,EAEA,OAAA5jB,GACA,OACA,gBAAA2B,GACA,OAAAiiB,EAAAzgB,KAAAuoE,EAAA/pE,IAGA,OACA,gBAAAA,EAAAoO,GACA,OAAA6T,EAAAzgB,KAAAuoE,EAAA/pE,EAAAoO,IAGA,OACA,gBAAApO,EAAAoO,EAAA6B,GACA,OAAAgS,EAAAzgB,KAAAuoE,EAAA/pE,EAAAoO,EAAA6B,IAIA,kBAGA,OAAAgS,EAAAN,MAAAooD,EAAA3rE,aAMA4rE,EAAA,SAAAA,EAAA9pE,EAAAid,EAAA7e,GACA,IAQAZ,EAAAusE,EAAAvV,EAAAhG,EARAwb,EAAAhqE,EAAA8pE,EAAAG,EACAC,EAAAlqE,EAAA8pE,EAAAK,EACAC,EAAApqE,EAAA8pE,EAAA3B,EACAkC,EAAArqE,EAAA8pE,EAAA7B,EACAqC,EAAAtqE,EAAA8pE,EAAAS,EACAvsE,EAAAksE,EAAA3D,EAAA6D,EAAA7D,EAAAtpD,KAAAspD,EAAAtpD,GAAA,KAAuFspD,EAAAtpD,IAAA,IAAwB,UAC/GnZ,EAAAomE,EAAA/D,IAAAlpD,KAAAkpD,EAAAlpD,GAAA,IACAutD,EAAA1mE,EAAA,YAAAA,EAAA,cAIA,IAAAtG,KAFA0sE,IAAA9rE,EAAA6e,GAEA7e,EAEA2rE,GAAAC,GAAAhsE,QAAA6F,IAAA7F,EAAAR,GAEAg3D,GAAAuV,EAAA/rE,EAAAI,GAAAZ,GAEAgxD,EAAA8b,GAAAP,EAAAH,EAAApV,EAAA+R,GAAA8D,GAAA,mBAAA7V,EAAAoV,EAAAnD,SAAAnlE,KAAAkzD,KAEAx2D,GAAAorE,EAAAprE,EAAAR,EAAAg3D,EAAAx0D,EAAA8pE,EAAAW,GAEA3mE,EAAAtG,IAAAg3D,GAAA+T,EAAAzkE,EAAAtG,EAAAgxD,GACA6b,GAAAG,EAAAhtE,IAAAg3D,IAAAgW,EAAAhtE,GAAAg3D,IAIA+R,EAAAH,KAAAD,EAEA2D,EAAAG,EAAA,EAEAH,EAAAK,EAAA,EAEAL,EAAA3B,EAAA,EAEA2B,EAAA7B,EAAA,EAEA6B,EAAAS,EAAA,GAEAT,EAAAY,EAAA,GAEAZ,EAAAW,EAAA,GAEAX,EAAAa,EAAA,IAEA,IA0BAC,EA1BAC,EAAAf,EAEA/d,EAAA1mD,KAAA0mD,KACA18C,EAAAhK,KAAAgK,MAEAy7D,EAAA,SAAAzD,GACA,OAAAxqD,MAAAwqD,MAAA,GAAAA,EAAA,EAAAh4D,EAAA08C,GAAAsb,IAIAl5D,EAAA9I,KAAA8I,IAEA48D,EAAA,SAAA1D,GACA,OAAAA,EAAA,EAAAl5D,EAAA28D,EAAAzD,GAAA,qBAGAj5D,EAAA/I,KAAA+I,IACA48D,EAAA3lE,KAAA8I,IAiCA88D,EAAAtE,EAAA,QAEAuE,EAAA,SAAA1tE,GACA,OAAAytE,EAAAztE,KAAAytE,EAAAztE,GAAAupE,EAAAvpE,KAGA2tE,GA9BAP,GA8BA,EA7BA,SAAAQ,EAAAh/B,EAAAnoB,GACA,IAMAxmB,EANAuqE,EAAAkB,EAAAkC,GAEAjtE,EAAA4sE,EAAA/C,EAAA7pE,QAEAwiB,EAbA,SAAAA,EAAAxiB,GAEA,OADAwiB,EAAAmqD,EAAAnqD,IACA,EAAAvS,EAAAuS,EAAAxiB,EAAA,GAAA6sE,EAAArqD,EAAAxiB,GAWAktE,CAAApnD,EAAA9lB,GAKA,GAAAysE,GAAAx+B,MAAA,KAAAjuC,EAAAwiB,GAGA,IAFAljB,EAAAuqE,EAAArnD,OAEAljB,EAAA,cACO,KAAYU,EAAAwiB,EAAgBA,IACnC,IAAAiqD,GAAAjqD,KAAAqnD,IACAA,EAAArnD,KAAAyrB,EAAA,OAAAw+B,GAAAjqD,GAAA,EAGA,OAAAiqD,IAAA,IAYAU,EAAAJ,EAAA,YAwBAK,EAAA,gGAAAlkE,MAAA,KAGAmkE,EAAA9tE,OAAAY,MAAA,SAAA0pE,GACA,OA1BA,SAAArnE,EAAA8qE,GACA,IAIAjuE,EAJAwqE,EAAAkB,EAAAvoE,GAEA1C,EAAA,EACAgiB,EAAA,GAGA,IAAAziB,KAAAwqE,EACAxqE,GAAA8tE,GAAAnC,EAAAnB,EAAAxqE,IAAAyiB,EAAAmO,KAAA5wB,GAIA,KAAAiuE,EAAAttE,OAAAF,GACAkrE,EAAAnB,EAAAxqE,EAAAiuE,EAAAxtE,SACAktE,EAAAlrD,EAAAziB,IAAAyiB,EAAAmO,KAAA5wB,IAIA,OAAAyiB,EAQAyrD,CAAA1D,EAAAuD,IAGAI,EAAAlE,EAAA/pE,OAAAkuE,iBAAA,SAAA5D,EAAA6D,GACAvE,EAAAU,GAQA,IANA,IAIAC,EAJA3pE,EAAAktE,EAAAK,GAEA1tE,EAAAG,EAAAH,OACAF,EAAA,EAGAE,EAAAF,GACA8pE,EAAAz4D,EAAA04D,EAAAC,EAAA3pE,EAAAL,KAAA4tE,EAAA5D,IAGA,OAAAD,GAGA8D,EAAAvF,EAAA5gE,SAEAomE,GAAAD,KAAAE,gBAGAC,GAAAf,EAAA,YAEAgB,GAAA,aAMAC,GAAA,WAEA,IAKAC,EALAC,EAAAzE,EAAA,UAEA3pE,EAAAstE,EAAAptE,OAkBA,IAdAkuE,EAAAllE,MAAAm8B,QAAA,OAEAyoC,GAAAjmE,YAAAumE,GAEAA,EAAA5G,IAAA,eAIA2G,EAAAC,EAAAC,cAAA3mE,UACA4mE,OACAH,EAAAI,MAAAC,uCACAL,EAAAhpE,QACA+oE,GAAAC,EAAAnC,EAEAhsE,YACAkuE,GAAA,UAAAZ,EAAAttE,IAGA,OAAAkuE,MAGAO,GAAAhvE,OAAAivE,QAAA,SAAA3E,EAAA6D,GACA,IAAA5rD,EAUA,OARA,OAAA+nD,GACAkE,GAAA,UAAA5E,EAAAU,GACA/nD,EAAA,IAAAisD,GACAA,GAAA,eAEAjsD,EAAAgsD,IAAAjE,GACK/nD,EAAAksD,UAELtoE,IAAAgoE,EAAA5rD,EAAA0rD,EAAA1rD,EAAA4rD,IAGAe,GAAA7E,EAAAz4D,EAEAu9D,GAAA7F,EAAA,eAEA8F,GAAA,SAAAzF,EAAA7mE,EAAAusE,GACA1F,IAAA8B,EAAA9B,EAAA0F,EAAA1F,IAAAzlE,UAAAirE,KAAAD,GAAAvF,EAAAwF,GAAA,CACAhvE,cAAA,EACAJ,MAAA+C,KAIAwsE,GAAA,GAEAzE,EAAAyE,GAAAhG,EAAA,uBACA,OAAAzlE,OAGA,IAAA0rE,GAAA,SAAAC,EAAAC,EAAArwC,GACAowC,EAAAtrE,UAAA8qE,GAAAM,GAAA,CACAlwC,KAAAurC,EAAA,EAAAvrC,KAGAgwC,GAAAI,EAAAC,EAAA,cAIAC,GAAA,SAAA/F,GACA,OAAA3pE,OAAAurE,EAAA5B,KAIAgG,GAAAnC,EAAA,YAEAoC,GAAA5vE,OAAAkE,UAEA2rE,GAAA7vE,OAAA8vE,gBAAA,SAAAxF,GAEA,OADAA,EAAAoF,GAAApF,GACAmB,EAAAnB,EAAAqF,IAAArF,EAAAqF,IAEA,mBAAArF,EAAArkD,aAAAqkD,eAAArkD,YACAqkD,EAAArkD,YAAA/hB,UAGAomE,aAAAtqE,OAAA4vE,GAAA,MAGAG,GAAAzG,EAAA,YAEA0G,KAAA,GAAApvE,MAAA,WAAAA,QAMAqvE,GAAA,WACA,OAAApsE,MAoFAqsE,GAjFA,SAAAC,EAAAV,EAAAD,EAAApwC,EAAAgxC,EAAAC,EAAAC,GACAf,GAAAC,EAAAC,EAAArwC,GAEA,IA4BAmxC,EAAAzwE,EAAAwvE,EA5BAkB,EAAA,SAAAC,GACA,IAAAT,IAAAS,KAAAC,EAAA,OAAAA,EAAAD,GAEA,OAAAA,GACA,IAdA,OAmBA,IAlBA,SAmBA,kBACA,WAAAjB,EAAA3rE,KAAA4sE,IAIA,kBACA,WAAAjB,EAAA3rE,KAAA4sE,KAIAtB,EAAAM,EAAA,YACAkB,EA9BA,UA8BAP,EACAQ,GAAA,EACAF,EAAAP,EAAAjsE,UACA2sE,EAAAH,EAAAX,KAAAW,EAnCA,eAmCAN,GAAAM,EAAAN,GACAU,EAAAD,GAAAL,EAAAJ,GACAW,EAAAX,EAAAO,EAAAH,EAAA,WAAAM,OAAA3qE,EACA6qE,EAAA,SAAAvB,GAAAiB,EAAAO,SAAAJ,EAiCA,GA9BAG,IACA1B,EAAAO,GAAAmB,EAAAptE,KAAA,IAAAusE,OAEAnwE,OAAAkE,WAAAorE,EAAAlwC,OAEAgwC,GAAAE,EAAAH,GAAA,GAGA,mBAAAG,EAAAS,KAAAlF,EAAAyE,EAAAS,GAAAE,KAKAU,GAAAE,GApDA,WAoDAA,EAAAtxD,OACAqxD,GAAA,EAEAE,EAAA,WACA,OAAAD,EAAAjtE,KAAAC,SAKAmsE,IAAAY,IAAAF,EAAAX,MACAlF,EAAA6F,EAAAX,GAAAe,GAIA3F,EAAAsE,GAAAqB,EACA3F,EAAAgE,GAAAc,GAEAG,EAMA,GALAG,EAAA,CACApzD,OAAAwzD,EAAAG,EAAAN,EAvEA,UAwEA5vE,KAAAyvE,EAAAS,EAAAN,EAzEA,QA0EAS,QAAAF,GAEAT,EAAA,IAAAxwE,KAAAywE,EACAzwE,KAAA4wE,GAAAhF,EAAAgF,EAAA5wE,EAAAywE,EAAAzwE,SACOqtE,IAAA5C,EAAA4C,EAAAZ,GAAAyD,IAAAY,GAAAnB,EAAAc,GAGP,OAAAA,EAOAW,CAAAz0D,MAAA,iBAAA00D,EAAAV,GACA5sE,KAAAutE,GAAA5F,EAAA2F,GAEAttE,KAAAwtE,GAAA,EAEAxtE,KAAAytE,GAAAb,GAEG,WACH,IAAAnG,EAAAzmE,KAAAutE,GACAX,EAAA5sE,KAAAytE,GACAruD,EAAApf,KAAAwtE,KAEA,OAAA/G,GAAArnD,GAAAqnD,EAAA7pE,QACAoD,KAAAutE,QAAAjrE,EACA8kE,EAAA,IAGAA,EAAA,UAAAwF,EAAAxtD,EACA,UAAAwtD,EAAAnG,EAAArnD,GACA,CAAAA,EAAAqnD,EAAArnD,MACG,UAGHkoD,EAAAoG,UAAApG,EAAA1uD,MAEAuuD,EAAA,QAEAA,EAAA,UAEAA,EAAA,WA4CA,IA1CA,IAAAwG,GAAAlI,EAAA,YAEAmI,GAAAnI,EAAA,eAEAoI,GAAAvG,EAAA1uD,MACAk1D,GAAA,CACAC,aAAA,EAEAC,qBAAA,EACAC,cAAA,EACAC,gBAAA,EACAC,aAAA,EACAC,eAAA,EACAC,cAAA,EACAC,sBAAA,EACAC,UAAA,EACAC,mBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,mBAAA,EACAC,WAAA,EAEAC,eAAA,EACAC,cAAA,EACAC,UAAA,EACAC,kBAAA,EACAC,QAAA,EACAC,aAAA,EACAC,eAAA,EACAC,eAAA,EACAC,gBAAA,EACAC,cAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,gBAAA,EAEAC,kBAAA,EACAC,eAAA,EACAC,WAAA,GAGAC,GAAA7F,EAAA6D,IAAApxE,GAAA,EAA0DA,GAAAozE,GAAAlzE,OAAwBF,KAAA,CAClF,IAIAT,GAJA2vE,GAAAkE,GAAApzE,IACAqzE,GAAAjC,GAAAlC,IACAoE,GAAAhL,EAAA4G,IACAiB,GAAAmD,OAAA3vE,UAGA,GAAAwsE,KACAA,GAAAc,KAAA3G,EAAA6F,GAAAc,GAAAE,IACAhB,GAAAe,KAAA5G,EAAA6F,GAAAe,GAAAhC,IACAtE,EAAAsE,IAAAiC,GACAkC,IAAA,IAAA9zE,MAAAowE,GACAQ,GAAA5wE,KAAA4rE,EAAAgF,GAAA5wE,GAAAowE,GAAApwE,KAAA,IAMA,SAAAg0E,EAAAl3D,GACA,IAAAyH,GAAAokD,EAAAzoE,QAAA,IAAgC8zE,IAAA9zE,OAAA8zE,GAChChjB,EAAA,GACAA,EAAAgjB,GAAAl3D,EAAAyH,GAEA8oD,IAAA1C,EAAA0C,EAAAZ,EAAAzC,EAAA,WACAzlD,EAAA,KACK,SAAAysC,GAILijB,CAAA,kBACA,gBAAApK,GACA,OAAAmE,EAAA4B,GAAA/F,OAIA,IACAqK,GAAA,CACApiE,EAFA5R,OAAAa,uBAKAozE,GAAA,CACAriE,EAFA,GAAc05D,sBAKd4I,GAAAl0E,OAAAm0E,OAEAC,IAAAF,IAAApK,EAAA,WACA,IAAAuK,EAAA,GACAxH,EAAA,GAEApC,EAAAlB,SACA+K,EAAA,uBAKA,OAJAD,EAAA5J,GAAA,EACA6J,EAAA3qE,MAAA,IAAAzI,QAAA,SAAA2P,GACAg8D,EAAAh8D,OAEqB,GAArBqjE,GAAA,GAAqBG,GAAA5J,IAAAzqE,OAAAY,KAAAszE,GAAA,GAAsCrH,IAAA3rC,KAAA,KAAAozC,IACxD,SAAAh0E,EAAAI,GASH,IAPA,IAAA6zE,EAAA7E,GAAApvE,GAEAk0E,EAAAh0E,UAAAC,OACAwiB,EAAA,EACAwxD,EAAAT,GAAApiE,EACA8iE,EAAAT,GAAAriE,EAEA4iE,EAAAvxD,GAQA,IAPA,IAKAnjB,EALA2qE,EAAAY,EAAA7qE,UAAAyiB,MAEAriB,EAAA6zE,EAAA3G,EAAArD,GAAA3pE,OAAA2zE,EAAAhK,IAAAqD,EAAArD,GACAhqE,EAAAG,EAAAH,OACAuhC,EAAA,EAGAvhC,EAAAuhC,GACA0yC,EAAA9wE,KAAA6mE,EAAA3qE,EAAAc,EAAAohC,QAAAuyC,EAAAz0E,GAAA2qE,EAAA3qE,IAIA,OAAAy0E,GACGL,GAGH/G,IAAA1C,EAAA0C,EAAAZ,EAAA,UACA4H,OAAAC,KAGA,IAiCAO,GAdA,SAAAC,GACA,gBAAAzI,EAAAn6B,GACA,IAKA5vC,EAAAoO,EALAzC,EAAA6oC,OAAA20B,EAAAY,IAEA5rE,EAAA6sE,EAAAp7B,GAEAhkC,EAAAD,EAAAtN,OAEA,OAAAF,EAAA,GAAAA,GAAAyN,EAAA4mE,EAAA,QAAAzuE,GACA/D,EAAA2L,EAAA8mE,WAAAt0E,IACA,OAAA6B,EAAA,OAAA7B,EAAA,IAAAyN,IAAAwC,EAAAzC,EAAA8mE,WAAAt0E,EAAA,WAAAiQ,EAAA,MAAAokE,EAAA7mE,EAAA8U,OAAAtiB,GAAA6B,EAAAwyE,EAAA7mE,EAAA2O,MAAAnc,IAAA,GAAAiQ,EAAA,OAAApO,EAAA,kBAIA0yE,EAAA,GAIAC,GAAA,SAAAtK,EAAAxnD,EAAA+xD,GACA,OAAA/xD,GAAA+xD,EAAAL,GAAAlK,EAAAxnD,GAAAxiB,OAAA,IAIAw0E,GAAA3L,EAAA,eAGA4L,GAEG,aAFH9J,EAAA,WACA,OAAA5qE,UADA,IAoBA20E,GAAAxwE,OAAAT,UAAA0Y,KAGAw4D,GAAA,SAAAnI,EAAAxC,GACA,IAAA7tD,EAAAqwD,EAAArwD,KAEA,uBAAAA,EAAA,CACA,IAAA2F,EAAA3F,EAAAhZ,KAAAqpE,EAAAxC,GAEA,qBAAAloD,EACA,UAAAsnD,UAAA,sEAGA,OAAAtnD,EAGA,cAxBA,SAAAonD,GACA,IAAAW,EAAAiK,EAAA1H,EACA,YAAA1mE,IAAAwjE,EAAA,mBAAAA,EAAA,OACA,iBAAA4K,EAXA,SAAA5K,EAAA7pE,GACA,IACA,OAAA6pE,EAAA7pE,GACK,MAAA8F,KAQLyvE,CAAA/K,EAAAtqE,OAAA2pE,GAAAsL,KAAAV,EACAW,GAAA9J,EAAAd,GACA,WAAAuC,EAAAzB,EAAAd,KAAA,mBAAAA,EAAAgL,OAAA,YAAAzI,EAmBA0I,CAAAtI,GACA,UAAApD,UAAA,+CAGA,OAAAsL,GAAAvxE,KAAAqpE,EAAAxC,IAIA+K,GAAA,WACA,IAAArJ,EAAAvC,EAAA/lE,MAEA0e,EAAA,GAMA,OALA4pD,EAAAj/C,SAAA3K,GAAA,KACA4pD,EAAAsJ,aAAAlzD,GAAA,KACA4pD,EAAAuJ,YAAAnzD,GAAA,KACA4pD,EAAA6I,UAAAzyD,GAAA,KACA4pD,EAAAwJ,SAAApzD,GAAA,KACAA,GAGAqzD,GAAAjxE,OAAAT,UAAA0Y,KAIAi5D,GAAAj/B,OAAA1yC,UAAA4xE,QACAC,GAAAH,GAGAI,GAAA,WACA,IAAAC,EAAA,IACAC,EAAA,MAGA,OAFAN,GAAAhyE,KAAAqyE,EAAA,KACAL,GAAAhyE,KAAAsyE,EAAA,KACA,IAAAD,EAAA,eAAAC,EAAA,UALA,GASAC,QAAAhwE,IAAA,OAAAyW,KAAA,QACAo5D,IAAAG,MAGAJ,GAAA,SAAA12D,GACA,IACA+2D,EAAAC,EAAAv3D,EAAAve,EADA+1E,EAAAzyE,KAyBA,OAtBAsyE,KACAE,EAAA,IAAA1xE,OAAA,IAAA2xE,EAAA51E,OAAA,WAAA80E,GAAA5xE,KAAA0yE,KAGAN,KAAAI,EAAAE,EAAA,WACAx3D,EAAA82D,GAAAhyE,KAAA0yE,EAAAj3D,GAEA22D,IAAAl3D,IACAw3D,EAAA,UAAAA,EAAAppD,OAAApO,EAAAmE,MAAAnE,EAAA,GAAAre,OAAA21E,GAGAD,IAAAr3D,KAAAre,OAAA,GAIAo1E,GAAAjyE,KAAAkb,EAAA,GAAAu3D,EAAA,WACA,IAAA91E,EAAA,EAAqBA,EAAAC,UAAAC,OAAA,EAA0BF,SAC/C4F,IAAA3F,UAAAD,KAAAue,EAAAve,QAAA4F,KAKA2Y,IAIA,IAAAy3D,GAAAR,GAEA5I,EAAA,CACA7sE,OAAA,SACAowE,OAAA,EACA8F,OAAAD,KAAA,IAAA35D,MACG,CACHA,KAAA25D,KAGA,IAAAE,GAAAnN,EAAA,WAEAoN,IAAA5M,EAAA,WAIA,IAAAwM,EAAA,IAUA,OARAA,EAAA15D,KAAA,WACA,IAAA2F,EAAA,GAIA,OAHAA,EAAAo0D,OAAA,CACAv0E,EAAA,KAEAmgB,GAGA,SAAAuzD,QAAAQ,EAAA,UAGAM,GAAA,WAEA,IAAAN,EAAA,OACAO,EAAAP,EAAA15D,KAEA05D,EAAA15D,KAAA,WACA,OAAAi6D,EAAA9yD,MAAAlgB,KAAArD,YAGA,IAAA+hB,EAAA,KAAA5Y,MAAA2sE,GACA,WAAA/zD,EAAA9hB,QAAA,MAAA8hB,EAAA,UAAAA,EAAA,GAVA,GAaAu0D,GAAA,SAAAhD,EAAArzE,EAAAmc,GACA,IAAAm6D,EAAAzN,EAAAwK,GAEAkD,GAAAlN,EAAA,WAEA,IAAAQ,EAAA,GAMA,OAJAA,EAAAyM,GAAA,WACA,UAGA,MAAAjD,GAAAxJ,KAEA2M,EAAAD,GAAAlN,EAAA,WAEA,IAAAoN,GAAA,EACAZ,EAAA,IAkBA,OAhBAA,EAAA15D,KAAA,WAEA,OADAs6D,GAAA,EACA,MAGA,UAAApD,IAGAwC,EAAArwD,YAAA,GAEAqwD,EAAArwD,YAAAwwD,IAAA,WACA,OAAAH,IAIAA,EAAAS,GAAA,KACAG,SACK/wE,EAEL,IAAA6wE,IAAAC,GAAA,YAAAnD,IAAA4C,IAAA,UAAA5C,IAAA8C,GAAA,CACA,IAAAO,EAAA,IAAAJ,GACAK,EAAAx6D,EAAA2uD,EAAAwL,EAAA,GAAAjD,GAAA,SAAAuD,EAAAC,EAAAj4D,EAAAk4D,EAAAC,GACA,OAAAF,EAAA16D,OAAA25D,GACAS,IAAAQ,EAIA,CACAtM,MAAA,EACAnrE,MAAAo3E,EAAAvzE,KAAA0zE,EAAAj4D,EAAAk4D,IAIA,CACArM,MAAA,EACAnrE,MAAAs3E,EAAAzzE,KAAAyb,EAAAi4D,EAAAC,IAIA,CACArM,MAAA,KAGAuM,EAAAL,EAAA,GACAM,EAAAN,EAAA,GAEA1L,EAAA90B,OAAA1yC,UAAA4vE,EAAA2D,GAEA5M,EAAAlmE,OAAAT,UAAA6yE,EAAA,GAAAt2E,EAEA,SAAA8B,EAAAia,GACA,OAAAk7D,EAAA9zE,KAAArB,EAAAsB,KAAA2Y,IAGA,SAAAja,GACA,OAAAm1E,EAAA9zE,KAAArB,EAAAsB,UAKA8zE,GAAAhwE,KAAA+I,IACAknE,GAAAjwE,KAAA8I,IACAonE,GAAAlwE,KAAAgK,MACAmmE,GAAA,4BACAC,GAAA,oBAOAjB,GAAA,qBAAAkB,EAAAC,EAAAC,EAAAC,GACA,OAEA,SAAAC,EAAAC,GACA,IAAA/N,EAAA0N,EAAAn0E,MACAwgB,OAAAle,GAAAiyE,OAAAjyE,EAAAiyE,EAAAH,GACA,YAAA9xE,IAAAke,IAAAzgB,KAAAw0E,EAAA9N,EAAA+N,GAAAH,EAAAt0E,KAAAgzC,OAAA0zB,GAAA8N,EAAAC,IAGA,SAAAf,EAAAe,GACA,IAAAnkD,EAAAikD,EAAAD,EAAAZ,EAAAzzE,KAAAw0E,GACA,GAAAnkD,EAAAg3C,KAAA,OAAAh3C,EAAAn0B,MAEA,IAAAu4E,EAAA1O,EAAA0N,GAEA7M,EAAA7zB,OAAA/yC,MACA00E,EAAA,oBAAAF,EACAE,IAAAF,EAAAzhC,OAAAyhC,IACA,IAvBA1O,EAuBAz8C,EAAAorD,EAAAprD,OAEA,GAAAA,EAAA,CACA,IAAAsrD,EAAAF,EAAAtD,QACAsD,EAAAlC,UAAA,EAKA,IAFA,IAAAqC,EAAA,KAEA,CACA,IAAAl2D,EAAA6yD,GAAAkD,EAAA7N,GAEA,UAAAloD,EAAA,MAEA,GADAk2D,EAAA/nD,KAAAnO,IACA2K,EAAA,MACA,IAAAwrD,EAAA9hC,OAAAr0B,EAAA,IACA,KAAAm2D,IAAAJ,EAAAlC,UAAArB,GAAAtK,EAAA4C,EAAAiL,EAAAlC,WAAAoC,IAMA,IAHA,IAAAG,EAAA,GACAC,EAAA,EAEAr4E,EAAA,EAAqBA,EAAAk4E,EAAAh4E,OAAoBF,IAAA,CACzCgiB,EAAAk2D,EAAAl4E,GASA,IARA,IAAAs4E,EAAAjiC,OAAAr0B,EAAA,IACAvY,EAAA2tE,GAAAC,GAAAxK,EAAA7qD,EAAAU,OAAAwnD,EAAAhqE,QAAA,GACAq4E,EAAA,GAMA92C,EAAA,EAAuBA,EAAAzf,EAAA9hB,OAAmBuhC,IAC1C82C,EAAApoD,UAvDAvqB,KADAwjE,EAwDApnD,EAAAyf,IAvDA2nC,EAAA/yB,OAAA+yB,IA0DA,IAAAoP,EAAAx2D,EAAAo0D,OAEA,GAAA4B,EAAA,CACA,IAAAS,EAAA,CAAAH,GAAA/3E,OAAAg4E,EAAA9uE,EAAAygE,QACAtkE,IAAA4yE,GAAAC,EAAAtoD,KAAAqoD,GACA,IAAAE,EAAAriC,OAAAyhC,EAAAt0D,WAAA5d,EAAA6yE,SAEAC,EAAAC,EAAAL,EAAApO,EAAAzgE,EAAA8uE,EAAAC,EAAAV,GAGAruE,GAAA4uE,IACAD,GAAAlO,EAAA/tD,MAAAk8D,EAAA5uE,GAAAivE,EACAL,EAAA5uE,EAAA6uE,EAAAp4E,QAIA,OAAAk4E,EAAAlO,EAAA/tD,MAAAk8D,KAGA,SAAAM,EAAAL,EAAAx5D,EAAArV,EAAA8uE,EAAAC,EAAAE,GACA,IAAAE,EAAAnvE,EAAA6uE,EAAAp4E,OACA6R,EAAAwmE,EAAAr4E,OACA24E,EAAArB,GAOA,YALA5xE,IAAA4yE,IACAA,EAAArJ,GAAAqJ,GACAK,EAAAtB,IAGAI,EAAAt0E,KAAAq1E,EAAAG,EAAA,SAAAt6D,EAAAsnD,GACA,IAAAiT,EAEA,OAAAjT,EAAAvjD,OAAA,IACA,QACA,UAEA,QACA,OAAAg2D,EAEA,QACA,OAAAx5D,EAAA3C,MAAA,EAAA1S,GAEA,QACA,OAAAqV,EAAA3C,MAAAy8D,GAEA,QACAE,EAAAN,EAAA3S,EAAA1pD,MAAA,OACA,MAEA,QAEA,IAAA9a,GAAAwkE,EACA,OAAAxkE,EAAA,OAAAkd,EAEA,GAAAld,EAAA0Q,EAAA,CACA,IAAAV,EAAAimE,GAAAj2E,EAAA,IACA,WAAAgQ,EAAAkN,EACAlN,GAAAU,OAAAnM,IAAA2yE,EAAAlnE,EAAA,GAAAw0D,EAAAvjD,OAAA,GAAAi2D,EAAAlnE,EAAA,GAAAw0D,EAAAvjD,OAAA,GACA/D,EAGAu6D,EAAAP,EAAAl3E,EAAA,GAGA,YAAAuE,IAAAkzE,EAAA,GAAAA,OAMAvC,GAAA,mBAAAkB,EAAAsB,EAAAC,EAAApB,GACA,OAEA,SAAAb,GACA,IAAAhN,EAAA0N,EAAAn0E,MACAwgB,OAAAle,GAAAmxE,OAAAnxE,EAAAmxE,EAAAgC,GACA,YAAAnzE,IAAAke,IAAAzgB,KAAA0zE,EAAAhN,GAAA,IAAA3lE,OAAA2yE,GAAAgC,GAAA1iC,OAAA0zB,KAGA,SAAAgN,GACA,IAAApjD,EAAAikD,EAAAoB,EAAAjC,EAAAzzE,MACA,GAAAqwB,EAAAg3C,KAAA,OAAAh3C,EAAAn0B,MAEA,IAAAu4E,EAAA1O,EAAA0N,GAEA7M,EAAA7zB,OAAA/yC,MACA,IAAAy0E,EAAAprD,OAAA,OAAAkoD,GAAAkD,EAAA7N,GACA,IAAA+N,EAAAF,EAAAtD,QACAsD,EAAAlC,UAAA,EAKA,IAJA,IAEA7zD,EAFA8xD,EAAA,GACAzyE,EAAA,EAGA,QAAA2gB,EAAA6yD,GAAAkD,EAAA7N,KAAA,CACA,IAAAiO,EAAA9hC,OAAAr0B,EAAA,IACA8xD,EAAAzyE,GAAA82E,EACA,KAAAA,IAAAJ,EAAAlC,UAAArB,GAAAtK,EAAA4C,EAAAiL,EAAAlC,WAAAoC,IACA52E,IAGA,WAAAA,EAAA,KAAAyyE,MAKA,IAAAiF,GAAAhQ,EAAA,SAQAkQ,GAAAlQ,EAAA,WASAmQ,GAAA9xE,KAAA8I,IACAipE,GAAA,GAAAhpD,KAKAipD,KAAA,WACA,IACA,WAAAh1E,OAAA,SACK,MAAAiB,KAHL,GAMAkxE,GAAA,mBAAAkB,EAAA4B,EAAAC,EAAA1B,GACA,IAAA2B,EA8CA,OA1CAA,EAFA,qLAEA,SAAAC,EAAAC,GACA,IAAAz3E,EAAAq0C,OAAA/yC,MACA,QAAAsC,IAAA4zE,GAAA,IAAAC,EAAA,SAEA,IApCA,SAAArQ,GACA,IAAAsQ,EACA,OAAAvQ,EAAAC,UAAAxjE,KAAA8zE,EAAAtQ,EAAA2P,OAAAW,EAAA,UAAA7O,EAAAzB,IAkCAuQ,CAAAH,GAAA,OAAAF,EAAAj2E,KAAArB,EAAAw3E,EAAAC,GASA,IARA,IAMAl7D,EAAAs3D,EAAA+D,EANAC,EAAA,GACAC,GAAAN,EAAAtE,WAAA,SAAAsE,EAAArE,UAAA,SAAAqE,EAAA/E,QAAA,SAAA+E,EAAApE,OAAA,QACA2E,EAAA,EACAC,OAAAp0E,IAAA6zE,EAAA,WAAAA,IAAA,EAEAQ,EAAA,IAAA71E,OAAAo1E,EAAAr5E,OAAA25E,EAAA,MAGAv7D,EAAAy3D,GAAA3yE,KAAA42E,EAAAj4E,QACA6zE,EAAAoE,EAAA,WAEAF,IACAF,EAAA1pD,KAAAnuB,EAAAma,MAAA49D,EAAAx7D,EAAAmE,QACAnE,EAAA,UAAAA,EAAAmE,MAAA1gB,EAAA,QAAAm3E,GAAA31D,MAAAq2D,EAAAt7D,EAAApC,MAAA,IACAy9D,EAAAr7D,EAAA,UACAw7D,EAAAlE,EACAgE,EAAA,QAAAG,KAGAC,EAAA,YAAA17D,EAAAmE,OAAAu3D,EAAA,YAOA,OAJAF,IAAA/3E,EAAA,QACA43E,GAAAK,EAAA11E,KAAA,KAAAs1E,EAAA1pD,KAAA,IACS0pD,EAAA1pD,KAAAnuB,EAAAma,MAAA49D,IAETF,EAAA,OAAAG,EAAAH,EAAA19D,MAAA,EAAA69D,GAAAH,GAGK,eAAAj0E,EAAA,UACL,SAAA4zE,EAAAC,GACA,YAAA7zE,IAAA4zE,GAAA,IAAAC,EAAA,GAAAH,EAAAj2E,KAAAC,KAAAk2E,EAAAC,IAGAH,EAGA,CAEA,SAAAE,EAAAC,GACA,IAAA1P,EAAA0N,EAAAn0E,MACA42E,OAAAt0E,GAAA4zE,OAAA5zE,EAAA4zE,EAAAH,GACA,YAAAzzE,IAAAs0E,IAAA72E,KAAAm2E,EAAAzP,EAAA0P,GAAAF,EAAAl2E,KAAAgzC,OAAA0zB,GAAAyP,EAAAC,IAMA,SAAA1C,EAAA0C,GACA,IAAA9lD,EAAAikD,EAAA2B,EAAAxC,EAAAzzE,KAAAm2E,EAAAF,IAAAD,GACA,GAAA3lD,EAAAg3C,KAAA,OAAAh3C,EAAAn0B,MAEA,IAAAu4E,EAAA1O,EAAA0N,GAEA7M,EAAA7zB,OAAA/yC,MAEA62E,EArFA,SAAApQ,EAAAqQ,GACA,IAEAlQ,EAFAiQ,EAAA9Q,EAAAU,GAAArkD,YAGA,YAAA9f,IAAAu0E,QAAAv0E,IAAAskE,EAAAb,EAAA8Q,GAAAlB,KAAAmB,EAAA1O,EAAAxB,GAiFAmQ,CAAAtC,EAAA3zE,QAEAk2E,EAAAvC,EAAAtD,QACAqF,GAAA/B,EAAA7C,WAAA,SAAA6C,EAAA5C,UAAA,SAAA4C,EAAAtD,QAAA,SAAA2E,GAAA,SAGAc,EAAA,IAAAC,EAAAf,GAAArB,EAAA,OAAAA,EAAA53E,OAAA,IAAA25E,GACAS,OAAA30E,IAAA6zE,EAAA,WAAAA,IAAA,EACA,OAAAc,EAAA,SACA,OAAArQ,EAAAhqE,OAAA,cAAA20E,GAAAqF,EAAAhQ,GAAA,CAAAA,GAAA,GAKA,IAJA,IAAA54D,EAAA,EACAC,EAAA,EACAuiE,EAAA,GAEAviE,EAAA24D,EAAAhqE,QAAA,CACAg6E,EAAArE,UAAAuD,GAAA7nE,EAAA,EAEA,IAEAlM,EAFAwL,EAAAgkE,GAAAqF,EAAAd,GAAAlP,IAAA/tD,MAAA5K,IAIA,UAAAV,IAAAxL,EAAA6zE,GAAApM,EAAAoN,EAAArE,WAAAuD,GAAA,EAAA7nE,IAAA24D,EAAAhqE,WAAAoR,EACAC,EAAAijE,GAAAtK,EAAA34D,EAAA+oE,OACS,CAET,GADAxG,EAAA3jD,KAAA+5C,EAAA/tD,MAAA7K,EAAAC,IACAuiE,EAAA5zE,SAAAq6E,EAAA,OAAAzG,EAEA,QAAA9zE,EAAA,EAAyBA,GAAA6Q,EAAA3Q,OAAA,EAAmBF,IAE5C,GADA8zE,EAAA3jD,KAAAtf,EAAA7Q,IACA8zE,EAAA5zE,SAAAq6E,EAAA,OAAAzG,EAGAviE,EAAAD,EAAAjM,GAKA,OADAyuE,EAAA3jD,KAAA+5C,EAAA/tD,MAAA7K,IACAwiE,MAYA,IA4CAvmC,GAAA,SAAAD,EAAAja,GAKA,IAAAnqB,EAEA,QANA,IAAAmqB,IACAA,EAAA3rB,SAAAS,MANA,SAAAmlC,GACA,OAAAA,EAAA/uB,MAAA,UAUAi8D,CAAAltC,IAdAmtC,QAAA/yE,SAAAgzE,eAAAhzE,SAAAgzE,cAHA,GAiBA,CACA,IAAAC,EApDA,WAKA,IAJA,IAAAA,EAAA,GACAC,EAAAlzE,SAAAmzE,YACAC,EAAA,GAEA96E,EAAA46E,EAAA16E,OAAA,EAAmCF,GAAA,EAAQA,IAAA,CAG3C,IAFA,IAAA+6E,EAAAH,EAAA56E,GAAAg7E,SAEAv5C,EAAAs5C,EAAA76E,OAAA,EAAoCuhC,GAAA,EAAQA,IAC5C,6BAAAs5C,EAAAt5C,GAAAw5C,aAAA,CACAH,EAAAC,EAAAt5C,GAAAq5C,QACA,MAIA,GAAAA,EACA,MAeA,OAXAA,IAAAI,UAAAJ,EAAAK,YAAA,KAAsD,EAAAL,EAAAK,YAAA,OACtD/xE,MAAA,KAAoBzI,QAAA,SAAA2sC,GACpB,GAAAA,EAAA,CACA,IAAAtuB,EAAAsuB,EAAAlkC,MAAA,SACA5J,EAAA8tC,EAAAlkC,MAAA,SAEA4V,GAAAxf,IACAm7E,EAAA,KAAA37D,EAAAo8D,QAAA57E,EAAA47E,WAIAT,EAqBAU,GACAnyE,EAAAyxE,EAAArtC,QAEApkC,EAAA0Z,OAAA0+C,iBAAAjuC,EAAA,MAAA0yC,iBAAAz4B,GAAAioC,QAAA,UAGA,OAAArsE,GAmGAsgE,GAAA,UAAAsQ,OAAAhQ,EAAAz4D,EAAAjN,OAAAT,UAAA,SACA/D,cAAA,EACAwvB,IAAA6lD,KAEA,IACA5J,GAAA,aAEAiQ,GAAA,SAAAx3D,GACAqnD,EAAA/mE,OAAAT,UAJA,WAIAmgB,GAAA,IAIAylD,EAAA,WACA,MAGK,QAHL8B,GAAAhoE,KAAA,CACAlD,OAAA,IACA25E,MAAA,QAGAwB,GAAA,WACA,IAAA5O,EAAArD,EAAA/lE,MAEA,UAAA/C,OAAAmsE,EAAAvsE,OAAA,cAAAusE,IAAAoN,OAAAtQ,GAAAkD,aAAAtoE,OAAA6wE,GAAA5xE,KAAAqpE,QAAA9mE,KAjBA,YAmBGylE,GAAArsD,MACHs8D,GAAA,WACA,OAAAjQ,GAAAhoE,KAAAC,QAkCAuC,EAAA01E,oBA3iDA,wGA4iDA11E,EAAA21E,gBAziDA,SAAAC,EAAAC,GACA,OAAAA,EAAAx3E,QAAAu3E,IAAA,GAyiDA51E,EAAA81E,kBA9iDA,yFA+iDA91E,EAAA+1E,iBA7iDA,sBA8iDA/1E,EAAAg2E,iBAtyBA,SAAAA,EAAA97E,EAAAI,GAIA,IAFA,IAAA27E,EAAAr8E,OAAAY,KAAAF,GAEA2wE,EAAA,EAAoBA,EAAAgL,EAAA57E,OAAkB4wE,IAAA,CACtC,IAAAvxE,EAAAu8E,EAAAhL,GAEA3wE,EAAAZ,aAAAE,QACAA,OAAAm0E,OAAAzzE,EAAAZ,GAAAs8E,EAAA97E,EAAAR,GAAAY,EAAAZ,KAMA,OADAE,OAAAm0E,OAAA7zE,GAAA,GAA8BI,GAC9BJ,GAyxBA8F,EAAAk2E,SAzJA,SAAAC,EAAA3oD,QACA,IAAAA,IACAA,EAAA3rB,SAAAS,MAGA,IACAe,EAAAqkC,GADA,KAAAyuC,EACA3oD,GACA,OAAAnqB,GAAA8yE,GAmJAn2E,EAAA0nC,YACA1nC,EAAAo2E,SAxIA,SAAAl3E,GACA,wBAAAA,EACA,UAAAq6C,MAAA,4BAGA,IAMArvC,EACAC,EACAC,EANA,IAFAlL,EAAAwZ,MAAA,4BAGA,UAAA6gC,MAAAr6C,EAAA,6BAiBA,OAVA,IAAAA,EAAA7E,QACA6P,EAAA0O,SAAA1Z,EAAAm2E,UAAA,SACAlrE,EAAAyO,SAAA1Z,EAAAm2E,UAAA,SACAjrE,EAAAwO,SAAA1Z,EAAAm2E,UAAA,WAEAnrE,EAAA0O,SAAA1Z,EAAAm2E,UAAA,SACAlrE,EAAAyO,SAAA1Z,EAAAm2E,UAAA,SACAjrE,EAAAwO,SAAA1Z,EAAAm2E,UAAA,UAGA,QAAAnrE,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAgHApK,EAAAq2E,UApGA,SAAAn3E,EAAA+C,GAKA,QAJA,IAAAA,IACAA,EAAA,KAGA,qBAAA/C,EACA,UAAAq6C,MAAA,4BAGA,IAMArvC,EACAC,EACAC,EANA,IAFAlL,EAAAwZ,MAAA,4BAGA,UAAA6gC,MAAAr6C,EAAA,6BAiBA,OAVA,IAAAA,EAAA7E,QACA6P,EAAA0O,SAAA1Z,EAAAm2E,UAAA,SACAlrE,EAAAyO,SAAA1Z,EAAAm2E,UAAA,SACAjrE,EAAAwO,SAAA1Z,EAAAm2E,UAAA,WAEAnrE,EAAA0O,SAAA1Z,EAAAm2E,UAAA,SACAlrE,EAAAyO,SAAA1Z,EAAAm2E,UAAA,SACAjrE,EAAAwO,SAAA1Z,EAAAm2E,UAAA,UAGA,QAAAnrE,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAnI,EAAA,SAwEAjC,EAAAs2E,SA9BA,SAAAp3E,GACA,wBAAAA,EACA,UAAAq6C,MAAA,4BAGA,mBAAAr6C,EACA,kBAGA,IAAA+K,EAAA/K,EAAAwZ,MAAA,wEAEA,IAAAzO,EACA,UAAAsvC,MAAAr6C,EAAA,6BAGA,IAAAgL,EAAA,IAAA0O,SAAA3O,EAAA,OAAAxI,SAAA,IACA0I,EAAA,IAAAyO,SAAA3O,EAAA,OAAAxI,SAAA,IACA2I,EAAA,IAAAwO,SAAA3O,EAAA,OAAAxI,SAAA,IACA,UAAAyI,EAAAoM,OAAA,GAAAnM,EAAAmM,OAAA,GAAAlM,EAAAkM,OAAA,IAaA1c,OAAAC,eAAAmG,EAAA,cACArG,OAAA,IAjkD8DgL,CAAA3E,qCCL9D,IAAA9E,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAA46E,EAAAx7E,EAAA,KAAAy7E,EAAAz7E,EAAA,IAAA07E,EAAA17E,EAAA,KAUAe,EAAA,CACA46E,MAASh7E,EAAAM,EAASQ,KAClB0C,MAASxD,EAAAM,EAASG,OAClBJ,SAAYL,EAAAM,EAASC,KACrBiB,UAAaxB,EAAAM,EAASG,OACtBgB,UAAazB,EAAAM,EAASa,OACtBsC,SAAYzD,EAAAM,EAASQ,KACrB6C,QAAW3D,EAAAM,EAASc,KACpB65E,gBAAmBj7E,EAAAM,EAASQ,KAC5B+G,MAAS7H,EAAAM,EAASQ,KAClBE,IAAO85E,EAAA,EACPI,IAAOl7E,EAAAM,EAASQ,MAMhBq6E,EAAA,CACAC,OAAUp7E,EAAAM,EAASQ,KAAAu6E,WACnBC,OAAUt7E,EAAAM,EAASc,KAAAi6E,WACnBE,SAAYv7E,EAAAM,EAASQ,KAAAu6E,YAGrBG,EAEA,SAAA75E,GAGA,SAAA65E,EAAA55E,GACA,IAAAC,EAIA,OAFAA,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,MACA4B,QAAA9B,EAAA8B,QAAA1B,KAAuC/D,OAAAyB,EAAA,EAAAzB,CAAuBA,OAAAyB,EAAA,EAAAzB,CAAsB2D,KACpFA,EAPE3D,OAAAwB,EAAA,EAAAxB,CAAcs9E,EAAA75E,GAUhB,IAAAQ,EAAAq5E,EAAAp5E,UAsEA,OApEAD,EAAAwB,QAAA,SAAAG,GACA/B,KAAAH,MAAA6B,SACAK,EAAAC,kBAIAhC,KAAAH,MAAAs5E,MAAAn5E,KAAAH,MAAAZ,KACA8C,EAAAC,iBAGAhC,KAAAH,MAAA+B,SACA5B,KAAAH,MAAA+B,QAAAG,GAGA/B,KAAA+pB,QAAAwvD,OAAAx3E,KAGA3B,EAAAG,OAAA,WACA,IAmBAQ,EAnBAP,EAAAR,KAAAH,MACAJ,EAAAe,EAAAf,UACAgC,EAAAjB,EAAAiB,MACA/B,EAAAc,EAAAd,UACAu5E,EAAAz4E,EAAAy4E,MACAnzE,EAAAtF,EAAAsF,MACAqzE,EAAA34E,EAAA24E,IACAl6E,EAAAuB,EAAAvB,IACAY,EAAgB1D,OAAAuB,EAAA,EAAAvB,CAA6BqE,EAAA,+DAE7CyB,EAAApC,EAAA,iCACAqB,EAAkB/E,OAAA48E,EAAA,EAAA58E,CAAgBgC,IAAUsB,EAAA,CAC5Ci6E,kBAAAT,GAAAnzE,EACA6zE,wBAAA7zE,EACA8zE,WAAAT,IACKz5E,GACLpB,EAAAuB,EAAAvB,UAAqCR,EAAAS,EAAK4C,cAAA,QAC1C1B,UAAA,WACKwC,GAcL,OAXAk3E,IAAAl6E,GACA8B,EAAA,IACAlB,EAAAuC,KAAA,KACKnD,EAKL8B,EAAA9B,GAJA8B,EAAYi4E,EAAA,EACZn5E,EAAA4B,QACA5B,EAAAH,aAKAM,KAAA+pB,QAAAyvD,SACa17E,EAAAS,EAAK4C,cAAAJ,EAAoB5E,OAAAsB,EAAA,EAAAtB,CAAQ,GAAG0D,EAAA,CACjDJ,UAAAyB,EACAU,QAAA5B,KAAA4B,QACAi4E,gBAAA75E,KAAA+pB,QAAAsvD,OACA/6E,cAIWR,EAAAS,EAAK4C,cAAe23E,EAAA,EAAQ38E,OAAAsB,EAAA,EAAAtB,CAAQ,GAAG0D,EAAA,CAClDJ,UAAAyB,EACA44E,UAAA/4E,EACAa,QAAA5B,KAAA4B,QACAi4E,gBAAA75E,KAAA+pB,QAAAsvD,OACA/6E,eAIAm7E,EAjFA,CAkFE37E,EAAAS,EAAK6C,WAEPq4E,EAAAp7E,YACAo7E,EAAAp4E,aAjGA,CACA63E,iBAAA,EACAz3E,MAAA,aAgGAg4E,EAAAL,eACe57E,EAAA,sCC1Hf,IAAAC,EAAAH,EAAA,IAAAy8E,EAAAz8E,EAAA,KAAA08E,EAAA18E,EAAA,KAAA28E,EAAA38E,EAAA,GAAA48E,EAAA58E,EAAAS,EAAAk8E,GAAAE,EAAA78E,EAAA,GAAA88E,EAAA98E,EAAAS,EAAAo8E,GAAAE,EAAA/8E,EAAA,KAAAg9E,EAAAh9E,EAAAS,EAAAs8E,GAAAE,EAAAj9E,EAAA,KAAAc,EAAAd,EAAA,IAQAe,EAAA,CACAY,IAAOb,EAAA,EACPE,SAAY87E,EAAA77E,EAASC,KAAA86E,WACrBzzD,MAASu0D,EAAA77E,EAASQ,KAClByoB,KAAQ4yD,EAAA77E,EAASQ,KACjBy7E,UAAaJ,EAAA77E,EAASa,OACtBK,UAAa26E,EAAA77E,EAASG,OACtBgB,UAAa06E,EAAA77E,EAASa,OACtBq7E,QAAWL,EAAA77E,EAASQ,MAMpBq6E,EAAA,CACAC,OAAUe,EAAA77E,EAASQ,KAAAu6E,WACnBoB,UAAaN,EAAA77E,EAASo8E,MAAA,8BAAArB,WACtBE,SAAYY,EAAA77E,EAASQ,KAAAu6E,YAErBsB,EAAA,CACApzD,KAAA,CACA4oB,SAAA,IAGAyqC,EAAA,CACAC,GAAA,MACA/zE,KAAA,OACA8e,MAAA,QACAk1D,KAAA,UAGAC,EAAA,SAAAn7E,EAAAkqB,GACA,IAAAtqB,EAAAI,EAAAJ,UACAC,EAAAG,EAAAH,UACAmmB,EAAAhmB,EAAAgmB,MACA5mB,EAAAY,EAAAZ,IACAuoB,EAAA3nB,EAAA2nB,KACAgzD,EAAA36E,EAAA26E,UACAC,EAAA56E,EAAA46E,QACAQ,EAAc9+E,OAAA69E,EAAA,EAAA79E,CAA6B0D,EAAA,sEAE3CqB,EAAgB/E,OAAAiC,EAAA,EAAAjC,CAAgBm+E,IAAU76E,EAAA,iBAC1Cy7E,sBAAAr1D,EACAs1D,KAAApxD,EAAAsvD,SACG35E,GACHqB,EAAA9B,EAEA,GAAAw7E,GAAA1wD,EAAAsvD,SAAAtvD,EAAAyvD,SAAA,CACAz4E,EAAUw5E,EAAA,EACV,IAAAa,EAAAP,EAAA9wD,EAAA2wD,YAAA,SACAW,EAAAx1D,EAAA,cACAo1D,EAAAK,UAAAF,EAAA,IAAAC,EACAJ,EAAAnB,UAAA76E,EACAg8E,EAAAT,UAAAhzD,EAA8CgzD,EAAhBr+E,OAAA49E,EAAA,EAAA59E,CAAa,GAAGq+E,EAAAI,GAG9C,OAASV,EAAA37E,EAAK4C,cAAAJ,EAAoB5E,OAAAsB,EAAA,EAAAtB,CAAQ,CAC1Co/E,SAAA,KACAjzE,KAAA,QACG2yE,EAAA,CACH/4E,eAAA6nB,EAAAsvD,OACA55E,UAAAyB,EACAs6E,cAAAP,EAAAK,cAIAN,EAAA38E,YACA28E,EAAA35E,aAzDA,CACApC,IAAA,MACAuoB,MAAA,GAwDAwzD,EAAA5B,eACe57E,EAAA,sCC7Ef,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAE,EAAAd,EAAA,IAQAe,EAAA,CACAC,SAAYL,EAAAM,EAASC,KACrB8C,OAAUrD,EAAAM,EAASQ,KACnB2C,SAAYzD,EAAAM,EAASQ,KACrB08E,QAAWx9E,EAAAM,EAASQ,KACpBE,IAAOb,EAAA,EACPs9E,OAAUz9E,EAAAM,EAASQ,KACnB6C,QAAW3D,EAAAM,EAASc,KACpBI,UAAaxB,EAAAM,EAASG,OACtBgB,UAAazB,EAAAM,EAASa,OACtBm6E,OAAUt7E,EAAAM,EAASQ,MAEnBq6E,EAAA,CACAG,OAAUt7E,EAAAM,EAASc,MAOnBs8E,EAEA,SAAA/7E,GAGA,SAAA+7E,EAAA97E,GACA,IAAAC,EAKA,OAHAA,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,MACA4B,QAAA9B,EAAA8B,QAAA1B,KAAuC/D,OAAAyB,EAAA,EAAAzB,CAAuBA,OAAAyB,EAAA,EAAAzB,CAAsB2D,KACpFA,EAAA87E,YAAA97E,EAAA87E,YAAA17E,KAA+C/D,OAAAyB,EAAA,EAAAzB,CAAuBA,OAAAyB,EAAA,EAAAzB,CAAsB2D,KAC5FA,EARE3D,OAAAwB,EAAA,EAAAxB,CAAcw/E,EAAA/7E,GAWhB,IAAAQ,EAAAu7E,EAAAt7E,UAkEA,OAhEAD,EAAAwB,QAAA,SAAAG,GACA/B,KAAAH,MAAA6B,UAAA1B,KAAAH,MAAA67E,QAAA17E,KAAAH,MAAA47E,QACA15E,EAAAC,kBAIAhC,KAAAH,MAAA+B,SACA5B,KAAAH,MAAA+B,QAAAG,GAGA/B,KAAAH,MAAA05E,QACAv5E,KAAA+pB,QAAAwvD,OAAAx3E,KAIA3B,EAAAw7E,YAAA,WACA,OAAA57E,KAAAH,MAAA6B,UAAA1B,KAAAH,MAAA67E,QAAA17E,KAAAH,MAAA47E,QACA,KAGA,KAGAr7E,EAAAG,OAAA,WACA,IAAAg7E,EAAAv7E,KAAA47E,cACAtzE,EAAAizE,GAAA,kBAAAj5E,EAEAu5E,EAAgB1/E,OAAAiC,EAAA,EAAAjC,CAAI6D,KAAAH,MAAA,YACpBJ,EAAAo8E,EAAAp8E,UACAC,EAAAm8E,EAAAn8E,UACA+7E,EAAAI,EAAAJ,QACA16E,EAAA86E,EAAA58E,IACAy8E,EAAAG,EAAAH,OACAp6E,EAAAu6E,EAAAv6E,OACAzB,EAAgB1D,OAAAuB,EAAA,EAAAvB,CAA6B0/E,EAAA,6DAE7C36E,EAAkB/E,OAAAiC,EAAA,EAAAjC,CAAgBgC,IAAUsB,EAAA,CAC5CiC,SAAA7B,EAAA6B,SACAo6E,iBAAAL,IAAAC,EACAp6E,SACAy6E,kBAAAL,EACAM,mBAAAP,IACK/7E,GAYL,MAVA,WAAAqB,IACA26E,EACA36E,EAAA,KACO06E,EACP16E,EAAA,MACOlB,EAAAuC,OACPrB,EAAA,MAIWjD,EAAAS,EAAK4C,cAAAJ,EAAoB5E,OAAAsB,EAAA,EAAAtB,CAAQ,CAC5CsC,KAAA,WAAAsC,IAAAlB,EAAA+B,SAAA5B,KAAAH,MAAA05E,QAAA,cAAAj3E,GACKzC,EAAA,CACL07E,WACAjzE,OACA7I,UAAAyB,EACAU,QAAA5B,KAAA4B,YAIA+5E,EA9EA,CA+EE79E,EAAAS,EAAK6C,WAEPu6E,EAAAt9E,YACAs9E,EAAAt6E,aAzFA,CACApC,IAAA,SACAs6E,QAAA,GAwFAoC,EAAAvC,eACe57E,EAAA,sCC5Gf,IAAAy+E,EAAA,CACAC,mBAAA,EACA9C,cAAA,EACA/3E,cAAA,EACA86E,aAAA,EACAC,iBAAA,EACAC,0BAAA,EACAC,QAAA,EACAj+E,WAAA,EACAI,MAAA,GAEA89E,EAAA,CACA7gE,MAAA,EACA9e,QAAA,EACAyD,WAAA,EACAm8E,QAAA,EACA/K,QAAA,EACA90E,WAAA,EACA8/E,OAAA,GAEArgF,EAAAD,OAAAC,eACAsgF,EAAAvgF,OAAAugF,oBACA1/E,EAAAb,OAAAa,sBACAI,EAAAjB,OAAAiB,yBACA6uE,EAAA9vE,OAAA8vE,eACA0Q,EAAA1Q,KAAA9vE,QAsCA6M,EAAAzG,QApCA,SAAAq6E,EAAAC,EAAAC,EAAAC,GACA,qBAAAD,EAAA,CAEA,GAAAH,EAAA,CACA,IAAAK,EAAA/Q,EAAA6Q,GAEAE,OAAAL,GACAC,EAAAC,EAAAG,EAAAD,GAIA,IAAAhgF,EAAA2/E,EAAAI,GAEA9/E,IACAD,IAAAE,OAAAD,EAAA8/E,KAGA,QAAApgF,EAAA,EAAmBA,EAAAK,EAAAH,SAAiBF,EAAA,CACpC,IAAAT,EAAAc,EAAAL,GAEA,IAAAu/E,EAAAhgF,KAAAsgF,EAAAtgF,MAAA8gF,MAAA9gF,IAAA,CACA,IAAAkzC,EAAA/xC,EAAA0/E,EAAA7gF,GAEA,IAEAG,EAAAygF,EAAA5gF,EAAAkzC,GACS,MAAAptC,MAIT,OAAA86E,EAGA,OAAAA,sCClEA,SAAAI,GAAA3/E,EAAAC,EAAAC,EAAA,sBAAAu6B,IAAA,IAAAmlD,EAAA5/E,EAAA,GAAA6/E,EAAA7/E,EAAAS,EAAAm/E,GAAAE,EAAA9/E,EAAA,GAAA+/E,EAAA//E,EAAAS,EAAAq/E,GAAAE,EAAAhgF,EAAA,KAAAigF,EAAAjgF,EAAAS,EAAAu/E,GAAAE,EAAAlgF,EAAA,KAAAmgF,EAAAngF,EAAAS,EAAAy/E,GAAAE,EAAApgF,EAAA,KAAAqgF,EAAArgF,EAAAS,EAAA2/E,GAAAE,EAAAzhF,OAAAm0E,QAAA,SAAA7zE,GACA,QAAAC,EAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,IAAAG,EAAAF,UAAAD,GAEA,QAAAT,KAAAY,EACAV,OAAAkE,UAAA6I,eAAAnJ,KAAAlD,EAAAZ,KACAQ,EAAAR,GAAAY,EAAAZ,IAKA,OAAAQ,GAGA,SAAAohF,EAAA7hF,EAAAe,GACA,IAAAN,EAAA,GAEA,QAAAC,KAAAV,EACAe,EAAA6D,QAAAlE,IAAA,GACAP,OAAAkE,UAAA6I,eAAAnJ,KAAA/D,EAAAU,KACAD,EAAAC,GAAAV,EAAAU,IAGA,OAAAD,EAGA,SAAAqhF,EAAAC,EAAApS,GACA,KAAAoS,aAAApS,GACA,UAAA3F,UAAA,qCAIA,SAAAgY,EAAA/Y,EAAAllE,GACA,IAAAklE,EACA,UAAAgZ,eAAA,6DAGA,OAAAl+E,GAAA,kBAAAA,GAAA,oBAAAA,EAAAklE,EAAAllE,EAGA,SAAAm+E,EAAAC,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAApY,UAAA,kEAAAoY,GAGAD,EAAA99E,UAAAlE,OAAAivE,OAAAgT,KAAA/9E,UAAA,CACA+hB,YAAA,CACAlmB,MAAAiiF,EACA9hF,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA8hF,IAAAjiF,OAAAkiF,eAAAliF,OAAAkiF,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAQA,IAAAG,EAAA,qBAAAtB,GAAiD9gF,OAAA,CAAAoiF,SAAA,aAAAC,WAAA,OAAe,aAEhEC,EAAA,SAAA7+E,GAGA,SAAA6+E,IACA,IAAAC,EAAA5+E,EAEAg+E,EAAA99E,KAAAy+E,GAEA,QAAAE,EAAAhiF,UAAAC,OAAAgN,EAAAgP,MAAA+lE,GAAAC,EAAA,EAAmEA,EAAAD,EAAaC,IAChFh1E,EAAAg1E,GAAAjiF,UAAAiiF,GAGA,OAAAF,EAAA5+E,EAAAk+E,EAAAh+E,KAAAJ,EAAAG,KAAAmgB,MAAAtgB,EAAA,CAAAI,MAAA/C,OAAA2M,KAAA9J,EAAA++E,cAAA,SAAA3wC,GACA,IAAA6vC,EAAAj+E,EAAAg/E,cACAt+E,EAAAV,EAAAD,MACAo9C,EAAAz8C,EAAAy8C,kBACAH,EAAAt8C,EAAAs8C,kBACAC,EAAAv8C,EAAAu8C,mBACAgiC,EAAAv+E,EAAAu+E,gBACA9hC,KAAA8gC,EAAA9gC,kBAAA/O,MACA4O,KAAAihC,EAAAjhC,kBAAA5O,MACA6O,KAAAghC,EAAAhhC,mBAAA7O,MACA6wC,KAAAhB,EAAAhhC,mBAAA7O,OACKpuC,EAAAQ,IAAA,SAAAyvB,GACLjwB,EAAAiwB,WACKiuD,EAAAl+E,EAAA4+E,GA+NL,OAvPAR,EAAAO,EAAA7+E,GA2BA6+E,EAAAp+E,UAAA2+E,mBAAA,WACAh/E,KAAA8+E,mBAAAx8E,GAGAm8E,EAAAp+E,UAAA4+E,kBAAA,WACAj/E,KAAAk/E,eAGAT,EAAAp+E,UAAA8+E,mBAAA,WACA,GAAAn/E,KAAAH,MAAAu/E,OAGA,OAFAp/E,KAAAq/E,oBACAr/E,KAAAk/E,cAIAl/E,KAAAs/E,eAGAb,EAAAp+E,UAAAk/E,sBAAA,SAAAC,GACA,IAAAC,EAAAz/E,KAAAH,MAEApB,GADAghF,EAAAL,OACAK,EAAAhhF,MACA6iB,EAAAm+D,EAAAn+D,QACAktB,EAAAixC,EAAAjxC,QACAlR,EAAAmiD,EAAAniD,OACA5X,EAAA+5D,EAAA/5D,OACA5e,EAAA24E,EAAA34E,MAEA,QAAA04E,EAAAJ,OACA,SAGA,GAAA15D,IAAA85D,EAAA95D,QAAA5e,IAAA04E,EAAA14E,MACA,SAGA,GAAArI,IAAA+gF,EAAA/gF,KACA,SAGA,IAASg/E,IAAOngD,EAAAkiD,EAAAliD,QAChB,SAGA,IAASmgD,IAAOn8D,EAAAk+D,EAAAl+D,SAChB,SAGA,IAAAo+D,EAAA1/E,KAAA2/E,kBAAAH,GAEA,OAAS/B,IAAOz9E,KAAA4/E,eAAAF,KAIJjC,IAAOjvC,EAAAgxC,EAAAhxC,UAGnBiwC,EAAAp+E,UAAAw/E,qBAAA,WACA7/E,KAAAq/E,gBAGAZ,EAAAp+E,UAAAs/E,kBAAA,SAAA9/E,GACA,IAAA+uB,EAAA/uB,EAAA+uB,KAEA,yBAAAA,EAEAA,EADA5uB,KAAA+vB,SAGAnB,GAQA6vD,EAAAp+E,UAAAy/E,iBAAA,WACA,GAAA9/E,KAAAH,MAAA+uB,KAAA,CAIA,IAAAA,EAAA5uB,KAAA2/E,kBAAA3/E,KAAAH,OAQA,OAPAG,KAAA4/E,eAAAhC,EAAA,GAAqChvD,EAAA,CACrCC,SAAAD,EAAAC,UAAAD,EAAAC,SAAAxpB,IAAA,SAAA0mB,GACA,OAAA6xD,EAAA,GAA0B7xD,OAG1B/rB,KAAA+/E,sBAEAnxD,IAGA6vD,EAAAp+E,UAAA2/E,cAAA,SAAAnxD,GACA,IAAAoxD,EAAA,eAAA1B,GAAA,SAAAA,EACA2B,EAAAlgF,KAAAH,MAAAsgF,qBAAA1B,EAAA2B,cACAC,EAAAxxD,EAAAjyB,OAAA,EAEA,GAAAqjF,GAAAI,IAAAH,EAAA,CACA,IAAAI,GAAA,EACAzxD,EAAAxxB,QAAA,SAAAgxB,GACAA,EAAA6K,QACAonD,GAAA,KAIAA,GACA1hE,QAAAC,MAAA,sNAKA4/D,EAAAp+E,UAAAkgF,mBAAA,WACA,OAAAvgF,KAAA8+E,eAAA9+E,KAAA8+E,cAAAzxC,OAAAze,MAAA5uB,KAAA8+E,cAAAzxC,OAAAze,KAAAC,UAAA,IAGA4vD,EAAAp+E,UAAA0/E,oBAAA,WACA,IAAAS,EAAAxgF,KAEAA,KAAA6uB,SAAA7uB,KAAA6uB,UAAA,GACA7uB,KAAAugF,qBACAljF,QAAA,SAAAE,GACAijF,EAAA3xD,SAAA2xD,EAAA3gF,MAAAsgF,mBAAA5iF,SAIAkhF,EAAAp+E,UAAAi/E,YAAA,WACA,IAAAmB,EAAAzgF,KAEAshB,EAAAthB,KAAAH,MAAAyhB,QACAsN,EAAA5uB,KAAA8/E,iBAAA9/E,KAAAH,OACA,GAAAG,KAAA8+E,cAAA,CAEAx9D,IACAthB,KAAA8+E,cAAAx9D,QAAmCi8D,EAAAh/E,EAAKihB,QAAA0+B,YAAAl+C,KAAA8+E,cAAAx9D,YAKxC,IAAAo/D,EAAA1gF,KAAAugF,qBACAI,EAAA/xD,EAAAC,UAAA,GACA7uB,KAAAggF,cAAAU,GACA,IAAAE,EAAiCjD,IAAK+C,EAAA1gF,KAAAH,MAAAsgF,oBAGtCngF,KAAA8+E,cAAAzxC,OAAAze,KAAAC,SAAA8xD,EAAAt7E,IAAA,SAAAk2B,GACA,IAAA/G,EAAAosD,EAAAH,EAAA5gF,MAAAsgF,mBAAA5kD,IAEA,GAAA/G,KAAA/1B,OAAA88B,EAAA98B,KAAA,CAEA+1B,EAAA5F,KAAA3B,OAAAsO,EAAA3M,KAAAhyB,QACA2+B,EAAA3M,KAAAvxB,QAAA,SAAA2pB,EAAA65D,GACArsD,EAAA5F,KAAAiyD,GAAAtlD,EAAA3M,KAAAiyD,KAGAtlD,EAAA3M,KAAA,IACAkyD,EAAAjD,EAAAtiD,EAAA,UAKA,OAAAqiD,EAAA,GAA0BppD,EAAAssD,GAE1B,OAAAvlD,IAIA3M,EAAAC,SAAA,IACAkyD,EAAAlD,EAAAjvD,EAAA,cAEA5uB,KAAA8+E,cAAAzxC,OAAAze,KAAAgvD,EAAA,GAAgD59E,KAAA8+E,cAAAzxC,OAAAze,KAAAmyD,GAChD/gF,KAAA8+E,cAAAxvD,WAGAmvD,EAAAp+E,UAAA6+E,YAAA,WACA,IAAA8B,EAAAhhF,KAAAH,MACAyhB,EAAA0/D,EAAA1/D,QACAgc,EAAA0jD,EAAA1jD,OACA7+B,EAAAuiF,EAAAviF,KACA+vC,EAAAwyC,EAAAxyC,QACAhwC,EAAAwB,KAAA+vB,QACAnB,EAAA5uB,KAAA8/E,mBAEA,qBAAAxiD,GAA0CmgD,IAAOgB,EAAAp9E,aAAAi8B,YACjDhc,EAAAgc,UAGAt9B,KAAA8+E,cAAA,IAA6BvB,EAAAh/E,EAAKC,EAAA,CAClCC,OACAmwB,OACAtN,UACAktB,aAIAiwC,EAAAp+E,UAAAg/E,aAAA,WAMAr/E,KAAA+/E,sBACA,IAAAlxD,EAAA1yB,OAAAmd,OAAAtZ,KAAA6uB,UACA7uB,KAAA8+E,cAAAzxC,OAAAze,KAAAC,WACA7uB,KAAA8+E,cAAAvvD,WAGAkvD,EAAAp+E,UAAAE,OAAA,WACA,IAAA0gF,EAAAjhF,KAAAH,MACA6lB,EAAAu7D,EAAAv7D,OACA5e,EAAAm6E,EAAAn6E,MACAlD,EAAAq9E,EAAAr9E,GACA,OAAWu5E,EAAA5+E,EAAK4C,cAAA,UAChBb,IAAAN,KAAAM,IACAolB,SACA5e,QACAlD,KACAhC,QAAA5B,KAAA6+E,iBAIAJ,EAxPA,CAyPEtB,EAAA5+E,EAAK6C,WAEPq9E,EAAA2B,cAAA,SAAA7iF,GACA,OAAAA,EAAA27B,OAGAulD,EAAApgF,UAAA,CACAuwB,KAAQyuD,EAAA9+E,EAASY,UAAA,CAAYk+E,EAAA9+E,EAASa,OAASi+E,EAAA9+E,EAASc,OAAAi6E,WACxDr8B,kBAAqBogC,EAAA9+E,EAASc,KAC9By9C,kBAAqBugC,EAAA9+E,EAASc,KAC9B09C,mBAAsBsgC,EAAA9+E,EAASc,KAC/BqmB,OAAU23D,EAAA9+E,EAAS2iF,OACnB5jD,OAAU+/C,EAAA9+E,EAASa,OACnB2/E,gBAAmB1B,EAAA9+E,EAASc,KAC5BiiB,QAAW+7D,EAAA9+E,EAASa,OACpBovC,QAAW6uC,EAAA9+E,EAAS4iF,QAAS9D,EAAA9+E,EAASa,QACtCggF,OAAU/B,EAAA9+E,EAASQ,KACnBN,KAAA,SAAAoB,EAAAuhF,EAAAC,GACA,IAAS9D,EAAAh/E,EAAKilC,YAAA3jC,EAAAuhF,IACd,WAAAtlC,MAAA,uBAAAj8C,EAAAuhF,GAAA,kBAAAC,EAAA,OAGAv6E,MAASu2E,EAAA9+E,EAAS2iF,OAClBf,mBAAsB9C,EAAA9+E,EAASc,MAE/Bo/E,EAAAp9E,aAAA,CACAi8B,OAAA,CACAyE,SAAA,EACA57B,SAAA,UAEA1H,KAAA,WACAinB,OAAA,IACA5e,MAAA,IACAs4E,QAAA,EACA99D,QAAA,GACA6+D,mBAAA1B,EAAA2B,gBAGO,SAAAkB,GAGP,SAAAC,IAGA,OAFAzD,EAAA99E,KAAAuhF,GAEAvD,EAAAh+E,KAAAshF,EAAAphE,MAAAlgB,KAAArD,YALAuhF,EAAAqD,EAAAD,GAQAC,EAAAlhF,UAAAE,OAAA,WACA,IAAAihF,EAAAxhF,KAEA,OAAWm9E,EAAA5+E,EAAK4C,cAAAs9E,EAAAb,EAAA,GAA0C59E,KAAAH,MAAA,CAC1DS,IAAA,SAAAmhF,GACA,OAAAD,EAAA1C,cAAA2C,KAAA3C,eAEArgF,KAAA,gBAhBO,CAqBL0+E,EAAA5+E,EAAK6C,WACA,SAAAsgF,GAGP,SAAAC,IAGA,OAFA7D,EAAA99E,KAAA2hF,GAEA3D,EAAAh+E,KAAA0hF,EAAAxhE,MAAAlgB,KAAArD,YALAuhF,EAAAyD,EAAAD,GAQAC,EAAAthF,UAAAE,OAAA,WACA,IAAAqhF,EAAA5hF,KAEA,OAAWm9E,EAAA5+E,EAAK4C,cAAAs9E,EAAAb,EAAA,GAA0C59E,KAAAH,MAAA,CAC1DS,IAAA,SAAAuhF,GACA,OAAAD,EAAA9C,cAAA+C,KAAA/C,eAEArgF,KAAA,UAhBO,CAqBL0+E,EAAA5+E,EAAK6C,WA5CQ,IA6CR22B,EAAA,SAAA+pD,GAGP,SAAA/pD,IAGA,OAFA+lD,EAAA99E,KAAA+3B,GAEAimD,EAAAh+E,KAAA8hF,EAAA5hE,MAAAlgB,KAAArD,YAcA,OAnBAuhF,EAAAnmD,EAAA+pD,GAQA/pD,EAAA13B,UAAAE,OAAA,WACA,IAAAwhF,EAAA/hF,KAEA,OAAWm9E,EAAA5+E,EAAK4C,cAAAs9E,EAAAb,EAAA,GAA0C59E,KAAAH,MAAA,CAC1DS,IAAA,SAAA0hF,GACA,OAAAD,EAAAjD,cAAAkD,KAAAlD,eAEArgF,KAAA,WAIAs5B,EApBO,CAqBLolD,EAAA5+E,EAAK6C,YACA,SAAA6gF,GAGP,SAAAC,IAGA,OAFApE,EAAA99E,KAAAkiF,GAEAlE,EAAAh+E,KAAAiiF,EAAA/hE,MAAAlgB,KAAArD,YALAuhF,EAAAgE,EAAAD,GAQAC,EAAA7hF,UAAAE,OAAA,WACA,IAAA4hF,EAAAniF,KAEA,OAAWm9E,EAAA5+E,EAAK4C,cAAAs9E,EAAAb,EAAA,GAA0C59E,KAAAH,MAAA,CAC1DS,IAAA,SAAA8hF,GACA,OAAAD,EAAArD,cAAAsD,KAAAtD,eAEArgF,KAAA,WAhBO,CAqBL0+E,EAAA5+E,EAAK6C,WACA,SAAAihF,GAGP,SAAAC,IAGA,OAFAxE,EAAA99E,KAAAsiF,GAEAtE,EAAAh+E,KAAAqiF,EAAAniE,MAAAlgB,KAAArD,YALAuhF,EAAAoE,EAAAD,GAQAC,EAAAjiF,UAAAE,OAAA,WACA,IAAAgiF,EAAAviF,KAEA,OAAWm9E,EAAA5+E,EAAK4C,cAAAs9E,EAAAb,EAAA,GAA0C59E,KAAAH,MAAA,CAC1DS,IAAA,SAAAkiF,GACA,OAAAD,EAAAzD,cAAA0D,KAAA1D,eAEArgF,KAAA,oBAhBO,CAqBL0+E,EAAA5+E,EAAK6C,WACA,SAAAqhF,GAGP,SAAAC,IAGA,OAFA5E,EAAA99E,KAAA0iF,GAEA1E,EAAAh+E,KAAAyiF,EAAAviE,MAAAlgB,KAAArD,YALAuhF,EAAAwE,EAAAD,GAQAC,EAAAriF,UAAAE,OAAA,WACA,IAAAoiF,EAAA3iF,KAEA,OAAWm9E,EAAA5+E,EAAK4C,cAAAs9E,EAAAb,EAAA,GAA0C59E,KAAAH,MAAA,CAC1DS,IAAA,SAAAsiF,GACA,OAAAD,EAAA7D,cAAA8D,KAAA9D,eAEArgF,KAAA,YAhBO,CAqBL0+E,EAAA5+E,EAAK6C,WACA,SAAAyhF,GAGP,SAAAC,IAGA,OAFAhF,EAAA99E,KAAA8iF,GAEA9E,EAAAh+E,KAAA6iF,EAAA3iE,MAAAlgB,KAAArD,YALAuhF,EAAA4E,EAAAD,GAQAC,EAAAziF,UAAAE,OAAA,WACA,IAAAwiF,EAAA/iF,KAEA,OAAWm9E,EAAA5+E,EAAK4C,cAAAs9E,EAAAb,EAAA,GAA0C59E,KAAAH,MAAA,CAC1DS,IAAA,SAAA0iF,GACA,OAAAD,EAAAjE,cAAAkE,KAAAlE,eAEArgF,KAAA,gBAhBO,CAqBL0+E,EAAA5+E,EAAK6C,WACA,SAAA6hF,GAGP,SAAAC,IAGA,OAFApF,EAAA99E,KAAAkjF,GAEAlF,EAAAh+E,KAAAijF,EAAA/iE,MAAAlgB,KAAArD,YALAuhF,EAAAgF,EAAAD,GAQAC,EAAA7iF,UAAAE,OAAA,WACA,IAAA4iF,EAAAnjF,KAEA,OAAWm9E,EAAA5+E,EAAK4C,cAAAs9E,EAAAb,EAAA,GAA0C59E,KAAAH,MAAA,CAC1DS,IAAA,SAAA8iF,GACA,OAAAD,EAAArE,cAAAsE,KAAAtE,eAEArgF,KAAA,aAhBO,CAqBL0+E,EAAA5+E,EAAK6C,WACA,SAAAiiF,GAGP,SAAAC,IAGA,OAFAxF,EAAA99E,KAAAsjF,GAEAtF,EAAAh+E,KAAAqjF,EAAAnjE,MAAAlgB,KAAArD,YALAuhF,EAAAoF,EAAAD,GAQAC,EAAAjjF,UAAAE,OAAA,WACA,IAAAgjF,EAAAvjF,KAEA,OAAWm9E,EAAA5+E,EAAK4C,cAAAs9E,EAAAb,EAAA,GAA0C59E,KAAAH,MAAA,CAC1DS,IAAA,SAAAkjF,GACA,OAAAD,EAAAzE,cAAA0E,KAAA1E,eAEArgF,KAAA,cAhBO,CAqBL0+E,EAAA5+E,EAAK6C,WACem8E,EAAAh/E,EAAK6pB,kDCpiB3B,IAAAq7D,EAAkBnmF,EAAQ,KAmC1B0L,EAAAzG,QAJA,SAAArG,EAAAwnF,GACA,OAAAD,EAAAvnF,EAAAwnF,yBChCA,IAAAC,EAAsBrmF,EAAQ,KAgC9BsmF,EA/BuBtmF,EAAQ,IA+B/BumF,CAAA,SAAAnlE,EAAAxiB,EAAAD,GACA0nF,EAAAjlE,EAAAziB,EAAAC,KAEA8M,EAAAzG,QAAAqhF,uBCnCA,IAAAE,EAAsBxmF,EAAQ,KAC9BymF,EAAqBzmF,EAAQ,KAC7B0mF,EAAmB1mF,EAAQ,KAC3BsiB,EAActiB,EAAQ,KAmBtB0L,EAAAzG,QARA,SAAA0hF,EAAAC,GACA,gBAAA7lB,EAAA8lB,GACA,IAAA9kF,EAAAugB,EAAAy+C,GAAAylB,EAAAC,EACAK,EAAAF,MAAA,GACA,OAAA7kF,EAAAg/D,EAAA4lB,EAAAD,EAAAG,EAAA,GAAAC,wBCIAp7E,EAAAzG,QAZA,SAAAkgB,EAAAwhE,EAAAE,EAAAC,GAIA,IAHA,IAAAhlE,GAAA,EACAxiB,EAAA,MAAA6lB,EAAA,EAAAA,EAAA7lB,SAEAwiB,EAAAxiB,GAAA,CACA,IAAAV,EAAAumB,EAAArD,GACA6kE,EAAAG,EAAAloF,EAAAioF,EAAAjoF,GAAAumB,GAGA,OAAA2hE,wBCnBA,IAAAC,EAAe/mF,EAAQ,KAqBvB0L,EAAAzG,QAPA,SAAA87D,EAAA4lB,EAAAE,EAAAC,GAIA,OAHAC,EAAAhmB,EAAA,SAAAniE,EAAAD,EAAAoiE,GACA4lB,EAAAG,EAAAloF,EAAAioF,EAAAjoF,GAAAmiE,KAEA+lB,sBCRA,IAAAE,EAAA,IAGAC,EAAA,kBAGAC,EAAA,aAGAC,EAAA,qBAGAC,EAAA,aAGAC,EAAA,cAGAC,EAAAzpE,SAUA0pE,EAPA1oF,OAAAkE,UAOA2D,SA2BA,SAAA8b,EAAA5jB,GACA,IAAAuC,SAAAvC,EACA,QAAAA,IAAA,UAAAuC,GAAA,YAAAA,GAqGAuK,EAAAzG,QAvBA,SAAArG,GACA,oBAAAA,EACA,OAAAA,EAGA,GAjCA,SAAAA,GACA,uBAAAA,GAvBA,SAAAA,GACA,QAAAA,GAAA,iBAAAA,EAsBA4oF,CAAA5oF,IAAA2oF,EAAA9kF,KAAA7D,IAAAqoF,EAgCAQ,CAAA7oF,GACA,OAAAooF,EAGA,GAAAxkE,EAAA5jB,GAAA,CACA,IAAAwnF,EAAA,mBAAAxnF,EAAAw7D,QAAAx7D,EAAAw7D,UAAAx7D,EACAA,EAAA4jB,EAAA4jE,KAAA,GAAAA,EAGA,oBAAAxnF,EACA,WAAAA,OAGAA,IAAA+1E,QAAAuS,EAAA,IACA,IAAAQ,EAAAN,EAAAzjF,KAAA/E,GACA,OAAA8oF,GAAAL,EAAA1jF,KAAA/E,GAAA0oF,EAAA1oF,EAAA2c,MAAA,GAAAmsE,EAAA,KAAAP,EAAAxjF,KAAA/E,GAAAooF,GAAApoF,qCCrKA,IAAAuB,EAAAH,EAAA,IAAA2nF,EAAA3nF,EAAA,GAAA4nF,EAAA5nF,EAAAS,EAAAknF,GAAAE,EAAA7nF,EAAA,GAAA8nF,EAAA9nF,EAAAS,EAAAonF,GAAAE,EAAA/nF,EAAA,KAIAe,EAAA,CACAC,SAAY8mF,EAAA7mF,EAASC,MAGrB8mF,EAAA,SAAAzlF,GACA,OAASqlF,EAAA3mF,EAAK4C,cAAekkF,EAAA,EAAUlpF,OAAAsB,EAAA,EAAAtB,CAAQ,CAC/CopF,OAAA,GACG1lF,KAGHylF,EAAAjnF,YACeb,EAAA,sCCff,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAA6J,EAAA7J,EAAA,GAAA8J,EAAA9J,EAAAS,EAAAoJ,GAAAE,EAAA/J,EAAA,GAAAgK,EAAAhK,EAAAS,EAAAsJ,GAAAE,EAAAjK,EAAA,KAAAkK,EAAAlK,EAAAS,EAAAwJ,GAAAi+E,EAAAloF,EAAA,KAAAmoF,EAAAnoF,EAAAS,EAAAynF,GAAAE,EAAApoF,EAAA,IAOAe,EAAA,CACAC,SAAYgJ,EAAA/I,EAASC,KACrBm6B,IAAOrxB,EAAA/I,EAASQ,KAChB4mF,MAASr+E,EAAA/I,EAASQ,KAClBE,IAAOymF,EAAA,EACPxpF,MAASoL,EAAA/I,EAASY,UAAA,CAAYmI,EAAA/I,EAASG,OAAS4I,EAAA/I,EAAS2iF,SACzDr0E,IAAOvF,EAAA/I,EAASY,UAAA,CAAYmI,EAAA/I,EAASG,OAAS4I,EAAA/I,EAAS2iF,SACvD0E,SAAYt+E,EAAA/I,EAASQ,KACrB6I,QAAWN,EAAA/I,EAASQ,KACpB0C,MAAS6F,EAAA/I,EAASG,OAClBe,UAAa6H,EAAA/I,EAASG,OACtBmnF,aAAgBv+E,EAAA/I,EAASG,OACzBgB,UAAa4H,EAAA/I,EAASa,QAQtB0mF,EAAA,SAAAjmF,GACA,IAAAvB,EAAAuB,EAAAvB,SACAmB,EAAAI,EAAAJ,UACAomF,EAAAhmF,EAAAgmF,aACAnmF,EAAAG,EAAAH,UACAxD,EAAA2D,EAAA3D,MACA2Q,EAAAhN,EAAAgN,IACA+4E,EAAA/lF,EAAA+lF,SACAh+E,EAAA/H,EAAA+H,QACAnG,EAAA5B,EAAA4B,MACAk3B,EAAA94B,EAAA84B,IACAgtD,EAAA9lF,EAAA8lF,MACA5kF,EAAAlB,EAAAZ,IACAyB,EAAmBvE,OAAAuB,EAAA,EAAAvB,CAA6B0D,EAAA,oHAEhD27B,EAAgBiqD,IAAQvpF,GAAUupF,IAAQ54E,GAAA,IAC1Ck5E,EAAwB5pF,OAAAupF,EAAA,EAAAvpF,CAAgBqL,IAAU/H,EAAA,YAAAC,GAClDsmF,EAA2B7pF,OAAAupF,EAAA,EAAAvpF,CAAgBqL,IAAU,eAAAmxB,GAAAl5B,GAAAomF,EAAAD,EAAA,6BAAAnkF,EAAA,MAAAA,EAAA,KAAAmG,GAAAg+E,EAAA,6BAAAlmF,GACrDumF,EAAAN,EAAArnF,EAAuC8I,EAAA7I,EAAK4C,cAAA,OAC5C1B,UAAAumF,EACApgF,MAAA,CACAkB,MAAA00B,EAAA,KAEAlzB,KAAA,cACA49E,gBAAAhqF,EACAiqF,gBAAA,IACAC,gBAAAv5E,EACAvO,aAGA,OAAAq6B,EACAstD,EAGS7+E,EAAA7I,EAAK4C,cAAAJ,EAAoB5E,OAAAsB,EAAA,EAAAtB,CAAQ,GAAGuE,EAAA,CAC7CjB,UAAAsmF,EACAznF,SAAA2nF,MAIAH,EAAAznF,YACAynF,EAAAzkF,aA/CA,CACApC,IAAA,MACA/C,MAAA,EACA2Q,IAAA,KA6CerP,EAAA,qGCrEfogF,EAAAzhF,OAAAm0E,QAAA,SAAA7zE,GACA,QAAAC,EAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,IAAAG,EAAAF,UAAAD,GAEA,QAAAT,KAAAY,EACAV,OAAAkE,UAAA6I,eAAAnJ,KAAAlD,EAAAZ,KACAQ,EAAAR,GAAAY,EAAAZ,IAKA,OAAAQ,GAuBA,IAsBe4pF,EAtBD,SAAAjlF,GACd,IAAAy1E,EAAA,SAAAh3E,GACA,IAAAymF,EAAAzmF,EAAAymF,oBACAC,EAvBA,SAAAvqF,EAAAe,GACA,IAAAN,EAAA,GAEA,QAAAC,KAAAV,EACAe,EAAA6D,QAAAlE,IAAA,GACAP,OAAAkE,UAAA6I,eAAAnJ,KAAA/D,EAAAU,KACAD,EAAAC,GAAAV,EAAAU,IAGA,OAAAD,EAcAohF,CAAAh+E,EAAA,yBAEA,OAAW2mF,EAAAjoF,EAAK4C,cAAeslF,EAAA,EAAK,CACpCnoF,SAAA,SAAAooF,GACA,OAAeF,EAAAjoF,EAAK4C,cAAAC,EAAAw8E,EAAA,GAAqC2I,EAAAG,EAAA,CACzDpmF,IAAAgmF,SAWA,OALAzP,EAAAsF,YAAA,eAAA/6E,EAAA+6E,aAAA/6E,EAAAsa,MAAA,IACAm7D,EAAA8P,iBAAAvlF,EACAy1E,EAAAx4E,UAAA,CACAioF,oBAAyBM,EAAAroF,EAASc,MAEzBwnF,IAAYhQ,EAAAz1E,ICnDN5D,EAAA","file":"static/js/35.d5d42022.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\n/* eslint react/prefer-stateless-function: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  bsSize: PropTypes.string,\n  state: deprecated(PropTypes.string, 'Please use the props \"valid\" and \"invalid\" to indicate the state.'),\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  static: deprecated(PropTypes.bool, 'Please use the prop \"plaintext\"'),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        state = _this$props.state,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        staticInput = _this$props.static,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"state\", \"valid\", \"invalid\", \"tag\", \"addon\", \"static\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext || staticInput) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (state && typeof valid === 'undefined' && typeof invalid === 'undefined') {\n      if (state === 'danger') {\n        invalid = true;\n      } else if (state === 'success') {\n        valid = true;\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || staticInput || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global['custom-tooltips'] = {}));\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.3.1): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var position = this._chart.canvas.getBoundingClientRect();\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft;\n    var positionLeft = positionX + tooltipModel.caretX;\n    var positionTop = positionY + tooltipModel.caretY; // eslint-disable-next-line\n\n    var halfWidth = tooltipModel.width / 2;\n\n    if (positionLeft + halfWidth > position.width) {\n      positionLeft -= halfWidth;\n    } else if (positionLeft < halfWidth) {\n      positionLeft += halfWidth;\n    } // Display, position, and set styles for font\n\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionLeft + \"px\";\n    tooltip.style.top = positionTop + \"px\";\n  }\n\n  var customTooltips = CustomTooltips; // TODO: camel-case\n\n  exports.CustomTooltips = CustomTooltips;\n  exports.customTooltips = customTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  inverse: deprecated(PropTypes.bool, 'Please use the prop \"dark\"'),\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      inverse = props.inverse,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"inverse\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark || inverse ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive;\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n  size: PropTypes.string,\n  vertical: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  role: 'group'\n};\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      vertical = props.vertical,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","/*!\n  * CoreUI Pro v2.1.8 (https://coreui.io/pro/)\n  * Copyright 2019 Łukasz Holeczek\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.utilities = {}));\n})(this, function (exports) {\n  'use strict';\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.8): classes.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var sidebarCssClasses = ['sidebar-show', 'sidebar-sm-show', 'sidebar-md-show', 'sidebar-lg-show', 'sidebar-xl-show'];\n  var asideMenuCssClasses = ['aside-menu-show', 'aside-menu-sm-show', 'aside-menu-md-show', 'aside-menu-lg-show', 'aside-menu-xl-show'];\n  var validBreakpoints = ['sm', 'md', 'lg', 'xl'];\n\n  function checkBreakpoint(breakpoint, list) {\n    return list.indexOf(breakpoint) > -1;\n  }\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var _core = createCommonjsModule(function (module) {\n    var core = module.exports = {\n      version: '2.6.2'\n    };\n    if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n  });\n\n  var _core_1 = _core.version;\n\n  var _global = createCommonjsModule(function (module) {\n    // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n    var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func\n    : Function('return this')();\n    if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n  });\n\n  var _library = false;\n\n  var _shared = createCommonjsModule(function (module) {\n    var SHARED = '__core-js_shared__';\n    var store = _global[SHARED] || (_global[SHARED] = {});\n    (module.exports = function (key, value) {\n      return store[key] || (store[key] = value !== undefined ? value : {});\n    })('versions', []).push({\n      version: _core.version,\n      mode: _library ? 'pure' : 'global',\n      copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n    });\n  });\n\n  var id = 0;\n  var px = Math.random();\n\n  var _uid = function _uid(key) {\n    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n  };\n\n  var _wks = createCommonjsModule(function (module) {\n    var store = _shared('wks');\n\n    var Symbol = _global.Symbol;\n    var USE_SYMBOL = typeof Symbol == 'function';\n\n    var $exports = module.exports = function (name) {\n      return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n    };\n\n    $exports.store = store;\n  });\n\n  var _isObject = function _isObject(it) {\n    return typeof it === 'object' ? it !== null : typeof it === 'function';\n  };\n\n  var _anObject = function _anObject(it) {\n    if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n    return it;\n  };\n\n  var _fails = function _fails(exec) {\n    try {\n      return !!exec();\n    } catch (e) {\n      return true;\n    }\n  }; // Thank's IE8 for his funny defineProperty\n\n\n  var _descriptors = !_fails(function () {\n    return Object.defineProperty({}, 'a', {\n      get: function get() {\n        return 7;\n      }\n    }).a != 7;\n  });\n\n  var document$1 = _global.document; // typeof document.createElement is 'object' in old IE\n\n  var is = _isObject(document$1) && _isObject(document$1.createElement);\n\n  var _domCreate = function _domCreate(it) {\n    return is ? document$1.createElement(it) : {};\n  };\n\n  var _ie8DomDefine = !_descriptors && !_fails(function () {\n    return Object.defineProperty(_domCreate('div'), 'a', {\n      get: function get() {\n        return 7;\n      }\n    }).a != 7;\n  }); // 7.1.1 ToPrimitive(input [, PreferredType])\n  // instead of the ES6 spec version, we didn't implement @@toPrimitive case\n  // and the second argument - flag - preferred type is a string\n\n\n  var _toPrimitive = function _toPrimitive(it, S) {\n    if (!_isObject(it)) return it;\n    var fn, val;\n    if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n    if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n    if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n    throw TypeError(\"Can't convert object to primitive value\");\n  };\n\n  var dP = Object.defineProperty;\n  var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n    _anObject(O);\n\n    P = _toPrimitive(P, true);\n\n    _anObject(Attributes);\n\n    if (_ie8DomDefine) try {\n      return dP(O, P, Attributes);\n    } catch (e) {\n      /* empty */\n    }\n    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n    if ('value' in Attributes) O[P] = Attributes.value;\n    return O;\n  };\n  var _objectDp = {\n    f: f\n  };\n\n  var _propertyDesc = function _propertyDesc(bitmap, value) {\n    return {\n      enumerable: !(bitmap & 1),\n      configurable: !(bitmap & 2),\n      writable: !(bitmap & 4),\n      value: value\n    };\n  };\n\n  var _hide = _descriptors ? function (object, key, value) {\n    return _objectDp.f(object, key, _propertyDesc(1, value));\n  } : function (object, key, value) {\n    object[key] = value;\n    return object;\n  }; // 22.1.3.31 Array.prototype[@@unscopables]\n\n\n  var UNSCOPABLES = _wks('unscopables');\n\n  var ArrayProto = Array.prototype;\n  if (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\n\n  var _addToUnscopables = function _addToUnscopables(key) {\n    ArrayProto[UNSCOPABLES][key] = true;\n  };\n\n  var _iterStep = function _iterStep(done, value) {\n    return {\n      value: value,\n      done: !!done\n    };\n  };\n\n  var _iterators = {};\n  var toString = {}.toString;\n\n  var _cof = function _cof(it) {\n    return toString.call(it).slice(8, -1);\n  }; // fallback for non-array-like ES3 and non-enumerable old V8 strings\n  // eslint-disable-next-line no-prototype-builtins\n\n\n  var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n    return _cof(it) == 'String' ? it.split('') : Object(it);\n  }; // 7.2.1 RequireObjectCoercible(argument)\n\n\n  var _defined = function _defined(it) {\n    if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n    return it;\n  }; // to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\n  var _toIobject = function _toIobject(it) {\n    return _iobject(_defined(it));\n  };\n\n  var hasOwnProperty = {}.hasOwnProperty;\n\n  var _has = function _has(it, key) {\n    return hasOwnProperty.call(it, key);\n  };\n\n  var _redefine = createCommonjsModule(function (module) {\n    var SRC = _uid('src');\n\n    var TO_STRING = 'toString';\n    var $toString = Function[TO_STRING];\n    var TPL = ('' + $toString).split(TO_STRING);\n\n    _core.inspectSource = function (it) {\n      return $toString.call(it);\n    };\n\n    (module.exports = function (O, key, val, safe) {\n      var isFunction = typeof val == 'function';\n      if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n      if (O[key] === val) return;\n      if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\n      if (O === _global) {\n        O[key] = val;\n      } else if (!safe) {\n        delete O[key];\n\n        _hide(O, key, val);\n      } else if (O[key]) {\n        O[key] = val;\n      } else {\n        _hide(O, key, val);\n      } // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\n    })(Function.prototype, TO_STRING, function toString() {\n      return typeof this == 'function' && this[SRC] || $toString.call(this);\n    });\n  });\n\n  var _aFunction = function _aFunction(it) {\n    if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n    return it;\n  }; // optional / simple context binding\n\n\n  var _ctx = function _ctx(fn, that, length) {\n    _aFunction(fn);\n\n    if (that === undefined) return fn;\n\n    switch (length) {\n      case 1:\n        return function (a) {\n          return fn.call(that, a);\n        };\n\n      case 2:\n        return function (a, b) {\n          return fn.call(that, a, b);\n        };\n\n      case 3:\n        return function (a, b, c) {\n          return fn.call(that, a, b, c);\n        };\n    }\n\n    return function ()\n    /* ...args */\n    {\n      return fn.apply(that, arguments);\n    };\n  };\n\n  var PROTOTYPE = 'prototype';\n\n  var $export = function $export(type, name, source) {\n    var IS_FORCED = type & $export.F;\n    var IS_GLOBAL = type & $export.G;\n    var IS_STATIC = type & $export.S;\n    var IS_PROTO = type & $export.P;\n    var IS_BIND = type & $export.B;\n    var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n    var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n    var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n    var key, own, out, exp;\n    if (IS_GLOBAL) source = name;\n\n    for (key in source) {\n      // contains in native\n      own = !IS_FORCED && target && target[key] !== undefined; // export native or passed\n\n      out = (own ? target : source)[key]; // bind timers to global for call from export context\n\n      exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out; // extend global\n\n      if (target) _redefine(target, key, out, type & $export.U); // export\n\n      if (exports[key] != out) _hide(exports, key, exp);\n      if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n    }\n  };\n\n  _global.core = _core; // type bitmap\n\n  $export.F = 1; // forced\n\n  $export.G = 2; // global\n\n  $export.S = 4; // static\n\n  $export.P = 8; // proto\n\n  $export.B = 16; // bind\n\n  $export.W = 32; // wrap\n\n  $export.U = 64; // safe\n\n  $export.R = 128; // real proto method for `library`\n\n  var _export = $export; // 7.1.4 ToInteger\n\n  var ceil = Math.ceil;\n  var floor = Math.floor;\n\n  var _toInteger = function _toInteger(it) {\n    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n  }; // 7.1.15 ToLength\n\n\n  var min = Math.min;\n\n  var _toLength = function _toLength(it) {\n    return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n  };\n\n  var max = Math.max;\n  var min$1 = Math.min;\n\n  var _toAbsoluteIndex = function _toAbsoluteIndex(index, length) {\n    index = _toInteger(index);\n    return index < 0 ? max(index + length, 0) : min$1(index, length);\n  }; // false -> Array#indexOf\n  // true  -> Array#includes\n\n\n  var _arrayIncludes = function _arrayIncludes(IS_INCLUDES) {\n    return function ($this, el, fromIndex) {\n      var O = _toIobject($this);\n\n      var length = _toLength(O.length);\n\n      var index = _toAbsoluteIndex(fromIndex, length);\n\n      var value; // Array#includes uses SameValueZero equality algorithm\n      // eslint-disable-next-line no-self-compare\n\n      if (IS_INCLUDES && el != el) while (length > index) {\n        value = O[index++]; // eslint-disable-next-line no-self-compare\n\n        if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not\n      } else for (; length > index; index++) {\n        if (IS_INCLUDES || index in O) {\n          if (O[index] === el) return IS_INCLUDES || index || 0;\n        }\n      }\n      return !IS_INCLUDES && -1;\n    };\n  };\n\n  var shared = _shared('keys');\n\n  var _sharedKey = function _sharedKey(key) {\n    return shared[key] || (shared[key] = _uid(key));\n  };\n\n  var arrayIndexOf = _arrayIncludes(false);\n\n  var IE_PROTO = _sharedKey('IE_PROTO');\n\n  var _objectKeysInternal = function _objectKeysInternal(object, names) {\n    var O = _toIobject(object);\n\n    var i = 0;\n    var result = [];\n    var key;\n\n    for (key in O) {\n      if (key != IE_PROTO) _has(O, key) && result.push(key);\n    } // Don't enum bug & hidden keys\n\n\n    while (names.length > i) {\n      if (_has(O, key = names[i++])) {\n        ~arrayIndexOf(result, key) || result.push(key);\n      }\n    }\n\n    return result;\n  }; // IE 8- don't enum bug keys\n\n\n  var _enumBugKeys = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(','); // 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n  var _objectKeys = Object.keys || function keys(O) {\n    return _objectKeysInternal(O, _enumBugKeys);\n  };\n\n  var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n    _anObject(O);\n\n    var keys = _objectKeys(Properties);\n\n    var length = keys.length;\n    var i = 0;\n    var P;\n\n    while (length > i) {\n      _objectDp.f(O, P = keys[i++], Properties[P]);\n    }\n\n    return O;\n  };\n\n  var document$2 = _global.document;\n\n  var _html = document$2 && document$2.documentElement; // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n  var IE_PROTO$1 = _sharedKey('IE_PROTO');\n\n  var Empty = function Empty() {\n    /* empty */\n  };\n\n  var PROTOTYPE$1 = 'prototype'; // Create object with fake `null` prototype: use iframe Object with cleared prototype\n\n  var _createDict = function createDict() {\n    // Thrash, waste and sodomy: IE GC bug\n    var iframe = _domCreate('iframe');\n\n    var i = _enumBugKeys.length;\n    var lt = '<';\n    var gt = '>';\n    var iframeDocument;\n    iframe.style.display = 'none';\n\n    _html.appendChild(iframe);\n\n    iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n    // createDict = iframe.contentWindow.Object;\n    // html.removeChild(iframe);\n\n    iframeDocument = iframe.contentWindow.document;\n    iframeDocument.open();\n    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n    iframeDocument.close();\n    _createDict = iframeDocument.F;\n\n    while (i--) {\n      delete _createDict[PROTOTYPE$1][_enumBugKeys[i]];\n    }\n\n    return _createDict();\n  };\n\n  var _objectCreate = Object.create || function create(O, Properties) {\n    var result;\n\n    if (O !== null) {\n      Empty[PROTOTYPE$1] = _anObject(O);\n      result = new Empty();\n      Empty[PROTOTYPE$1] = null; // add \"__proto__\" for Object.getPrototypeOf polyfill\n\n      result[IE_PROTO$1] = O;\n    } else result = _createDict();\n\n    return Properties === undefined ? result : _objectDps(result, Properties);\n  };\n\n  var def = _objectDp.f;\n\n  var TAG = _wks('toStringTag');\n\n  var _setToStringTag = function _setToStringTag(it, tag, stat) {\n    if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n      configurable: true,\n      value: tag\n    });\n  };\n\n  var IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\n  _hide(IteratorPrototype, _wks('iterator'), function () {\n    return this;\n  });\n\n  var _iterCreate = function _iterCreate(Constructor, NAME, next) {\n    Constructor.prototype = _objectCreate(IteratorPrototype, {\n      next: _propertyDesc(1, next)\n    });\n\n    _setToStringTag(Constructor, NAME + ' Iterator');\n  }; // 7.1.13 ToObject(argument)\n\n\n  var _toObject = function _toObject(it) {\n    return Object(_defined(it));\n  }; // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\n  var IE_PROTO$2 = _sharedKey('IE_PROTO');\n\n  var ObjectProto = Object.prototype;\n\n  var _objectGpo = Object.getPrototypeOf || function (O) {\n    O = _toObject(O);\n    if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n\n    if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n      return O.constructor.prototype;\n    }\n\n    return O instanceof Object ? ObjectProto : null;\n  };\n\n  var ITERATOR = _wks('iterator');\n\n  var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\n\n  var FF_ITERATOR = '@@iterator';\n  var KEYS = 'keys';\n  var VALUES = 'values';\n\n  var returnThis = function returnThis() {\n    return this;\n  };\n\n  var _iterDefine = function _iterDefine(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n    _iterCreate(Constructor, NAME, next);\n\n    var getMethod = function getMethod(kind) {\n      if (!BUGGY && kind in proto) return proto[kind];\n\n      switch (kind) {\n        case KEYS:\n          return function keys() {\n            return new Constructor(this, kind);\n          };\n\n        case VALUES:\n          return function values() {\n            return new Constructor(this, kind);\n          };\n      }\n\n      return function entries() {\n        return new Constructor(this, kind);\n      };\n    };\n\n    var TAG = NAME + ' Iterator';\n    var DEF_VALUES = DEFAULT == VALUES;\n    var VALUES_BUG = false;\n    var proto = Base.prototype;\n    var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n    var $default = $native || getMethod(DEFAULT);\n    var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n    var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n    var methods, key, IteratorPrototype; // Fix native\n\n    if ($anyNative) {\n      IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n\n      if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n        // Set @@toStringTag to native iterators\n        _setToStringTag(IteratorPrototype, TAG, true); // fix for some old engines\n\n\n        if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n      }\n    } // fix Array#{values, @@iterator}.name in V8 / FF\n\n\n    if (DEF_VALUES && $native && $native.name !== VALUES) {\n      VALUES_BUG = true;\n\n      $default = function values() {\n        return $native.call(this);\n      };\n    } // Define iterator\n\n\n    if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n      _hide(proto, ITERATOR, $default);\n    } // Plug for library\n\n\n    _iterators[NAME] = $default;\n    _iterators[TAG] = returnThis;\n\n    if (DEFAULT) {\n      methods = {\n        values: DEF_VALUES ? $default : getMethod(VALUES),\n        keys: IS_SET ? $default : getMethod(KEYS),\n        entries: $entries\n      };\n      if (FORCED) for (key in methods) {\n        if (!(key in proto)) _redefine(proto, key, methods[key]);\n      } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n    }\n\n    return methods;\n  }; // 22.1.3.4 Array.prototype.entries()\n  // 22.1.3.13 Array.prototype.keys()\n  // 22.1.3.29 Array.prototype.values()\n  // 22.1.3.30 Array.prototype[@@iterator]()\n\n\n  var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n    this._t = _toIobject(iterated); // target\n\n    this._i = 0; // next index\n\n    this._k = kind; // kind\n    // 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n  }, function () {\n    var O = this._t;\n    var kind = this._k;\n    var index = this._i++;\n\n    if (!O || index >= O.length) {\n      this._t = undefined;\n      return _iterStep(1);\n    }\n\n    if (kind == 'keys') return _iterStep(0, index);\n    if (kind == 'values') return _iterStep(0, O[index]);\n    return _iterStep(0, [index, O[index]]);\n  }, 'values'); // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n\n\n  _iterators.Arguments = _iterators.Array;\n\n  _addToUnscopables('keys');\n\n  _addToUnscopables('values');\n\n  _addToUnscopables('entries');\n\n  var ITERATOR$1 = _wks('iterator');\n\n  var TO_STRING_TAG = _wks('toStringTag');\n\n  var ArrayValues = _iterators.Array;\n  var DOMIterables = {\n    CSSRuleList: true,\n    // TODO: Not spec compliant, should be false.\n    CSSStyleDeclaration: false,\n    CSSValueList: false,\n    ClientRectList: false,\n    DOMRectList: false,\n    DOMStringList: false,\n    DOMTokenList: true,\n    DataTransferItemList: false,\n    FileList: false,\n    HTMLAllCollection: false,\n    HTMLCollection: false,\n    HTMLFormElement: false,\n    HTMLSelectElement: false,\n    MediaList: true,\n    // TODO: Not spec compliant, should be false.\n    MimeTypeArray: false,\n    NamedNodeMap: false,\n    NodeList: true,\n    PaintRequestList: false,\n    Plugin: false,\n    PluginArray: false,\n    SVGLengthList: false,\n    SVGNumberList: false,\n    SVGPathSegList: false,\n    SVGPointList: false,\n    SVGStringList: false,\n    SVGTransformList: false,\n    SourceBufferList: false,\n    StyleSheetList: true,\n    // TODO: Not spec compliant, should be false.\n    TextTrackCueList: false,\n    TextTrackList: false,\n    TouchList: false\n  };\n\n  for (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n    var NAME = collections[i];\n    var explicit = DOMIterables[NAME];\n    var Collection = _global[NAME];\n    var proto = Collection && Collection.prototype;\n    var key;\n\n    if (proto) {\n      if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n      if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n      _iterators[NAME] = ArrayValues;\n      if (explicit) for (key in es6_array_iterator) {\n        if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n      }\n    }\n  } // most Object methods by ES6 should accept primitives\n\n\n  var _objectSap = function _objectSap(KEY, exec) {\n    var fn = (_core.Object || {})[KEY] || Object[KEY];\n    var exp = {};\n    exp[KEY] = exec(fn);\n\n    _export(_export.S + _export.F * _fails(function () {\n      fn(1);\n    }), 'Object', exp);\n  }; // 19.1.2.14 Object.keys(O)\n\n\n  _objectSap('keys', function () {\n    return function keys(it) {\n      return _objectKeys(_toObject(it));\n    };\n  });\n\n  var f$1 = Object.getOwnPropertySymbols;\n  var _objectGops = {\n    f: f$1\n  };\n  var f$2 = {}.propertyIsEnumerable;\n  var _objectPie = {\n    f: f$2\n  }; // 19.1.2.1 Object.assign(target, source, ...)\n\n  var $assign = Object.assign; // should work with symbols and should have deterministic property order (V8 bug)\n\n  var _objectAssign = !$assign || _fails(function () {\n    var A = {};\n    var B = {}; // eslint-disable-next-line no-undef\n\n    var S = Symbol();\n    var K = 'abcdefghijklmnopqrst';\n    A[S] = 7;\n    K.split('').forEach(function (k) {\n      B[k] = k;\n    });\n    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n  }) ? function assign(target, source) {\n    // eslint-disable-line no-unused-vars\n    var T = _toObject(target);\n\n    var aLen = arguments.length;\n    var index = 1;\n    var getSymbols = _objectGops.f;\n    var isEnum = _objectPie.f;\n\n    while (aLen > index) {\n      var S = _iobject(arguments[index++]);\n\n      var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n      var length = keys.length;\n      var j = 0;\n      var key;\n\n      while (length > j) {\n        if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n      }\n    }\n\n    return T;\n  } : $assign; // 19.1.3.1 Object.assign(target, source)\n\n\n  _export(_export.S + _export.F, 'Object', {\n    assign: _objectAssign\n  });\n\n  var deepObjectsMerge = function deepObjectsMerge(target, source) {\n    // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\n    var _arr = Object.keys(source);\n\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var key = _arr[_i];\n\n      if (source[key] instanceof Object) {\n        Object.assign(source[key], deepObjectsMerge(target[key], source[key]));\n      }\n    } // Join `target` and modified `source`\n\n\n    Object.assign(target || {}, source);\n    return target;\n  }; // true  -> String#at\n  // false -> String#codePointAt\n\n\n  var _stringAt = function _stringAt(TO_STRING) {\n    return function (that, pos) {\n      var s = String(_defined(that));\n\n      var i = _toInteger(pos);\n\n      var l = s.length;\n      var a, b;\n      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n      a = s.charCodeAt(i);\n      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n    };\n  };\n\n  var at = _stringAt(true); // `AdvanceStringIndex` abstract operation\n  // https://tc39.github.io/ecma262/#sec-advancestringindex\n\n\n  var _advanceStringIndex = function _advanceStringIndex(S, index, unicode) {\n    return index + (unicode ? at(S, index).length : 1);\n  }; // getting tag from 19.1.3.6 Object.prototype.toString()\n\n\n  var TAG$1 = _wks('toStringTag'); // ES3 wrong here\n\n\n  var ARG = _cof(function () {\n    return arguments;\n  }()) == 'Arguments'; // fallback for IE11 Script Access Denied error\n\n  var tryGet = function tryGet(it, key) {\n    try {\n      return it[key];\n    } catch (e) {\n      /* empty */\n    }\n  };\n\n  var _classof = function _classof(it) {\n    var O, T, B;\n    return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T // builtinTag case\n    : ARG ? _cof(O) // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n  };\n\n  var builtinExec = RegExp.prototype.exec; // `RegExpExec` abstract operation\n  // https://tc39.github.io/ecma262/#sec-regexpexec\n\n  var _regexpExecAbstract = function _regexpExecAbstract(R, S) {\n    var exec = R.exec;\n\n    if (typeof exec === 'function') {\n      var result = exec.call(R, S);\n\n      if (typeof result !== 'object') {\n        throw new TypeError('RegExp exec method returned something other than an Object or null');\n      }\n\n      return result;\n    }\n\n    if (_classof(R) !== 'RegExp') {\n      throw new TypeError('RegExp#exec called on incompatible receiver');\n    }\n\n    return builtinExec.call(R, S);\n  }; // 21.2.5.3 get RegExp.prototype.flags\n\n\n  var _flags = function _flags() {\n    var that = _anObject(this);\n\n    var result = '';\n    if (that.global) result += 'g';\n    if (that.ignoreCase) result += 'i';\n    if (that.multiline) result += 'm';\n    if (that.unicode) result += 'u';\n    if (that.sticky) result += 'y';\n    return result;\n  };\n\n  var nativeExec = RegExp.prototype.exec; // This always refers to the native implementation, because the\n  // String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n  // which loads this file before patching the method.\n\n  var nativeReplace = String.prototype.replace;\n  var patchedExec = nativeExec;\n  var LAST_INDEX = 'lastIndex';\n\n  var UPDATES_LAST_INDEX_WRONG = function () {\n    var re1 = /a/,\n        re2 = /b*/g;\n    nativeExec.call(re1, 'a');\n    nativeExec.call(re2, 'a');\n    return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n  }(); // nonparticipating capturing group, copied from es5-shim's String#split patch.\n\n\n  var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n  var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\n  if (PATCH) {\n    patchedExec = function exec(str) {\n      var re = this;\n      var lastIndex, reCopy, match, i;\n\n      if (NPCG_INCLUDED) {\n        reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', _flags.call(re));\n      }\n\n      if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n      match = nativeExec.call(re, str);\n\n      if (UPDATES_LAST_INDEX_WRONG && match) {\n        re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n      }\n\n      if (NPCG_INCLUDED && match && match.length > 1) {\n        // Fix browsers whose `exec` methods don't consistently return `undefined`\n        // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n        // eslint-disable-next-line no-loop-func\n        nativeReplace.call(match[0], reCopy, function () {\n          for (i = 1; i < arguments.length - 2; i++) {\n            if (arguments[i] === undefined) match[i] = undefined;\n          }\n        });\n      }\n\n      return match;\n    };\n  }\n\n  var _regexpExec = patchedExec;\n\n  _export({\n    target: 'RegExp',\n    proto: true,\n    forced: _regexpExec !== /./.exec\n  }, {\n    exec: _regexpExec\n  });\n\n  var SPECIES = _wks('species');\n\n  var REPLACE_SUPPORTS_NAMED_GROUPS = !_fails(function () {\n    // #replace needs built-in support for named groups.\n    // #match works fine because it just return the exec results, even if it has\n    // a \"grops\" property.\n    var re = /./;\n\n    re.exec = function () {\n      var result = [];\n      result.groups = {\n        a: '7'\n      };\n      return result;\n    };\n\n    return ''.replace(re, '$<a>') !== '7';\n  });\n\n  var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = function () {\n    // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n    var re = /(?:)/;\n    var originalExec = re.exec;\n\n    re.exec = function () {\n      return originalExec.apply(this, arguments);\n    };\n\n    var result = 'ab'.split(re);\n    return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n  }();\n\n  var _fixReWks = function _fixReWks(KEY, length, exec) {\n    var SYMBOL = _wks(KEY);\n\n    var DELEGATES_TO_SYMBOL = !_fails(function () {\n      // String methods call symbol-named RegEp methods\n      var O = {};\n\n      O[SYMBOL] = function () {\n        return 7;\n      };\n\n      return ''[KEY](O) != 7;\n    });\n    var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !_fails(function () {\n      // Symbol-named RegExp methods call .exec\n      var execCalled = false;\n      var re = /a/;\n\n      re.exec = function () {\n        execCalled = true;\n        return null;\n      };\n\n      if (KEY === 'split') {\n        // RegExp[@@split] doesn't call the regex's exec method, but first creates\n        // a new one. We need to return the patched regex when creating the new one.\n        re.constructor = {};\n\n        re.constructor[SPECIES] = function () {\n          return re;\n        };\n      }\n\n      re[SYMBOL]('');\n      return !execCalled;\n    }) : undefined;\n\n    if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS || KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC) {\n      var nativeRegExpMethod = /./[SYMBOL];\n      var fns = exec(_defined, SYMBOL, ''[KEY], function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === _regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return {\n              done: true,\n              value: nativeRegExpMethod.call(regexp, str, arg2)\n            };\n          }\n\n          return {\n            done: true,\n            value: nativeMethod.call(str, regexp, arg2)\n          };\n        }\n\n        return {\n          done: false\n        };\n      });\n      var strfn = fns[0];\n      var rxfn = fns[1];\n\n      _redefine(String.prototype, KEY, strfn);\n\n      _hide(RegExp.prototype, SYMBOL, length == 2 // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) {\n        return rxfn.call(string, this, arg);\n      } // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) {\n        return rxfn.call(string, this);\n      });\n    }\n  };\n\n  var max$1 = Math.max;\n  var min$2 = Math.min;\n  var floor$1 = Math.floor;\n  var SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\n  var SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\n  var maybeToString = function maybeToString(it) {\n    return it === undefined ? it : String(it);\n  }; // @@replace logic\n\n\n  _fixReWks('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n    return [// `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);\n    }, // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = _anObject(regexp);\n\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n\n      var results = [];\n\n      while (true) {\n        var result = _regexpExecAbstract(rx, S);\n\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = _advanceStringIndex(S, _toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max$1(min$2(_toInteger(result.index), S.length), 0);\n        var captures = []; // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n\n        for (var j = 1; j < result.length; j++) {\n          captures.push(maybeToString(result[j]));\n        }\n\n        var namedCaptures = result.groups;\n\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }]; // https://tc39.github.io/ecma262/#sec-getsubstitution\n\n    function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n      var tailPos = position + matched.length;\n      var m = captures.length;\n      var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n\n      if (namedCaptures !== undefined) {\n        namedCaptures = _toObject(namedCaptures);\n        symbols = SUBSTITUTION_SYMBOLS;\n      }\n\n      return $replace.call(replacement, symbols, function (match, ch) {\n        var capture;\n\n        switch (ch.charAt(0)) {\n          case '$':\n            return '$';\n\n          case '&':\n            return matched;\n\n          case '`':\n            return str.slice(0, position);\n\n          case \"'\":\n            return str.slice(tailPos);\n\n          case '<':\n            capture = namedCaptures[ch.slice(1, -1)];\n            break;\n\n          default:\n            // \\d\\d?\n            var n = +ch;\n            if (n === 0) return match;\n\n            if (n > m) {\n              var f = floor$1(n / 10);\n              if (f === 0) return match;\n              if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n              return match;\n            }\n\n            capture = captures[n - 1];\n        }\n\n        return capture === undefined ? '' : capture;\n      });\n    }\n  }); // @@match logic\n\n\n  _fixReWks('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n    return [// `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    }, // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = _anObject(regexp);\n\n      var S = String(this);\n      if (!rx.global) return _regexpExecAbstract(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n\n      while ((result = _regexpExecAbstract(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = _advanceStringIndex(S, _toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n\n      return n === 0 ? null : A;\n    }];\n  }); // 7.2.8 IsRegExp(argument)\n\n\n  var MATCH = _wks('match');\n\n  var _isRegexp = function _isRegexp(it) {\n    var isRegExp;\n    return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n  }; // 7.3.20 SpeciesConstructor(O, defaultConstructor)\n\n\n  var SPECIES$1 = _wks('species');\n\n  var _speciesConstructor = function _speciesConstructor(O, D) {\n    var C = _anObject(O).constructor;\n\n    var S;\n    return C === undefined || (S = _anObject(C)[SPECIES$1]) == undefined ? D : _aFunction(S);\n  };\n\n  var $min = Math.min;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX$1 = 'lastIndex'; // eslint-disable-next-line no-empty\n\n  var SUPPORTS_Y = !!function () {\n    try {\n      return new RegExp('x', 'y');\n    } catch (e) {}\n  }(); // @@split logic\n\n  _fixReWks('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n    var internalSplit;\n\n    if ('abbc'[$SPLIT](/(b)*/)[1] == 'c' || 'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 || 'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 || '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 || '.'[$SPLIT](/()()/)[LENGTH] > 1 || ''[$SPLIT](/.?/)[LENGTH]) {\n      // based on es5-shim implementation, need to rework it\n      internalSplit = function internalSplit(separator, limit) {\n        var string = String(this);\n        if (separator === undefined && limit === 0) return []; // If `separator` is not a regex, use native split\n\n        if (!_isRegexp(separator)) return $split.call(string, separator, limit);\n        var output = [];\n        var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');\n        var lastLastIndex = 0;\n        var splitLimit = limit === undefined ? 4294967295 : limit >>> 0; // Make `global` and avoid `lastIndex` issues by working with a copy\n\n        var separatorCopy = new RegExp(separator.source, flags + 'g');\n        var match, lastIndex, lastLength;\n\n        while (match = _regexpExec.call(separatorCopy, string)) {\n          lastIndex = separatorCopy[LAST_INDEX$1];\n\n          if (lastIndex > lastLastIndex) {\n            output.push(string.slice(lastLastIndex, match.index));\n            if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n            lastLength = match[0][LENGTH];\n            lastLastIndex = lastIndex;\n            if (output[LENGTH] >= splitLimit) break;\n          }\n\n          if (separatorCopy[LAST_INDEX$1] === match.index) separatorCopy[LAST_INDEX$1]++; // Avoid an infinite loop\n        }\n\n        if (lastLastIndex === string[LENGTH]) {\n          if (lastLength || !separatorCopy.test('')) output.push('');\n        } else output.push(string.slice(lastLastIndex));\n\n        return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n      }; // Chakra, V8\n\n    } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n      internalSplit = function internalSplit(separator, limit) {\n        return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n      };\n    } else {\n      internalSplit = $split;\n    }\n\n    return [// `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined ? splitter.call(separator, O, limit) : internalSplit.call(String(O), separator, limit);\n    }, // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = _anObject(regexp);\n\n      var S = String(this);\n\n      var C = _speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') + (rx.multiline ? 'm' : '') + (rx.unicode ? 'u' : '') + (SUPPORTS_Y ? 'y' : 'g'); // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? 0xffffffff : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return _regexpExecAbstract(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n\n        var z = _regexpExecAbstract(splitter, SUPPORTS_Y ? S : S.slice(q));\n\n        var e;\n\n        if (z === null || (e = $min(_toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p) {\n          q = _advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n\n          q = p = e;\n        }\n      }\n\n      A.push(S.slice(p));\n      return A;\n    }];\n  });\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.8): get-css-custom-properties.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * @returns {string} css custom property name\r\n   * --------------------------------------------------------------------------\r\n   */\n\n\n  var getCssCustomProperties = function getCssCustomProperties() {\n    var cssCustomProperties = {};\n    var sheets = document.styleSheets;\n    var cssText = '';\n\n    for (var i = sheets.length - 1; i > -1; i--) {\n      var rules = sheets[i].cssRules;\n\n      for (var j = rules.length - 1; j > -1; j--) {\n        if (rules[j].selectorText === '.ie-custom-properties') {\n          cssText = rules[j].cssText;\n          break;\n        }\n      }\n\n      if (cssText) {\n        break;\n      }\n    }\n\n    cssText = cssText.substring(cssText.lastIndexOf('{') + 1, cssText.lastIndexOf('}'));\n    cssText.split(';').forEach(function (property) {\n      if (property) {\n        var name = property.split(': ')[0];\n        var value = property.split(': ')[1];\n\n        if (name && value) {\n          cssCustomProperties[\"--\" + name.trim()] = value.trim();\n        }\n      }\n    });\n    return cssCustomProperties;\n  };\n\n  var minIEVersion = 10;\n\n  var isIE1x = function isIE1x() {\n    return Boolean(document.documentMode) && document.documentMode >= minIEVersion;\n  };\n\n  var isCustomProperty = function isCustomProperty(property) {\n    return property.match(/^--.*/i);\n  };\n\n  var getStyle = function getStyle(property, element) {\n    if (element === void 0) {\n      element = document.body;\n    }\n\n    var style;\n\n    if (isCustomProperty(property) && isIE1x()) {\n      var cssCustomProperties = getCssCustomProperties();\n      style = cssCustomProperties[property];\n    } else {\n      style = window.getComputedStyle(element, null).getPropertyValue(property).replace(/^\\s/, '');\n    }\n\n    return style;\n  };\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.8): get-color.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n\n  var getColor = function getColor(rawProperty, element) {\n    if (element === void 0) {\n      element = document.body;\n    }\n\n    var property = \"--\" + rawProperty;\n    var style = getStyle(property, element);\n    return style ? style : rawProperty;\n  };\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.8): hex-to-rgb.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  /* eslint-disable no-magic-numbers */\n\n\n  var hexToRgb = function hexToRgb(color) {\n    if (typeof color === 'undefined') {\n      throw new Error('Hex color is not defined');\n    }\n\n    var hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i);\n\n    if (!hex) {\n      throw new Error(color + \" is not a valid hex color\");\n    }\n\n    var r;\n    var g;\n    var b;\n\n    if (color.length === 7) {\n      r = parseInt(color.substring(1, 3), 16);\n      g = parseInt(color.substring(3, 5), 16);\n      b = parseInt(color.substring(5, 7), 16);\n    } else {\n      r = parseInt(color.substring(1, 2), 16);\n      g = parseInt(color.substring(2, 3), 16);\n      b = parseInt(color.substring(3, 5), 16);\n    }\n\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \")\";\n  };\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.8): hex-to-rgba.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  /* eslint-disable no-magic-numbers */\n\n\n  var hexToRgba = function hexToRgba(color, opacity) {\n    if (opacity === void 0) {\n      opacity = 100;\n    }\n\n    if (typeof color === 'undefined') {\n      throw new Error('Hex color is not defined');\n    }\n\n    var hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i);\n\n    if (!hex) {\n      throw new Error(color + \" is not a valid hex color\");\n    }\n\n    var r;\n    var g;\n    var b;\n\n    if (color.length === 7) {\n      r = parseInt(color.substring(1, 3), 16);\n      g = parseInt(color.substring(3, 5), 16);\n      b = parseInt(color.substring(5, 7), 16);\n    } else {\n      r = parseInt(color.substring(1, 2), 16);\n      g = parseInt(color.substring(2, 3), 16);\n      b = parseInt(color.substring(3, 5), 16);\n    }\n\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + opacity / 100 + \")\";\n  }; // 21.2.5.3 get RegExp.prototype.flags()\n\n\n  if (_descriptors && /./g.flags != 'g') _objectDp.f(RegExp.prototype, 'flags', {\n    configurable: true,\n    get: _flags\n  });\n  var TO_STRING = 'toString';\n  var $toString = /./[TO_STRING];\n\n  var define = function define(fn) {\n    _redefine(RegExp.prototype, TO_STRING, fn, true);\n  }; // 21.2.5.14 RegExp.prototype.toString()\n\n\n  if (_fails(function () {\n    return $toString.call({\n      source: 'a',\n      flags: 'b'\n    }) != '/a/b';\n  })) {\n    define(function toString() {\n      var R = _anObject(this);\n\n      return '/'.concat(R.source, '/', 'flags' in R ? R.flags : !_descriptors && R instanceof RegExp ? _flags.call(R) : undefined);\n    }); // FF44- RegExp#toString has a wrong name\n  } else if ($toString.name != TO_STRING) {\n    define(function toString() {\n      return $toString.call(this);\n    });\n  }\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI (v2.1.8): rgb-to-hex.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  /* eslint-disable no-magic-numbers */\n\n\n  var rgbToHex = function rgbToHex(color) {\n    if (typeof color === 'undefined') {\n      throw new Error('Hex color is not defined');\n    }\n\n    if (color === 'transparent') {\n      return '#00000000';\n    }\n\n    var rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n\n    if (!rgb) {\n      throw new Error(color + \" is not a valid rgb color\");\n    }\n\n    var r = \"0\" + parseInt(rgb[1], 10).toString(16);\n    var g = \"0\" + parseInt(rgb[2], 10).toString(16);\n    var b = \"0\" + parseInt(rgb[3], 10).toString(16);\n    return \"#\" + r.slice(-2) + g.slice(-2) + b.slice(-2);\n  };\n\n  exports.asideMenuCssClasses = asideMenuCssClasses;\n  exports.checkBreakpoint = checkBreakpoint;\n  exports.sidebarCssClasses = sidebarCssClasses;\n  exports.validBreakpoints = validBreakpoints;\n  exports.deepObjectsMerge = deepObjectsMerge;\n  exports.getColor = getColor;\n  exports.getStyle = getStyle;\n  exports.hexToRgb = hexToRgb;\n  exports.hexToRgba = hexToRgba;\n  exports.rgbToHex = rgbToHex;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Target } from 'react-popper';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Button from './Button';\nvar propTypes = {\n  caret: PropTypes.bool,\n  color: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  'aria-haspopup': PropTypes.bool,\n  split: PropTypes.bool,\n  tag: tagPropType,\n  nav: PropTypes.bool\n};\nvar defaultProps = {\n  'aria-haspopup': true,\n  color: 'secondary'\n};\nvar contextTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n  inNavbar: PropTypes.bool.isRequired\n};\n\nvar DropdownToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(DropdownToggle, _React$Component);\n\n  function DropdownToggle(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = DropdownToggle.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.nav && !this.props.tag) {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this.context.toggle(e);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        color = _this$props.color,\n        cssModule = _this$props.cssModule,\n        caret = _this$props.caret,\n        split = _this$props.split,\n        nav = _this$props.nav,\n        tag = _this$props.tag,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"color\", \"cssModule\", \"caret\", \"split\", \"nav\", \"tag\"]);\n\n    var ariaLabel = props['aria-label'] || 'Toggle Dropdown';\n    var classes = mapToCssModules(classNames(className, {\n      'dropdown-toggle': caret || split,\n      'dropdown-toggle-split': split,\n      'nav-link': nav\n    }), cssModule);\n    var children = props.children || React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, ariaLabel);\n    var Tag;\n\n    if (nav && !tag) {\n      Tag = 'a';\n      props.href = '#';\n    } else if (!tag) {\n      Tag = Button;\n      props.color = color;\n      props.cssModule = cssModule;\n    } else {\n      Tag = tag;\n    }\n\n    if (this.context.inNavbar) {\n      return React.createElement(Tag, _extends({}, props, {\n        className: classes,\n        onClick: this.onClick,\n        \"aria-expanded\": this.context.isOpen,\n        children: children\n      }));\n    }\n\n    return React.createElement(Target, _extends({}, props, {\n      className: classes,\n      component: Tag,\n      onClick: this.onClick,\n      \"aria-expanded\": this.context.isOpen,\n      children: children\n    }));\n  };\n\n  return DropdownToggle;\n}(React.Component);\n\nDropdownToggle.propTypes = propTypes;\nDropdownToggle.defaultProps = defaultProps;\nDropdownToggle.contextTypes = contextTypes;\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Popper } from 'react-popper';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  children: PropTypes.node.isRequired,\n  right: PropTypes.bool,\n  flip: PropTypes.bool,\n  modifiers: PropTypes.object,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  persist: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  flip: true\n};\nvar contextTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']).isRequired,\n  inNavbar: PropTypes.bool.isRequired\n};\nvar noFlipModifier = {\n  flip: {\n    enabled: false\n  }\n};\nvar directionPositionMap = {\n  up: 'top',\n  left: 'left',\n  right: 'right',\n  down: 'bottom'\n};\n\nvar DropdownMenu = function DropdownMenu(props, context) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      right = props.right,\n      tag = props.tag,\n      flip = props.flip,\n      modifiers = props.modifiers,\n      persist = props.persist,\n      attrs = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"right\", \"tag\", \"flip\", \"modifiers\", \"persist\"]);\n\n  var classes = mapToCssModules(classNames(className, 'dropdown-menu', {\n    'dropdown-menu-right': right,\n    show: context.isOpen\n  }), cssModule);\n  var Tag = tag;\n\n  if (persist || context.isOpen && !context.inNavbar) {\n    Tag = Popper;\n    var position1 = directionPositionMap[context.direction] || 'bottom';\n    var position2 = right ? 'end' : 'start';\n    attrs.placement = position1 + \"-\" + position2;\n    attrs.component = tag;\n    attrs.modifiers = !flip ? _objectSpread({}, modifiers, noFlipModifier) : modifiers;\n  }\n\n  return React.createElement(Tag, _extends({\n    tabIndex: \"-1\",\n    role: \"menu\"\n  }, attrs, {\n    \"aria-hidden\": !context.isOpen,\n    className: classes,\n    \"x-placement\": attrs.placement\n  }));\n};\n\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\nDropdownMenu.contextTypes = contextTypes;\nexport default DropdownMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  divider: PropTypes.bool,\n  tag: tagPropType,\n  header: PropTypes.bool,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  toggle: PropTypes.bool\n};\nvar contextTypes = {\n  toggle: PropTypes.func\n};\nvar defaultProps = {\n  tag: 'button',\n  toggle: true\n};\n\nvar DropdownItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(DropdownItem, _React$Component);\n\n  function DropdownItem(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTabIndex = _this.getTabIndex.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = DropdownItem.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled || this.props.header || this.props.divider) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (this.props.toggle) {\n      this.context.toggle(e);\n    }\n  };\n\n  _proto.getTabIndex = function getTabIndex() {\n    if (this.props.disabled || this.props.header || this.props.divider) {\n      return '-1';\n    }\n\n    return '0';\n  };\n\n  _proto.render = function render() {\n    var tabIndex = this.getTabIndex();\n    var role = tabIndex > -1 ? 'menuitem' : undefined;\n\n    var _omit = omit(this.props, ['toggle']),\n        className = _omit.className,\n        cssModule = _omit.cssModule,\n        divider = _omit.divider,\n        Tag = _omit.tag,\n        header = _omit.header,\n        active = _omit.active,\n        props = _objectWithoutPropertiesLoose(_omit, [\"className\", \"cssModule\", \"divider\", \"tag\", \"header\", \"active\"]);\n\n    var classes = mapToCssModules(classNames(className, {\n      disabled: props.disabled,\n      'dropdown-item': !divider && !header,\n      active: active,\n      'dropdown-header': header,\n      'dropdown-divider': divider\n    }), cssModule);\n\n    if (Tag === 'button') {\n      if (header) {\n        Tag = 'h6';\n      } else if (divider) {\n        Tag = 'div';\n      } else if (props.href) {\n        Tag = 'a';\n      }\n    }\n\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && (props.onClick || this.props.toggle) ? 'button' : undefined\n    }, props, {\n      tabIndex: tabIndex,\n      role: role,\n      className: classes,\n      onClick: this.onClick\n    }));\n  };\n\n  return DropdownItem;\n}(React.Component);\n\nDropdownItem.propTypes = propTypes;\nDropdownItem.defaultProps = defaultProps;\nDropdownItem.contextTypes = contextTypes;\nexport default DropdownItem;","'use strict';\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n\n    return targetComponent;\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport toNumber from 'lodash.tonumber';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div',\n  value: 0,\n  max: 100\n};\n\nvar Progress = function Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\"]);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var ProgressBar = multi ? children : React.createElement(\"div\", {\n    className: progressBarClasses,\n    style: {\n      width: percent + \"%\"\n    },\n    role: \"progressbar\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": max,\n    children: children\n  });\n\n  if (bar) {\n    return ProgressBar;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: progressClasses,\n    children: ProgressBar\n  }));\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\nexport default Progress;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nimport Route from \"./Route\";\n/**\n * A public higher-order component to access the imperative API\n */\n\nvar withRouter = function withRouter(Component) {\n  var C = function C(props) {\n    var wrappedComponentRef = props.wrappedComponentRef,\n        remainingProps = _objectWithoutProperties(props, [\"wrappedComponentRef\"]);\n\n    return React.createElement(Route, {\n      children: function children(routeComponentProps) {\n        return React.createElement(Component, _extends({}, remainingProps, routeComponentProps, {\n          ref: wrappedComponentRef\n        }));\n      }\n    });\n  };\n\n  C.displayName = \"withRouter(\" + (Component.displayName || Component.name) + \")\";\n  C.WrappedComponent = Component;\n  C.propTypes = {\n    wrappedComponentRef: PropTypes.func\n  };\n  return hoistStatics(C, Component);\n};\n\nexport default withRouter;","// Written in this round about way for babel-transform-imports\nimport withRouter from \"react-router/es/withRouter\";\nexport default withRouter;"],"sourceRoot":""}